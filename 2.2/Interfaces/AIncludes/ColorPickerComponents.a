;
;	File:		ColorPickerComponents.a
;
;	Contains:	Color Picker Component Interfaces.
;
;	Version:	Technology:	System 7.5
;				Package:	Universal Interfaces 2.2 in “MPW” on ETO #20
;
;	Copyright:	© 1984-1995 by Apple Computer, Inc.
;				All rights reserved.
;
;	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter
;				stack.  Include the file and version information (from above)
;				in the problem description and send to:
;					Internet:	apple.bugs@applelink.apple.com
;					AppleLink:	APPLE.BUGS
;
;

	IF &TYPE('__COLORPICKERCOMPONENTS__') = 'UNDEFINED' THEN
__COLORPICKERCOMPONENTS__ SET 1


	IF &TYPE('__COLORPICKER__') = 'UNDEFINED' THEN
	include 'ColorPicker.a'
	ENDIF
;		include 'Quickdraw.a'										;
;			include 'Types.a'										;
;				include 'ConditionalMacros.a'						;
;			include 'MixedMode.a'									;
;			include 'QuickdrawText.a'								;
;		include 'Windows.a'										;
;			include 'Memory.a'										;
;			include 'Events.a'										;
;				include 'OSUtils.a'								;
;			include 'Controls.a'									;
;				include 'Menus.a'									;
;		include 'Dialogs.a'										;
;			include 'Errors.a'										;
;			include 'TextEdit.a'									;
;		include 'CMApplication.a'									;
;			include 'Files.a'										;
;				include 'Finder.a'									;
;			include 'Printing.a'									;
;			include 'CMICCProfile.a'								;
;		include 'Balloons.a'										;

	IF &TYPE('__COMPONENTS__') = 'UNDEFINED' THEN
	include 'Components.a'
	ENDIF

kPickerComponentType			EQU		'cpkr'

kInitPicker						EQU		0
kTestGraphicsWorld				EQU		1
kGetDialog						EQU		2
kGetItemList					EQU		3
kGetColor						EQU		4
kSetColor						EQU		5
kEvent							EQU		6
kEdit							EQU		7
kSetVisibility					EQU		8
kDrawPicker						EQU		9
kItemHit						EQU		10
kSetBaseItem					EQU		11
kGetProfile						EQU		12
kSetProfile						EQU		13
kGetPrompt						EQU		14
kSetPrompt						EQU		15
kGetIconData					EQU		16
kGetEditMenuState				EQU		17
kSetOrigin						EQU		18
kExtractHelpItem				EQU		19

;
; pascal long InitPicker(ComponentInstance thePicker, PickerInitData *data)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	InitPicker
	ENDIF

;
; pascal DialogPtr GetDialog(ComponentInstance thePicker)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	GetDialog
	ENDIF

;
; pascal long TestGraphicsWorld(ComponentInstance thePicker, PickerInitData *data)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	TestGraphicsWorld
	ENDIF

;
; pascal long GetTheColor(ComponentInstance thePicker, ColorType whichColor, PMColorPtr color)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	GetTheColor
	ENDIF

;
; pascal long SetTheColor(ComponentInstance thePicker, ColorType whichColor, PMColorPtr color)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	SetTheColor
	ENDIF

;
; pascal long DoEvent(ComponentInstance thePicker, EventData *data)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DoEvent
	ENDIF

;
; pascal long DoEdit(ComponentInstance thePicker, EditData *data)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DoEdit
	ENDIF

;
; pascal long SetVisibility(ComponentInstance thePicker, Boolean visible)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	SetVisibility
	ENDIF

;
; pascal long DisplayPicker(ComponentInstance thePicker)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DisplayPicker
	ENDIF

;
; pascal long ItemHit(ComponentInstance thePicker, ItemHitData *data)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	ItemHit
	ENDIF

;
; pascal long GetItemList(ComponentInstance thePicker)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	GetItemList
	ENDIF

;
; pascal long SetBaseItem(ComponentInstance thePicker, short baseItem)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	SetBaseItem
	ENDIF

;
; pascal CMProfileHandle GetTheProfile(ComponentInstance thePicker)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	GetTheProfile
	ENDIF

;
; pascal long SetTheProfile(ComponentInstance thePicker, CMProfileHandle profile)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	SetTheProfile
	ENDIF

;
; pascal long GetPrompt(ComponentInstance thePicker, Str255 prompt)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	GetPrompt
	ENDIF

;
; pascal long SetPrompt(ComponentInstance thePicker, Str255 prompt)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	SetPrompt
	ENDIF

;
; pascal long GetIconData(ComponentInstance thePicker, PickerIconData *data)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	GetIconData
	ENDIF

;
; pascal long GetEditMenuState(ComponentInstance thePicker, PickerMenuState *mState)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	GetEditMenuState
	ENDIF

;
; pascal long SetTheOrigin(ComponentInstance thePicker, Point where)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	SetTheOrigin
	ENDIF

;
; pascal long ExtractHelpItem(ComponentInstance thePicker, short itemNo, short whichMsg, HelpItemInfo *helpInfo)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	ExtractHelpItem
	ENDIF

	ENDIF ; __COLORPICKERCOMPONENTS__

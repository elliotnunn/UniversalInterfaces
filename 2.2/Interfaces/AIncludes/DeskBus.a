;
;	File:		DeskBus.a
;
;	Contains:	Apple Desktop Bus (ADB) Interfaces.
;
;	Version:	Technology:	System 7.5
;				Package:	Universal Interfaces 2.2 in “MPW” on ETO #20
;
;	Copyright:	© 1984-1995 by Apple Computer, Inc.
;				All rights reserved.
;
;	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter
;				stack.  Include the file and version information (from above)
;				in the problem description and send to:
;					Internet:	apple.bugs@applelink.apple.com
;					AppleLink:	APPLE.BUGS
;
;

	IF &TYPE('__DESKBUS__') = 'UNDEFINED' THEN
__DESKBUS__ SET 1


	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN
	include 'Types.a'
	ENDIF
;		include 'ConditionalMacros.a'								;

	IF &TYPE('__MIXEDMODE__') = 'UNDEFINED' THEN
	include 'MixedMode.a'
	ENDIF
; typedef char 				ADBAddress
ADBOpBlock 				RECORD	0
dataBuffPtr				 ds.l   1		; offset: $0 (0)		; address of data buffer 
opServiceRtPtr			 ds.l   1		; offset: $4 (4)		; service routine pointer 
opDataAreaPtr			 ds.l   1		; offset: $8 (8)		; optional data area address 
sizeof					 EQU *			; size:   $C (12)
						ENDR

; typedef struct ADBOpBlock  ADBOpBlock
; typedef ADBOpBlock 		*ADBOpBPtr
ADBDataBlock 			RECORD	0
devType					 ds.b   1		; offset: $0 (0)		; device type 
origADBAddr				 ds.b   1		; offset: $1 (1)		; original ADB Address 
dbServiceRtPtr			 ds.l   1		; offset: $2 (2)		; service routine pointer 
dbDataAreaAddr			 ds.l   1		; offset: $6 (6)		; data area address 
sizeof					 EQU *			; size:   $A (10)
						ENDR

; typedef struct ADBDataBlock  ADBDataBlock
; typedef ADBDataBlock 		*ADBDBlkPtr
ADBSetInfoBlock 		RECORD	0
siService				 ds.l   1		; offset: $0 (0)		; service routine pointer 
siDataAreaAddr			 ds.l   1		; offset: $4 (4)		; data area address 
sizeof					 EQU *			; size:   $8 (8)
						ENDR

; typedef struct ADBSetInfoBlock  ADBSetInfoBlock
; typedef ADBSetInfoBlock 	*ADBSInfoPtr
;
; pascal void ADBReInit(void)
;
	IF ¬ GENERATINGCFM THEN
		_ADBReInit:	OPWORD	$A07B
	ELSE
		IMPORT_CFM_FUNCTION	ADBReInit
	ENDIF

;
; pascal OSErr ADBOp(Ptr data, ADBCompletionUPP compRout, Ptr buffer, short commandNum)
;
	IF ¬ GENERATINGCFM THEN
		_ADBOp:	OPWORD	$A07C
	ELSE
		IMPORT_CFM_FUNCTION	ADBOp
	ENDIF

;
; pascal short CountADBs(void)
;
	IF ¬ GENERATINGCFM THEN
		; returns: 
		;	 short         	<= D0
		_CountADBs:	OPWORD	$A077
	ELSE
		IMPORT_CFM_FUNCTION	CountADBs
	ENDIF

;
; pascal ADBAddress GetIndADB(ADBDataBlock *info, short devTableIndex)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 info          	=> A0
		;	 devTableIndex 	=> D0
		; returns: 
		;	 ADBAddress    	<= D0
		_GetIndADB:	OPWORD	$A078
	ELSE
		IMPORT_CFM_FUNCTION	GetIndADB
	ENDIF

;
; pascal OSErr GetADBInfo(ADBDataBlock *info, ADBAddress adbAddr)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 info          	=> A0
		;	 adbAddr       	=> D0
		; returns: 
		;	 OSErr         	<= D0
		_GetADBInfo:	OPWORD	$A079
	ELSE
		IMPORT_CFM_FUNCTION	GetADBInfo
	ENDIF

;
; pascal OSErr SetADBInfo(const ADBSetInfoBlock *info, ADBAddress adbAddr)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 info          	=> A0
		;	 adbAddr       	=> D0
		; returns: 
		;	 OSErr         	<= D0
		_SetADBInfo:	OPWORD	$A07A
	ELSE
		IMPORT_CFM_FUNCTION	SetADBInfo
	ENDIF

	ENDIF ; __DESKBUS__

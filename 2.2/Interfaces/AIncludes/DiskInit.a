;
;	File:		DiskInit.a
;
;	Contains:	Disk Initialization Package ('PACK' 2) Interfaces.
;
;	Version:	Technology:	System 7.5
;				Package:	Universal Interfaces 2.2 in “MPW” on ETO #20
;
;	Copyright:	© 1984-1995 by Apple Computer, Inc.
;				All rights reserved.
;
;	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter
;				stack.  Include the file and version information (from above)
;				in the problem description and send to:
;					Internet:	apple.bugs@applelink.apple.com
;					AppleLink:	APPLE.BUGS
;
;

	IF &TYPE('__DISKINIT__') = 'UNDEFINED' THEN
__DISKINIT__ SET 1


	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN
	include 'Types.a'
	ENDIF
;		include 'ConditionalMacros.a'								;
HFSDefaults 			RECORD	0
sigWord					 ds.b   2		; offset: $0 (0)		; signature word 
abSize					 ds.l   1		; offset: $2 (2)		; allocation block size in bytes 
clpSize					 ds.l   1		; offset: $6 (6)		; clump size in bytes 
nxFreeFN				 ds.l   1		; offset: $A (10)		; next free file number 
btClpSize				 ds.l   1		; offset: $E (14)		; B-Tree clump size in bytes 
rsrv1					 ds.w   1		; offset: $12 (18)		; reserved 
rsrv2					 ds.w   1		; offset: $14 (20)		; reserved 
rsrv3					 ds.w   1		; offset: $16 (22)		; reserved 
sizeof					 EQU *			; size:   $18 (24)
						ENDR

; typedef struct HFSDefaults  HFSDefaults
	IF SystemSevenOrLater  THEN
;
; pascal void DILoad(void)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DILoad
			moveq	#2,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DILoad
	ENDIF

;
; pascal void DIUnload(void)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIUnload
			moveq	#4,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIUnload
	ENDIF

;
; pascal short DIBadMount(Point where, long evtMessage)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIBadMount
			moveq	#0,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIBadMount
	ENDIF

;
; pascal OSErr DIFormat(short drvNum)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIFormat
			moveq	#6,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIFormat
	ENDIF

;
; pascal OSErr DIVerify(short drvNum)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIVerify
			moveq	#8,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIVerify
	ENDIF

;
; pascal OSErr DIZero(short drvNum, ConstStr255Param volName)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIZero
			moveq	#10,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIZero
	ENDIF

;
; pascal OSErr DIXFormat(short drvNum, Boolean fmtFlag, unsigned long fmtArg, unsigned long *actSize)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIXFormat
			moveq	#12,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIXFormat
	ENDIF

;
; pascal OSErr DIXZero(short drvNum, ConstStr255Param volName, short fsid, short mediaStatus, short volTypeSelector, unsigned long volSize, void *extendedInfoPtr)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIXZero
			moveq	#14,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIXZero
	ENDIF

;
; pascal OSErr DIReformat(short drvNum, short fsid, ConstStr255Param volName, ConstStr255Param msgText)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DIReformat
			moveq	#16,d0
			dc.w 	$3F00
			dc.w 	$A9E9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DIReformat
	ENDIF

	ELSE
;
; pascal void DILoad(void)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DILoad
	ENDIF

;
; pascal void DIUnload(void)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DIUnload
	ENDIF

;
; pascal short DIBadMount(Point where, long evtMessage)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DIBadMount
	ENDIF

;
; pascal OSErr DIFormat(short drvNum)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DIFormat
	ENDIF

;
; pascal OSErr DIVerify(short drvNum)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DIVerify
	ENDIF

;
; pascal OSErr DIZero(short drvNum, ConstStr255Param volName)
;
	IF GENERATINGCFM THEN
		IMPORT_CFM_FUNCTION	DIZero
	ENDIF

	ENDIF
	ENDIF ; __DISKINIT__

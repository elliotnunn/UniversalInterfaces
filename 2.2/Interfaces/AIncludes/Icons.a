;
;	File:		Icons.a
;
;	Contains:	Icon Utilities Interfaces.
;
;	Version:	Technology:	System 7.5
;				Package:	Universal Interfaces 2.2 in “MPW” on ETO #20
;
;	Copyright:	© 1984-1995 by Apple Computer, Inc.
;				All rights reserved.
;
;	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter
;				stack.  Include the file and version information (from above)
;				in the problem description and send to:
;					Internet:	apple.bugs@applelink.apple.com
;					AppleLink:	APPLE.BUGS
;
;

	IF &TYPE('__ICONS__') = 'UNDEFINED' THEN
__ICONS__ SET 1


	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN
	include 'Types.a'
	ENDIF
;		include 'ConditionalMacros.a'								;

	IF &TYPE('__QUICKDRAW__') = 'UNDEFINED' THEN
	include 'Quickdraw.a'
	ENDIF
;		include 'MixedMode.a'										;
;		include 'QuickdrawText.a'									;

; The following are icons for which there are both icon suites and SICNs. 
kGenericDocumentIconResource	EQU		-4000
kGenericStationeryIconResource	EQU		-3985
kGenericEditionFileIconResource	EQU		-3989
kGenericApplicationIconResource	EQU		-3996
kGenericDeskAccessoryIconResource EQU		-3991
kGenericFolderIconResource		EQU		-3999
kPrivateFolderIconResource		EQU		-3994
kFloppyIconResource				EQU		-3998
kTrashIconResource				EQU		-3993
kGenericRAMDiskIconResource		EQU		-3988
kGenericCDROMIconResource		EQU		-3987
; The following are icons for which there are SICNs only. 
kDesktopIconResource			EQU		-3992
kOpenFolderIconResource			EQU		-3997
kGenericHardDiskIconResource	EQU		-3995
kGenericFileServerIconResource	EQU		-3972
kGenericSuitcaseIconResource	EQU		-3970
kGenericMoverObjectIconResource	EQU		-3969
; The following are icons for which there are icon suites only. 
kGenericPreferencesIconResource	EQU		-3971
kGenericQueryDocumentIconResource EQU		-16506
kGenericExtensionIconResource	EQU		-16415
kSystemFolderIconResource		EQU		-3983
kAppleMenuFolderIconResource	EQU		-3982

; Obsolete. Use named constants defined above. 
genericDocumentIconResource		EQU		kGenericDocumentIconResource
genericStationeryIconResource	EQU		kGenericStationeryIconResource
genericEditionFileIconResource	EQU		kGenericEditionFileIconResource
genericApplicationIconResource	EQU		kGenericApplicationIconResource
genericDeskAccessoryIconResource EQU		kGenericDeskAccessoryIconResource
genericFolderIconResource		EQU		kGenericFolderIconResource
privateFolderIconResource		EQU		kPrivateFolderIconResource
floppyIconResource				EQU		kFloppyIconResource
trashIconResource				EQU		kPrivateFolderIconResource
genericRAMDiskIconResource		EQU		kGenericRAMDiskIconResource
genericCDROMIconResource		EQU		kGenericCDROMIconResource
desktopIconResource				EQU		kDesktopIconResource
openFolderIconResource			EQU		kOpenFolderIconResource
genericHardDiskIconResource		EQU		kGenericHardDiskIconResource
genericFileServerIconResource	EQU		kGenericFileServerIconResource
genericSuitcaseIconResource		EQU		kGenericSuitcaseIconResource
genericMoverObjectIconResource	EQU		kGenericMoverObjectIconResource
genericPreferencesIconResource	EQU		kGenericPreferencesIconResource
genericQueryDocumentIconResource EQU		kGenericQueryDocumentIconResource
genericExtensionIconResource	EQU		kGenericExtensionIconResource
systemFolderIconResource		EQU		kSystemFolderIconResource
appleMenuFolderIconResource		EQU		kAppleMenuFolderIconResource

kStartupFolderIconResource		EQU		-3981
kOwnedFolderIconResource		EQU		-3980
kDropFolderIconResource			EQU		-3979
kSharedFolderIconResource		EQU		-3978
kMountedFolderIconResource		EQU		-3977
kControlPanelFolderIconResource	EQU		-3976
kPrintMonitorFolderIconResource	EQU		-3975
kPreferencesFolderIconResource	EQU		-3974
kExtensionsFolderIconResource	EQU		-3973
kFontsFolderIconResource		EQU		-3968
kFullTrashIconResource			EQU		-3984

; Obsolete. Use named constants defined above. 
startupFolderIconResource		EQU		kStartupFolderIconResource
ownedFolderIconResource			EQU		kOwnedFolderIconResource
dropFolderIconResource			EQU		kDropFolderIconResource
sharedFolderIconResource		EQU		kSharedFolderIconResource
mountedFolderIconResource		EQU		kMountedFolderIconResource
controlPanelFolderIconResource	EQU		kControlPanelFolderIconResource
printMonitorFolderIconResource	EQU		kPrintMonitorFolderIconResource
preferencesFolderIconResource	EQU		kPreferencesFolderIconResource
extensionsFolderIconResource	EQU		kExtensionsFolderIconResource
fontsFolderIconResource			EQU		kFontsFolderIconResource
fullTrashIconResource			EQU		kFullTrashIconResource

kLarge1BitMask					EQU		'ICN#'
kLarge4BitData					EQU		'icl4'
kLarge8BitData					EQU		'icl8'
kSmall1BitMask					EQU		'ics#'
kSmall4BitData					EQU		'ics4'
kSmall8BitData					EQU		'ics8'
kMini1BitMask					EQU		'icm#'
kMini4BitData					EQU		'icm4'
kMini8BitData					EQU		'icm8'

; Obsolete. Use names defined above. 
large1BitMask					EQU		kLarge1BitMask
large4BitData					EQU		kLarge4BitData
large8BitData					EQU		kLarge8BitData
small1BitMask					EQU		kSmall1BitMask
small4BitData					EQU		kSmall4BitData
small8BitData					EQU		kSmall8BitData
mini1BitMask					EQU		kMini1BitMask
mini4BitData					EQU		kMini4BitData
mini8BitData					EQU		kMini8BitData

;  alignment type values 
kAlignNone						EQU		$0
kAlignVerticalCenter			EQU		$1
kAlignTop						EQU		$2
kAlignBottom					EQU		$3
kAlignHorizontalCenter			EQU		$4
kAlignAbsoluteCenter			EQU		kAlignVerticalCenter | kAlignHorizontalCenter
kAlignCenterTop					EQU		kAlignTop | kAlignHorizontalCenter
kAlignCenterBottom				EQU		kAlignBottom | kAlignHorizontalCenter
kAlignLeft						EQU		$8
kAlignCenterLeft				EQU		kAlignVerticalCenter | kAlignLeft
kAlignTopLeft					EQU		kAlignTop | kAlignLeft
kAlignBottomLeft				EQU		kAlignBottom | kAlignLeft
kAlignRight						EQU		$C
kAlignCenterRight				EQU		kAlignVerticalCenter | kAlignRight
kAlignTopRight					EQU		kAlignTop | kAlignRight
kAlignBottomRight				EQU		kAlignBottom | kAlignRight

; Obsolete. Use names defined above. 
atNone							EQU		kAlignNone
atVerticalCenter				EQU		kAlignVerticalCenter
atTop							EQU		kAlignTop
atBottom						EQU		kAlignBottom
atHorizontalCenter				EQU		kAlignHorizontalCenter
atAbsoluteCenter				EQU		kAlignAbsoluteCenter
atCenterTop						EQU		kAlignCenterTop
atCenterBottom					EQU		kAlignCenterBottom
atLeft							EQU		kAlignLeft
atCenterLeft					EQU		kAlignCenterLeft
atTopLeft						EQU		kAlignTopLeft
atBottomLeft					EQU		kAlignBottomLeft
atRight							EQU		kAlignRight
atCenterRight					EQU		kAlignCenterRight
atTopRight						EQU		kAlignTopRight
atBottomRight					EQU		kAlignBottomRight

; typedef SInt16 			IconAlignmentType
;  transform type values  

kTransformNone					EQU		$0
kTransformDisabled				EQU		$1
kTransformOffline				EQU		$2
kTransformOpen					EQU		$3
kTransformLabel1				EQU		$0100
kTransformLabel2				EQU		$0200
kTransformLabel3				EQU		$0300
kTransformLabel4				EQU		$0400
kTransformLabel5				EQU		$0500
kTransformLabel6				EQU		$0600
kTransformLabel7				EQU		$0700
kTransformSelected				EQU		$4000
kTransformSelectedDisabled		EQU		kTransformSelected | kTransformDisabled
kTransformSelectedOffline		EQU		kTransformSelected | kTransformOffline
kTransformSelectedOpen			EQU		kTransformSelected | kTransformOpen

; Obsolete. Use names defined above. 
ttNone							EQU		kTransformNone
ttDisabled						EQU		kTransformDisabled
ttOffline						EQU		kTransformOffline
ttOpen							EQU		kTransformOpen
ttLabel1						EQU		kTransformLabel1
ttLabel2						EQU		kTransformLabel2
ttLabel3						EQU		kTransformLabel3
ttLabel4						EQU		kTransformLabel4
ttLabel5						EQU		kTransformLabel5
ttLabel6						EQU		kTransformLabel6
ttLabel7						EQU		kTransformLabel7
ttSelected						EQU		kTransformSelected
ttSelectedDisabled				EQU		kTransformSelectedDisabled
ttSelectedOffline				EQU		kTransformSelectedOffline
ttSelectedOpen					EQU		kTransformSelectedOpen

; typedef SInt16 			IconTransformType
;  Selector mask values  

kSelectorLarge1Bit				EQU		$00000001
kSelectorLarge4Bit				EQU		$00000002
kSelectorLarge8Bit				EQU		$00000004
kSelectorSmall1Bit				EQU		$00000100
kSelectorSmall4Bit				EQU		$00000200
kSelectorSmall8Bit				EQU		$00000400
kSelectorMini1Bit				EQU		$00010000
kSelectorMini4Bit				EQU		$00020000
kSelectorMini8Bit				EQU		$00040000
kSelectorAllLargeData			EQU		$000000FF
kSelectorAllSmallData			EQU		$0000FF00
kSelectorAllMiniData			EQU		$00FF0000
kSelectorAll1BitData			EQU		kSelectorLarge1Bit | kSelectorSmall1Bit | kSelectorMini1Bit
kSelectorAll4BitData			EQU		kSelectorLarge4Bit | kSelectorSmall4Bit | kSelectorMini4Bit
kSelectorAll8BitData			EQU		kSelectorLarge8Bit | kSelectorSmall8Bit | kSelectorMini8Bit
kSelectorAllAvailableData		EQU		$FFFFFFFF

; Obsolete. Use names defined above. 
svLarge1Bit						EQU		kSelectorLarge1Bit
svLarge4Bit						EQU		kSelectorLarge4Bit
svLarge8Bit						EQU		kSelectorLarge8Bit
svSmall1Bit						EQU		kSelectorSmall1Bit
svSmall4Bit						EQU		kSelectorSmall4Bit
svSmall8Bit						EQU		kSelectorSmall8Bit
svMini1Bit						EQU		kSelectorMini1Bit
svMini4Bit						EQU		kSelectorMini4Bit
svMini8Bit						EQU		kSelectorMini8Bit
svAllLargeData					EQU		kSelectorAllLargeData
svAllSmallData					EQU		kSelectorAllSmallData
svAllMiniData					EQU		kSelectorAllMiniData
svAll1BitData					EQU		kSelectorAll1BitData
svAll4BitData					EQU		kSelectorAll4BitData
svAll8BitData					EQU		kSelectorAll8BitData
svAllAvailableData				EQU		kSelectorAllAvailableData

; typedef UInt32 			IconSelectorValue
; typedef IconActionProcPtr  IconAction
; typedef IconGetterProcPtr  IconGetter
	IF ¬ OLDROUTINELOCATIONS  THEN
CIcon 					RECORD	0
iconPMap				 ds     PixMap	; offset: $0 (0)		;the icon's pixMap
iconMask				 ds     BitMap	; offset: $32 (50)		;the icon's mask
iconBMap				 ds     BitMap	; offset: $40 (64)		;the icon's bitMap
iconData				 ds.l   1		; offset: $4E (78)		;the icon's data
iconMaskData			 ds.w   1		; offset: $52 (82)		;icon's mask and BitMap data
sizeof					 EQU *			; size:   $54 (84)
						ENDR

; typedef struct CIcon 		CIcon, *CIconPtr, **CIconHandle
;
; pascal CIconHandle GetCIcon(SInt16 iconID)
;
	IF ¬ GENERATINGCFM THEN
		_GetCIcon:	OPWORD	$AA1E
	ELSE
		IMPORT_CFM_FUNCTION	GetCIcon
	ENDIF

;
; pascal void PlotCIcon(const Rect *theRect, CIconHandle theIcon)
;
	IF ¬ GENERATINGCFM THEN
		_PlotCIcon:	OPWORD	$AA1F
	ELSE
		IMPORT_CFM_FUNCTION	PlotCIcon
	ENDIF

;
; pascal void DisposeCIcon(CIconHandle theIcon)
;
	IF ¬ GENERATINGCFM THEN
		_DisposeCIcon:	OPWORD	$AA25
	ELSE
		IMPORT_CFM_FUNCTION	DisposeCIcon
	ENDIF

	ENDIF
;
; pascal Handle GetIcon(SInt16 iconID)
;
	IF ¬ GENERATINGCFM THEN
		_GetIcon:	OPWORD	$A9BB
	ELSE
		IMPORT_CFM_FUNCTION	GetIcon
	ENDIF

;
; pascal void PlotIcon(const Rect *theRect, Handle theIcon)
;
	IF ¬ GENERATINGCFM THEN
		_PlotIcon:	OPWORD	$A94B
	ELSE
		IMPORT_CFM_FUNCTION	PlotIcon
	ENDIF

;
; pascal OSErr PlotIconID(const Rect *theRect, IconAlignmentType align, IconTransformType transform, SInt16 theResID)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PlotIconID
			move.w	#$0500,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PlotIconID
	ENDIF

;
; pascal OSErr NewIconSuite(Handle *theIconSuite)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_NewIconSuite
			move.w	#$0207,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	NewIconSuite
	ENDIF

;
; pascal OSErr AddIconToSuite(Handle theIconData, Handle theSuite, ResType theType)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_AddIconToSuite
			move.w	#$0608,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	AddIconToSuite
	ENDIF

;
; pascal OSErr GetIconFromSuite(Handle *theIconData, Handle theSuite, ResType theType)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetIconFromSuite
			move.w	#$0609,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetIconFromSuite
	ENDIF

;
; pascal OSErr ForEachIconDo(Handle theSuite, IconSelectorValue selector, IconActionUPP action, void *yourDataPtr)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_ForEachIconDo
			move.w	#$080A,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	ForEachIconDo
	ENDIF

;
; pascal OSErr GetIconSuite(Handle *theIconSuite, SInt16 theResID, IconSelectorValue selector)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetIconSuite
			move.w	#$0501,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetIconSuite
	ENDIF

;
; pascal OSErr DisposeIconSuite(Handle theIconSuite, Boolean disposeData)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_DisposeIconSuite
			move.w	#$0302,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	DisposeIconSuite
	ENDIF

;
; pascal OSErr PlotIconSuite(const Rect *theRect, IconAlignmentType align, IconTransformType transform, Handle theIconSuite)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PlotIconSuite
			move.w	#$0603,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PlotIconSuite
	ENDIF

;
; pascal OSErr MakeIconCache(Handle *theHandle, IconGetterUPP makeIcon, void *yourDataPtr)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_MakeIconCache
			move.w	#$0604,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	MakeIconCache
	ENDIF

;
; pascal OSErr LoadIconCache(const Rect *theRect, IconAlignmentType align, IconTransformType transform, Handle theIconCache)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_LoadIconCache
			move.w	#$0606,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	LoadIconCache
	ENDIF

;
; pascal OSErr PlotIconMethod(const Rect *theRect, IconAlignmentType align, IconTransformType transform, IconGetterUPP theMethod, void *yourDataPtr)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PlotIconMethod
			move.w	#$0805,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PlotIconMethod
	ENDIF

;
; pascal OSErr GetLabel(SInt16 labelNumber, RGBColor *labelColor, Str255 labelString)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetLabel
			move.w	#$050B,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetLabel
	ENDIF

;
; pascal Boolean PtInIconID(Point testPt, const Rect *iconRect, IconAlignmentType align, SInt16 iconID)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PtInIconID
			move.w	#$060D,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PtInIconID
	ENDIF

;
; pascal Boolean PtInIconSuite(Point testPt, const Rect *iconRect, IconAlignmentType align, Handle theIconSuite)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PtInIconSuite
			move.w	#$070E,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PtInIconSuite
	ENDIF

;
; pascal Boolean PtInIconMethod(Point testPt, const Rect *iconRect, IconAlignmentType align, IconGetterUPP theMethod, void *yourDataPtr)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PtInIconMethod
			move.w	#$090F,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PtInIconMethod
	ENDIF

;
; pascal Boolean RectInIconID(const Rect *testRect, const Rect *iconRect, IconAlignmentType align, SInt16 iconID)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_RectInIconID
			move.w	#$0610,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	RectInIconID
	ENDIF

;
; pascal Boolean RectInIconSuite(const Rect *testRect, const Rect *iconRect, IconAlignmentType align, Handle theIconSuite)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_RectInIconSuite
			move.w	#$0711,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	RectInIconSuite
	ENDIF

;
; pascal Boolean RectInIconMethod(const Rect *testRect, const Rect *iconRect, IconAlignmentType align, IconGetterUPP theMethod, void *yourDataPtr)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_RectInIconMethod
			move.w	#$0912,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	RectInIconMethod
	ENDIF

;
; pascal OSErr IconIDToRgn(RgnHandle theRgn, const Rect *iconRect, IconAlignmentType align, SInt16 iconID)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_IconIDToRgn
			move.w	#$0613,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	IconIDToRgn
	ENDIF

;
; pascal OSErr IconSuiteToRgn(RgnHandle theRgn, const Rect *iconRect, IconAlignmentType align, Handle theIconSuite)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_IconSuiteToRgn
			move.w	#$0714,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	IconSuiteToRgn
	ENDIF

;
; pascal OSErr IconMethodToRgn(RgnHandle theRgn, const Rect *iconRect, IconAlignmentType align, IconGetterUPP theMethod, void *yourDataPtr)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_IconMethodToRgn
			move.w	#$0915,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	IconMethodToRgn
	ENDIF

;
; pascal OSErr SetSuiteLabel(Handle theSuite, SInt16 theLabel)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_SetSuiteLabel
			move.w	#$0316,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	SetSuiteLabel
	ENDIF

;
; pascal SInt16 GetSuiteLabel(Handle theSuite)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetSuiteLabel
			move.w	#$0217,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetSuiteLabel
	ENDIF

;
; pascal OSErr GetIconCacheData(Handle theCache, void **theData)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetIconCacheData
			move.w	#$0419,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetIconCacheData
	ENDIF

;
; pascal OSErr SetIconCacheData(Handle theCache, void *theData)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_SetIconCacheData
			move.w	#$041A,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	SetIconCacheData
	ENDIF

;
; pascal OSErr GetIconCacheProc(Handle theCache, IconGetterUPP *theProc)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetIconCacheProc
			move.w	#$041B,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetIconCacheProc
	ENDIF

;
; pascal OSErr SetIconCacheProc(Handle theCache, IconGetterUPP theProc)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_SetIconCacheProc
			move.w	#$041C,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	SetIconCacheProc
	ENDIF

;
; pascal OSErr PlotIconHandle(const Rect *theRect, IconAlignmentType align, IconTransformType transform, Handle theIcon)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PlotIconHandle
			move.w	#$061D,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PlotIconHandle
	ENDIF

;
; pascal OSErr PlotSICNHandle(const Rect *theRect, IconAlignmentType align, IconTransformType transform, Handle theSICN)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PlotSICNHandle
			move.w	#$061E,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PlotSICNHandle
	ENDIF

;
; pascal OSErr PlotCIconHandle(const Rect *theRect, IconAlignmentType align, IconTransformType transform, CIconHandle theCIcon)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_PlotCIconHandle
			move.w	#$061F,d0
			dc.w 	$ABC9
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	PlotCIconHandle
	ENDIF

	ENDIF ; __ICONS__

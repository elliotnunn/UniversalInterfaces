;
;	File:		Retrace.a
;
;	Contains:	Vertical Retrace Interfaces.
;
;	Version:	Technology:	System 7.5
;				Package:	Universal Interfaces 2.2 in “MPW” on ETO #20
;
;	Copyright:	© 1984-1995 by Apple Computer, Inc.
;				All rights reserved.
;
;	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter
;				stack.  Include the file and version information (from above)
;				in the problem description and send to:
;					Internet:	apple.bugs@applelink.apple.com
;					AppleLink:	APPLE.BUGS
;
;

	IF &TYPE('__RETRACE__') = 'UNDEFINED' THEN
__RETRACE__ SET 1


	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN
	include 'Types.a'
	ENDIF
;		include 'ConditionalMacros.a'								;

	IF &TYPE('__OSUTILS__') = 'UNDEFINED' THEN
	include 'OSUtils.a'
	ENDIF
;		include 'MixedMode.a'										;
;		include 'Memory.a'											;
; typedef struct VBLTask 	VBLTask, *VBLTaskPtr
VBLTask 				RECORD	0
qLink					 ds.l   1		; offset: $0 (0)
qType					 ds.w   1		; offset: $4 (4)
vblAddr					 ds.l   1		; offset: $6 (6)
vblCount				 ds.w   1		; offset: $A (10)
vblPhase				 ds.w   1		; offset: $C (12)
sizeof					 EQU *			; size:   $E (14)
						ENDR

;
; pascal QHdrPtr GetVBLQHdr(void)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetVBLQHdr
			dc.w 	$2EBC
			dc.w 	$0000
			dc.w 	$0160
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetVBLQHdr
	ENDIF

;
; pascal OSErr SlotVInstall(QElemPtr vblBlockPtr, short theSlot)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 vblBlockPtr   	=> A0
		;	 theSlot       	=> D0
		; returns: 
		;	 OSErr         	<= D0
		_SlotVInstall:	OPWORD	$A06F
	ELSE
		IMPORT_CFM_FUNCTION	SlotVInstall
	ENDIF

;
; pascal OSErr SlotVRemove(QElemPtr vblBlockPtr, short theSlot)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 vblBlockPtr   	=> A0
		;	 theSlot       	=> D0
		; returns: 
		;	 OSErr         	<= D0
		_SlotVRemove:	OPWORD	$A070
	ELSE
		IMPORT_CFM_FUNCTION	SlotVRemove
	ENDIF

;
; pascal OSErr AttachVBL(short theSlot)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 theSlot       	=> D0
		; returns: 
		;	 OSErr         	<= D0
		_AttachVBL:	OPWORD	$A071
	ELSE
		IMPORT_CFM_FUNCTION	AttachVBL
	ENDIF

;
; pascal OSErr DoVBLTask(short theSlot)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 theSlot       	=> D0
		; returns: 
		;	 OSErr         	<= D0
		_DoVBLTask:	OPWORD	$A072
	ELSE
		IMPORT_CFM_FUNCTION	DoVBLTask
	ENDIF

;
; pascal OSErr VInstall(QElemPtr vblTaskPtr)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 vblTaskPtr    	=> A0
		; returns: 
		;	 OSErr         	<= D0
		_VInstall:	OPWORD	$A033
	ELSE
		IMPORT_CFM_FUNCTION	VInstall
	ENDIF

;
; pascal OSErr VRemove(QElemPtr vblTaskPtr)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 vblTaskPtr    	=> A0
		; returns: 
		;	 OSErr         	<= D0
		_VRemove:	OPWORD	$A034
	ELSE
		IMPORT_CFM_FUNCTION	VRemove
	ENDIF

;
; Custom Glue for 68k.
;
	ENDIF ; __RETRACE__

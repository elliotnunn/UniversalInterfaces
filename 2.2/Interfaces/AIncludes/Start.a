;
;	File:		Start.a
;
;	Contains:	Start Manager Interfaces.
;
;	Version:	Technology:	System 7.5
;				Package:	Universal Interfaces 2.2 in “MPW” on ETO #20
;
;	Copyright:	© 1984-1995 by Apple Computer, Inc.
;				All rights reserved.
;
;	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter
;				stack.  Include the file and version information (from above)
;				in the problem description and send to:
;					Internet:	apple.bugs@applelink.apple.com
;					AppleLink:	APPLE.BUGS
;
;

	IF &TYPE('__START__') = 'UNDEFINED' THEN
__START__ SET 1


	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN
	include 'Types.a'
	ENDIF
;		include 'ConditionalMacros.a'								;
DefStartRec 			RECORD	0
sdExtDevID				 ds.b   1		; offset: $0 (0)
sdPartition				 ds.b   1		; offset: $1 (1)
sdSlotNum				 ds.b   1		; offset: $2 (2)
sdSRsrcID				 ds.b   1		; offset: $3 (3)
						 ORG 0
sdReserved1				 ds.b   1		; offset: $0 (0)
sdReserved2				 ds.b   1		; offset: $1 (1)
sdRefNum				 ds.w   1		; offset: $2 (2)
						 ORG 4
sizeof					 EQU *			; size:   $4 (4)
						ENDR

; typedef union DefStartRec  DefStartRec
; typedef DefStartRec 		*DefStartPtr
DefVideoRec 			RECORD	0
sdSlot					 ds.b   1		; offset: $0 (0)
sdsResource				 ds.b   1		; offset: $1 (1)
sizeof					 EQU *			; size:   $2 (2)
						ENDR

; typedef struct DefVideoRec  DefVideoRec
; typedef DefVideoRec 		*DefVideoPtr
DefOSRec 				RECORD	0
sdReserved				 ds.b   1		; offset: $0 (0)
sdOSType				 ds.b   1		; offset: $1 (1)
sizeof					 EQU *			; size:   $2 (2)
						ENDR

; typedef struct DefOSRec 	DefOSRec
; typedef DefOSRec 			*DefOSPtr
;
; pascal void GetDefaultStartup(DefStartPtr paramBlock)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 paramBlock    	=> A0
		_GetDefaultStartup:	OPWORD	$A07D
	ELSE
		IMPORT_CFM_FUNCTION	GetDefaultStartup
	ENDIF

;
; pascal void SetDefaultStartup(DefStartPtr paramBlock)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 paramBlock    	=> A0
		_SetDefaultStartup:	OPWORD	$A07E
	ELSE
		IMPORT_CFM_FUNCTION	SetDefaultStartup
	ENDIF

;
; pascal void GetVideoDefault(DefVideoPtr paramBlock)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 paramBlock    	=> A0
		_GetVideoDefault:	OPWORD	$A080
	ELSE
		IMPORT_CFM_FUNCTION	GetVideoDefault
	ENDIF

;
; pascal void SetVideoDefault(DefVideoPtr paramBlock)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 paramBlock    	=> A0
		_SetVideoDefault:	OPWORD	$A081
	ELSE
		IMPORT_CFM_FUNCTION	SetVideoDefault
	ENDIF

;
; pascal void GetOSDefault(DefOSPtr paramBlock)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 paramBlock    	=> A0
		_GetOSDefault:	OPWORD	$A084
	ELSE
		IMPORT_CFM_FUNCTION	GetOSDefault
	ENDIF

;
; pascal void SetOSDefault(DefOSPtr paramBlock)
;
	IF ¬ GENERATINGCFM THEN
		; parameters: 
		;	 paramBlock    	=> A0
		_SetOSDefault:	OPWORD	$A083
	ELSE
		IMPORT_CFM_FUNCTION	SetOSDefault
	ENDIF

;
; pascal void SetTimeout(short count)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_SetTimeout
			dc.w 	$307C
			dc.w 	$0001
			dc.w 	$A07F
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	SetTimeout
	ENDIF

;
; pascal void GetTimeout(short *count)
;
	IF ¬ GENERATINGCFM THEN
		Macro
		_GetTimeout
			dc.w 	$91C8
			dc.w 	$A07F
		EndM
	ELSE
		IMPORT_CFM_FUNCTION	GetTimeout
	ENDIF

	ENDIF ; __START__

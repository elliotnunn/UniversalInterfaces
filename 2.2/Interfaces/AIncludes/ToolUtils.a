;
;	File:		ToolUtils.a
;
;	Contains:	Toolbox Utilities Interfaces.
;
;	Version:	Technology:	System 7.5
;				Package:	Universal Interfaces 2.2 in “MPW” on ETO #20
;
;	Copyright:	© 1984-1995 by Apple Computer, Inc.
;				All rights reserved.
;
;	Bugs?:		If you find a problem with this file, use the Apple Bug Reporter
;				stack.  Include the file and version information (from above)
;				in the problem description and send to:
;					Internet:	apple.bugs@applelink.apple.com
;					AppleLink:	APPLE.BUGS
;
;

	IF &TYPE('__TOOLUTILS__') = 'UNDEFINED' THEN
__TOOLUTILS__ SET 1


	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN
	include 'Types.a'
	ENDIF
;		include 'ConditionalMacros.a'								;

	IF &TYPE('__OSUTILS__') = 'UNDEFINED' THEN
	include 'OSUtils.a'
	ENDIF
;		include 'MixedMode.a'										;
;		include 'Memory.a'											;

	IF &TYPE('__TEXTUTILS__') = 'UNDEFINED' THEN
	include 'TextUtils.a'
	ENDIF
;		include 'Script.a'											;
;			include 'Quickdraw.a'									;
;				include 'QuickdrawText.a'							;
;			include 'IntlResources.a'								;
;			include 'Events.a'										;

	IF &TYPE('__FIXMATH__') = 'UNDEFINED' THEN
	include 'FixMath.a'
	ENDIF
	IF OLDROUTINELOCATIONS  THEN

	IF &TYPE('__QUICKDRAW__') = 'UNDEFINED' THEN
	include 'Quickdraw.a'
	ENDIF

	IF &TYPE('__ICONS__') = 'UNDEFINED' THEN
	include 'Icons.a'
	ENDIF
	ENDIF
;
;	Note: 
;	
;	The following have moved to Icons.h: 	 PlotIcon and GetIcon
;	
;	The following have moved to Quickdraw.h: GetPattern, GetIndPattern, GetCursor, ShieldCursor, 
;											 GetPicture, DeltaPoint and ScreenResGetCursor
;
Int64Bit 				RECORD	0
hiLong					 ds.l   1		; offset: $0 (0)
loLong					 ds.l   1		; offset: $4 (4)
sizeof					 EQU *			; size:   $8 (8)
						ENDR

; typedef struct Int64Bit 	Int64Bit
;
; pascal Fixed FixRatio(short numer, short denom)
;
	IF ¬ GENERATINGCFM THEN
		_FixRatio:	OPWORD	$A869
	ELSE
		IMPORT_CFM_FUNCTION	FixRatio
	ENDIF

;
; pascal Fixed FixMul(Fixed a, Fixed b)
;
	IF ¬ GENERATINGCFM THEN
		_FixMul:	OPWORD	$A868
	ELSE
		IMPORT_CFM_FUNCTION	FixMul
	ENDIF

;
; pascal short FixRound(Fixed x)
;
	IF ¬ GENERATINGCFM THEN
		_FixRound:	OPWORD	$A86C
	ELSE
		IMPORT_CFM_FUNCTION	FixRound
	ENDIF

;
; pascal void PackBits(Ptr *srcPtr, Ptr *dstPtr, short srcBytes)
;
	IF ¬ GENERATINGCFM THEN
		_PackBits:	OPWORD	$A8CF
	ELSE
		IMPORT_CFM_FUNCTION	PackBits
	ENDIF

;
; pascal void UnpackBits(Ptr *srcPtr, Ptr *dstPtr, short dstBytes)
;
	IF ¬ GENERATINGCFM THEN
		_UnpackBits:	OPWORD	$A8D0
	ELSE
		IMPORT_CFM_FUNCTION	UnpackBits
	ENDIF

;
; pascal Boolean BitTst(const void *bytePtr, long bitNum)
;
	IF ¬ GENERATINGCFM THEN
		_BitTst:	OPWORD	$A85D
	ELSE
		IMPORT_CFM_FUNCTION	BitTst
	ENDIF

;
; pascal void BitSet(void *bytePtr, long bitNum)
;
	IF ¬ GENERATINGCFM THEN
		_BitSet:	OPWORD	$A85E
	ELSE
		IMPORT_CFM_FUNCTION	BitSet
	ENDIF

;
; pascal void BitClr(void *bytePtr, long bitNum)
;
	IF ¬ GENERATINGCFM THEN
		_BitClr:	OPWORD	$A85F
	ELSE
		IMPORT_CFM_FUNCTION	BitClr
	ENDIF

;
; pascal long BitAnd(long value1, long value2)
;
	IF ¬ GENERATINGCFM THEN
		_BitAnd:	OPWORD	$A858
	ELSE
		IMPORT_CFM_FUNCTION	BitAnd
	ENDIF

;
; pascal long BitOr(long value1, long value2)
;
	IF ¬ GENERATINGCFM THEN
		_BitOr:	OPWORD	$A85B
	ELSE
		IMPORT_CFM_FUNCTION	BitOr
	ENDIF

;
; pascal long BitXor(long value1, long value2)
;
	IF ¬ GENERATINGCFM THEN
		_BitXor:	OPWORD	$A859
	ELSE
		IMPORT_CFM_FUNCTION	BitXor
	ENDIF

;
; pascal long BitNot(long value)
;
	IF ¬ GENERATINGCFM THEN
		_BitNot:	OPWORD	$A85A
	ELSE
		IMPORT_CFM_FUNCTION	BitNot
	ENDIF

;
; pascal long BitShift(long value, short count)
;
	IF ¬ GENERATINGCFM THEN
		_BitShift:	OPWORD	$A85C
	ELSE
		IMPORT_CFM_FUNCTION	BitShift
	ENDIF

;
; pascal Fixed SlopeFromAngle(short angle)
;
	IF ¬ GENERATINGCFM THEN
		_SlopeFromAngle:	OPWORD	$A8BC
	ELSE
		IMPORT_CFM_FUNCTION	SlopeFromAngle
	ENDIF

;
; pascal short AngleFromSlope(Fixed slope)
;
	IF ¬ GENERATINGCFM THEN
		_AngleFromSlope:	OPWORD	$A8C4
	ELSE
		IMPORT_CFM_FUNCTION	AngleFromSlope
	ENDIF

	IF GENERATING68K  THEN
;
; pascal void LongMul(long a, long b, Int64Bit *result)
;
	IF ¬ GENERATINGCFM THEN
		_LongMul:	OPWORD	$A867
	ELSE
		IMPORT_CFM_FUNCTION	LongMul
	ENDIF

	ENDIF
	ENDIF ; __TOOLUTILS__

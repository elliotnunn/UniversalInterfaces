;
;	File:		Timer.a
;
;	Contains:	Time Manager interfaces.
;
;	Version:	Technology:	System 7.5
;				Release:	Universal Interfaces 3.0.1
;
;	Copyright:	© 1985-1993, 1995-1997 by Apple Computer, Inc., all rights reserved
;
;	Bugs?:		Please include the the file and version information (from above) with
;				the problem description.  Developers belonging to one of the Apple
;				developer programs can submit bug reports to:
;
;					devsupport@apple.com
;
;
	IF &TYPE('__TIMER__') = 'UNDEFINED' THEN
__TIMER__ SET 1

	IF &TYPE('__CONDITIONALMACROS__') = 'UNDEFINED' THEN
	include 'ConditionalMacros.a'
	ENDIF
	IF &TYPE('__TYPES__') = 'UNDEFINED' THEN
	include 'Types.a'
	ENDIF
	IF &TYPE('__OSUTILS__') = 'UNDEFINED' THEN
	include 'OSUtils.a'
	ENDIF


															; high bit of qType is set if task is active 
kTMTaskActive					EQU		$00008000


; typedef TMTask *						TMTaskPtr

TMTask					RECORD 0
qLink					 ds.l	1				; offset: $0 (0)
qType					 ds.w	1				; offset: $4 (4)
tmAddr					 ds.l	1				; offset: $6 (6)
tmCount					 ds.l	1				; offset: $A (10)
tmWakeUp				 ds.l	1				; offset: $E (14)
tmReserved				 ds.l	1				; offset: $12 (18)
sizeof					 EQU *					; size:   $16 (22)
						ENDR
;
; pascal void InsTime(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		_InsTime:	OPWORD	$A058
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION InsTime
	ENDIF

;
; pascal void InsXTime(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		_InsXTime:	OPWORD	$A458
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION InsXTime
	ENDIF

;
; pascal void PrimeTime(QElemPtr tmTaskPtr, long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		;	count           => D0
		_PrimeTime:	OPWORD	$A05A
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PrimeTime
	ENDIF

;
; pascal void RmvTime(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		_RmvTime:	OPWORD	$A059
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION RmvTime
	ENDIF

;
; pascal void Microseconds(UnsignedWide *microTickCount)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		_Microseconds:	OPWORD	$A193
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Microseconds
	ENDIF



	ENDIF ; __TIMER__ 


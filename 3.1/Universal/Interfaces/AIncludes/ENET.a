;
;	File:		ENET.a
;
;	Contains:	Ethernet Interfaces.
;
;	Version:	Technology:	System 7.5
;				Release:	Universal Interfaces 3.1
;
;	Copyright:	Â© 1990-1998 by Apple Computer, Inc., all rights reserved
;
;	Bugs?:		Please include the the file and version information (from above) with
;				the problem description.  Developers belonging to one of the Apple
;				developer programs can submit bug reports to:
;
;					devsupport@apple.com
;
;
	IF &TYPE('__ENET__') = 'UNDEFINED' THEN
__ENET__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__OSUTILS__') = 'UNDEFINED' THEN
	include 'OSUtils.a'
	ENDIF


ENetSetGeneral					EQU		253					;Set "general" mode
ENetGetInfo						EQU		252					;Get info
ENetRdCancel					EQU		251					;Cancel read
ENetRead						EQU		250					;Read
ENetWrite						EQU		249					;Write
ENetDetachPH					EQU		248					;Detach protocol handler
ENetAttachPH					EQU		247					;Attach protocol handler
ENetAddMulti					EQU		246					;Add a multicast address
ENetDelMulti					EQU		245					;Delete a multicast address

EAddrRType						EQU		'eadr'				;Alternate address resource type


; typedef EParamBlock *					EParamBlkPtr

EParamBlock				RECORD 0
qLink					 ds.l	1				; offset: $0 (0)		; General EParams
qType					 ds.w	1				; offset: $4 (4)		; queue type
ioTrap					 ds.w	1				; offset: $6 (6)		; routine trap
ioCmdAddr				 ds.l	1				; offset: $8 (8)		; routine address
ioCompletion			 ds.l	1				; offset: $C (12)		; completion routine
ioResult				 ds.w	1				; offset: $10 (16)		; result code
ioNamePtr				 ds.l	1				; offset: $12 (18)		; ->filename
ioVRefNum				 ds.w	1				; offset: $16 (22)		; volume reference or drive number
ioRefNum				 ds.w	1				; offset: $18 (24)		; driver reference number
csCode					 ds.w	1				; offset: $1A (26)		; Call command code
eProtType				 ds.w	1				; offset: $1C (28)		; Ethernet protocol type
ePointer				 ds.l	1				; offset: $1E (30)		; No support for PowerPC code
eBuffSize				 ds.w	1				; offset: $22 (34)		; buffer size
eDataSize				 ds.w	1				; offset: $24 (36)		; number of bytes read
						 ORG 28
eMultiAddr				 ds.b	6				; offset: $1C (28)		; Multicast Address
						 ORG 38
sizeof					 EQU *					; size:   $26 (38)
						ENDR
;
; pascal OSErr EWrite(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION EWrite
	ENDIF

;
; pascal OSErr EAttachPH(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION EAttachPH
	ENDIF

;
; pascal OSErr EDetachPH(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION EDetachPH
	ENDIF

;
; pascal OSErr ERead(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ERead
	ENDIF

;
; pascal OSErr ERdCancel(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ERdCancel
	ENDIF

;
; pascal OSErr EGetInfo(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION EGetInfo
	ENDIF

;
; pascal OSErr ESetGeneral(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ESetGeneral
	ENDIF

;
; pascal OSErr EAddMulti(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION EAddMulti
	ENDIF

;
; pascal OSErr EDelMulti(EParamBlkPtr thePBptr, Boolean async)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION EDelMulti
	ENDIF



	ENDIF ; __ENET__ 


;
;    File:       CFCharacterSet.a
;
;    Contains:   CoreFoundation character sets
;
;    Version:    Technology: Mac OS X
;                Release:    Universal Interfaces 3.3.2
;
;    Copyright:  Â© 1999-2000 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CFCHARACTERSET__') = 'UNDEFINED' THEN
__CFCHARACTERSET__ SET 1

	IF &TYPE('__CFBASE__') = 'UNDEFINED' THEN
	include 'CFBase.a'
	ENDIF
	IF &TYPE('__CFSTRING__') = 'UNDEFINED' THEN
	include 'CFString.a'
	ENDIF
	IF &TYPE('__CFDATA__') = 'UNDEFINED' THEN
	include 'CFData.a'
	ENDIF





;  Used by CFCharacterSetCreateWithPredefinedSet 

; typedef long							CFCharacterSetPredefinedSet
kCFCharacterSetControl			EQU		1
kCFCharacterSetWhitespace		EQU		2
kCFCharacterSetWhitespaceAndNewline EQU	3
kCFCharacterSetDecimalDigit		EQU		4
kCFCharacterSetLetter			EQU		5
kCFCharacterSetLowercaseLetter	EQU		6
kCFCharacterSetUppercaseLetter	EQU		7
kCFCharacterSetNonBase			EQU		8
kCFCharacterSetDecomposable		EQU		9
kCFCharacterSetAlphaNumeric		EQU		10
kCFCharacterSetPunctuation		EQU		11
kCFCharacterSetIllegal			EQU		12
;  CFCharacterSet type ID 
;
; extern CFTypeID CFCharacterSetGetTypeID(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetGetTypeID
	ENDIF

; ** CharacterSet creation **
;  Functions to create basic immutable characterset. 
;
; extern CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetGetPredefined
	ENDIF

;
; extern CFCharacterSetRef CFCharacterSetCreateWithCharactersInRange(CFAllocatorRef alloc, CFRange theRange)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetCreateWithCharactersInRange
	ENDIF

;
; extern CFCharacterSetRef CFCharacterSetCreateWithCharactersInString(CFAllocatorRef alloc, CFStringRef theString)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetCreateWithCharactersInString
	ENDIF

;
; extern CFCharacterSetRef CFCharacterSetCreateWithBitmapRepresentation(CFAllocatorRef alloc, CFDataRef theData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetCreateWithBitmapRepresentation
	ENDIF

;  Functions to create mutable characterset. 
;
; extern CFMutableCharacterSetRef CFCharacterSetCreateMutable(CFAllocatorRef alloc)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetCreateMutable
	ENDIF

;
; extern CFMutableCharacterSetRef CFCharacterSetCreateMutableCopy(CFAllocatorRef alloc, CFCharacterSetRef theSet)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetCreateMutableCopy
	ENDIF

; ** Basic accessors **
;
; extern Boolean CFCharacterSetIsCharacterMember(CFCharacterSetRef theSet, UniChar theChar)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetIsCharacterMember
	ENDIF

;
; extern CFDataRef CFCharacterSetCreateBitmapRepresentation(CFAllocatorRef alloc, CFCharacterSetRef theSet)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetCreateBitmapRepresentation
	ENDIF

; ** MutableCharacterSet functions **
;
; extern void CFCharacterSetAddCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetAddCharactersInRange
	ENDIF

;
; extern void CFCharacterSetRemoveCharactersInRange(CFMutableCharacterSetRef theSet, CFRange theRange)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetRemoveCharactersInRange
	ENDIF

;
; extern void CFCharacterSetAddCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetAddCharactersInString
	ENDIF

;
; extern void CFCharacterSetRemoveCharactersInString(CFMutableCharacterSetRef theSet, CFStringRef theString)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetRemoveCharactersInString
	ENDIF

;
; extern void CFCharacterSetUnion(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetUnion
	ENDIF

;
; extern void CFCharacterSetIntersect(CFMutableCharacterSetRef theSet, CFCharacterSetRef theOtherSet)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetIntersect
	ENDIF

;
; extern void CFCharacterSetInvert(CFMutableCharacterSetRef theSet)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFCharacterSetInvert
	ENDIF

	ENDIF ; __CFCHARACTERSET__ 


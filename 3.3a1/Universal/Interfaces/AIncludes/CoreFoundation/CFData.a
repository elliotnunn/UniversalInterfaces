;
;	File:		CFData.a
;
;	Contains:	CoreFoundation block of bytes
;
;	Version:	Technology:	Mac OS X
;				Release:	Universal Interfaces 3.3a1
;
;	Copyright:	Â© 1999 by Apple Computer, Inc., all rights reserved
;
;	Bugs?:		For bug reports, consult the following page on
;				the World Wide Web:
;
;					http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__COREFOUNDATION_CFDATA__') = 'UNDEFINED' THEN
__COREFOUNDATION_CFDATA__ SET 1

	IF &TYPE('___COREFOUNDATION_CFBASE__') = 'UNDEFINED' THEN
	include ':CoreFoundation:CFBase.a'
	ENDIF





;
; extern CFTypeID CFDataGetTypeID(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataGetTypeID
	ENDIF


;
; extern CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataCreate
	ENDIF

;
; extern CFDataRef CFDataCreateWithBytesNoCopy(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length, CFAllocatorRef bytesDeallocator)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataCreateWithBytesNoCopy
	ENDIF

;  Pass kCFAllocatorNull as bytesDeallocator to assure the bytes aren't freed 
;
; extern CFDataRef CFDataCreateCopy(CFAllocatorRef allocator, CFDataRef data)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataCreateCopy
	ENDIF

;
; extern CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataCreateMutable
	ENDIF

;
; extern CFMutableDataRef CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef data)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataCreateMutableCopy
	ENDIF


;
; extern CFIndex CFDataGetLength(CFDataRef data)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataGetLength
	ENDIF

;
; extern const UInt8 *CFDataGetBytePtr(CFDataRef data)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataGetBytePtr
	ENDIF

;
; extern UInt8 *CFDataGetMutableBytePtr(CFMutableDataRef data)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataGetMutableBytePtr
	ENDIF

;
; extern void CFDataGetBytes(CFDataRef data, CFRange range, UInt8 *buffer)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataGetBytes
	ENDIF


;
; extern void CFDataSetLength(CFMutableDataRef data, CFIndex length)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataSetLength
	ENDIF

;
; extern void CFDataIncreaseLength(CFMutableDataRef data, CFIndex extraLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataIncreaseLength
	ENDIF

;
; extern void CFDataAppendBytes(CFMutableDataRef data, const UInt8 *bytes, CFIndex length)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataAppendBytes
	ENDIF

;
; extern void CFDataReplaceBytes(CFMutableDataRef data, CFRange range, const UInt8 *newBytes, CFIndex newLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataReplaceBytes
	ENDIF

;
; extern void CFDataDeleteBytes(CFMutableDataRef data, CFRange range)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDataDeleteBytes
	ENDIF

	ENDIF ; __COREFOUNDATION_CFDATA__ 


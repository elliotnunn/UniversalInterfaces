;
;    File:       ASDebugging.a
;
;    Contains:   AppleScript Debugging Interfaces.
;
;    Version:    Technology: AppleScript 1.1
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1992-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__ASDEBUGGING__') = 'UNDEFINED' THEN
__ASDEBUGGING__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF
	IF &TYPE('__COMPONENTS__') = 'UNDEFINED' THEN
	include 'Components.a'
	ENDIF
	IF &TYPE('__APPLEEVENTS__') = 'UNDEFINED' THEN
	include 'AppleEvents.a'
	ENDIF
	IF &TYPE('__APPLESCRIPT__') = 'UNDEFINED' THEN
	include 'AppleScript.a'
	ENDIF

; **************************************************************************
;    Mode Flags
;*************************************************************************

;     This mode flag can be passed to OSASetProperty or OSASetHandler
;    and will prevent properties or handlers from being defined in a context
;    that doesn't already have bindings for them. An error is returned if
;    a current binding doesn't already exist. 
;


kOSAModeDontDefine				EQU		$0001
; **************************************************************************
;    Component Selectors
;*************************************************************************


kASSelectSetPropertyObsolete	EQU		$1101
kASSelectGetPropertyObsolete	EQU		$1102
kASSelectSetHandlerObsolete		EQU		$1103
kASSelectGetHandlerObsolete		EQU		$1104
kASSelectGetAppTerminologyObsolete EQU	$1105
kASSelectSetProperty			EQU		$1106
kASSelectGetProperty			EQU		$1107
kASSelectSetHandler				EQU		$1108
kASSelectGetHandler				EQU		$1109
kASSelectGetAppTerminology		EQU		$110A
kASSelectGetSysTerminology		EQU		$110B
kASSelectGetPropertyNames		EQU		$110C
kASSelectGetHandlerNames		EQU		$110D
; **************************************************************************
;    Context Accessors
;*************************************************************************


; *  OSASetProperty()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSASetProperty(ComponentInstance scriptingComponent, long modeFlags, OSAID contextID, const AEDesc *variableName, OSAID scriptValueID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSASetProperty
			move.l              #$00101106,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSASetProperty
	ENDIF


; *  OSAGetProperty()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetProperty(ComponentInstance scriptingComponent, long modeFlags, OSAID contextID, const AEDesc *variableName, OSAID *resultingScriptValueID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetProperty
			move.l              #$00101107,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetProperty
	ENDIF


; *  OSAGetPropertyNames()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetPropertyNames(ComponentInstance scriptingComponent, long modeFlags, OSAID contextID, AEDescList *resultingPropertyNames)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetPropertyNames
			move.l              #$000C110C,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetPropertyNames
	ENDIF


; *  OSASetHandler()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSASetHandler(ComponentInstance scriptingComponent, long modeFlags, OSAID contextID, const AEDesc *handlerName, OSAID compiledScriptID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSASetHandler
			move.l              #$00101108,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSASetHandler
	ENDIF


; *  OSAGetHandler()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetHandler(ComponentInstance scriptingComponent, long modeFlags, OSAID contextID, const AEDesc *handlerName, OSAID *resultingCompiledScriptID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetHandler
			move.l              #$00101109,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetHandler
	ENDIF


; *  OSAGetHandlerNames()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetHandlerNames(ComponentInstance scriptingComponent, long modeFlags, OSAID contextID, AEDescList *resultingHandlerNames)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetHandlerNames
			move.l              #$000C110D,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetHandlerNames
	ENDIF


; *  OSAGetAppTerminology()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetAppTerminology(ComponentInstance scriptingComponent, long modeFlags, FSSpec *fileSpec, short terminologyID, Boolean *didLaunch, AEDesc *terminologyList)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetAppTerminology
			move.l              #$0012110A,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetAppTerminology
	ENDIF

;  Errors:
;       errOSASystemError        operation failed
;    


; *  OSAGetSysTerminology()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetSysTerminology(ComponentInstance scriptingComponent, long modeFlags, short terminologyID, AEDesc *terminologyList)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetSysTerminology
			move.l              #$000A110B,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetSysTerminology
	ENDIF

;  Errors:
;       errOSASystemError        operation failed
;    

;  Notes on terminology ID
;
;    A terminology ID is derived from script code and language code
;    as follows;
;
;        terminologyID = ((scriptCode & 0x7F) << 8) | (langCode & 0xFF)
;

; **************************************************************************
;    Obsolete versions provided for backward compatibility:
;


; *  ASSetProperty()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError ASSetProperty(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *variableName, OSAID scriptValueID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ASSetProperty
			move.l              #$000C1101,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ASSetProperty
	ENDIF


; *  ASGetProperty()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError ASGetProperty(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *variableName, OSAID *resultingScriptValueID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ASGetProperty
			move.l              #$000C1102,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ASGetProperty
	ENDIF


; *  ASSetHandler()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError ASSetHandler(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *handlerName, OSAID compiledScriptID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ASSetHandler
			move.l              #$000C1103,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ASSetHandler
	ENDIF


; *  ASGetHandler()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError ASGetHandler(ComponentInstance scriptingComponent, OSAID contextID, const AEDesc *handlerName, OSAID *resultingCompiledScriptID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ASGetHandler
			move.l              #$000C1104,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ASGetHandler
	ENDIF


; *  ASGetAppTerminology()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError ASGetAppTerminology(ComponentInstance scriptingComponent, FSSpec *fileSpec, short terminologID, Boolean *didLaunch, AEDesc *terminologyList)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ASGetAppTerminology
			move.l              #$000E1105,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ASGetAppTerminology
	ENDIF

;  Errors:
;        errOSASystemError       operation failed
;    

; *************************************************************************


	ENDIF ; __ASDEBUGGING__ 


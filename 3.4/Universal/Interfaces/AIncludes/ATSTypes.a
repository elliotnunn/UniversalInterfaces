;
;    File:       ATSTypes.a
;
;    Contains:   Public interfaces for Apple Type Services components.
;
;    Version:    Technology: CarbonLib 1.1
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1997-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__ATSTYPES__') = 'UNDEFINED' THEN
__ATSTYPES__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF
	IF &TYPE('__MIXEDMODE__') = 'UNDEFINED' THEN
	include 'MixedMode.a'
	ENDIF

; typedef UInt32 						FMGeneration

;  The FMFontFamily reference represents a collection of fonts with the same design
;   characteristics. It replaces the standard QuickDraw font identifer and may be used
;   with all QuickDraw functions including GetFontName and TextFont. It cannot be used
;   with the Resource Manager to access information from a FOND resource handle. A font
;   reference does not imply a particular script system, nor is the character encoding
;   of a font family determined by an arithmetic mapping of its value.
;

; typedef SInt16 						FMFontFamily

; typedef SInt16 						FMFontStyle

; typedef SInt16 						FMFontSize

;  
;   The font family is a collection of fonts, each of which is identified
;   by an FMFont reference that maps to a single object registered with
;   the font database. The font references associated with the font
;   family consist of individual outline and bitmapped fonts that may be
;   used with the font access routines of the Font Manager and ATS.
;

; typedef UInt32 						FMFont

FMFontFamilyInstance	RECORD 0
fontFamily				 ds.w	1				; offset: $0 (0)
fontStyle				 ds.w	1				; offset: $2 (2)
sizeof					 EQU *					; size:   $4 (4)
						ENDR
FMFontFamilyIterator	RECORD 0
reserved				 ds.l	16				; offset: $0 (0)
sizeof					 EQU *					; size:   $40 (64)
						ENDR
FMFontIterator			RECORD 0
reserved				 ds.l	16				; offset: $0 (0)
sizeof					 EQU *					; size:   $40 (64)
						ENDR
FMFontFamilyInstanceIterator RECORD 0
reserved				 ds.l	16				; offset: $0 (0)
sizeof					 EQU *					; size:   $40 (64)
						ENDR

kInvalidGeneration				EQU		0
kInvalidFontFamily				EQU		-1
kInvalidFont					EQU		0

kFMCurrentFilterFormat			EQU		0

kFMDefaultOptions				EQU		0
kFMUseGlobalScopeOption			EQU		$00000001

; typedef UInt32						FMFilterSelector
kFMFontTechnologyFilterSelector	EQU		1
kFMFontContainerFilterSelector	EQU		2
kFMGenerationFilterSelector		EQU		3
kFMFontFamilyCallbackFilterSelector EQU	4
kFMFontCallbackFilterSelector	EQU		5
kFMFontDirectoryFilterSelector	EQU		6

kFMTrueTypeFontTechnology		EQU		'true'
kFMPostScriptFontTechnology		EQU		'typ1'

; *  NewFMFontFamilyCallbackFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  NewFMFontCallbackFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeFMFontFamilyCallbackFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeFMFontCallbackFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeFMFontFamilyCallbackFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeFMFontCallbackFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

FMFontDirectoryFilter	RECORD 0
fontFolderDomain		 ds.w	1				; offset: $0 (0)
reserved				 ds.l	2				; offset: $2 (2)
sizeof					 EQU *					; size:   $A (10)
						ENDR
FMFilter				RECORD 0
format					 ds.l	1				; offset: $0 (0)
selector				 ds.l	1				; offset: $4 (4)
fontTechnologyFilter	 ds.l	1				; offset: $8 (8)
						 ORG 8
fontContainerFilter		 ds		FSSpec			; offset: $8 (8)
						 ORG 8
generationFilter		 ds.l	1				; offset: $8 (8)
						 ORG 8
fontFamilyCallbackFilter  ds.l	1				; offset: $8 (8)
						 ORG 8
fontCallbackFilter		 ds.l	1				; offset: $8 (8)
						 ORG 8
fontDirectoryFilter		 ds		FMFontDirectoryFilter ; offset: $8 (8)
						 ORG 78
sizeof					 EQU *					; size:   $4E (78)
						ENDR
; typedef OptionBits 					ATSOptionFlags

; typedef UInt32 						ATSGeneration

; typedef UInt32 						ATSFontContainerRef

; typedef UInt32 						ATSFontFamilyRef

; typedef UInt32 						ATSFontRef

; typedef UInt16 						ATSGlyphRef

ATSFontSize				RECORD 0
f						 ds		Float32
sizeof					 EQU *					; size:   $4 (4)
						ENDR



kATSGenerationUnspecified		EQU		0
kATSFontContainerRefUnspecified	EQU		0
kATSFontFamilyRefUnspecified	EQU		0
kATSFontRefUnspecified			EQU		0
ATSFontMetrics			RECORD 0
version					 ds.l	1				; offset: $0 (0)
ascent					 ds		Float32			; offset: $4 (4)		;  Maximum height above baseline reached by the glyphs in the font 
;  or maximum distance to the right of the centerline reached by the glyphs in the font 
descent					 ds		Float32			; offset: $8 (8)		;  Maximum depth below baseline reached by the glyphs in the font 
;  or maximum distance to the left of the centerline reached by the glyphs in the font 
leading					 ds		Float32			; offset: $C (12)		;  Desired spacing between lines of text 
avgAdvanceWidth			 ds		Float32			; offset: $10 (16)
maxAdvanceWidth			 ds		Float32			; offset: $14 (20)		;  Maximum advance width or height of the glyphs in the font 
minLeftSideBearing		 ds		Float32			; offset: $18 (24)		;  Minimum left or top side bearing 
minRightSideBearing		 ds		Float32			; offset: $1C (28)		;  Minimum right or bottom side bearing 
stemWidth				 ds		Float32			; offset: $20 (32)		;  Width of the dominant vertical stems of the glyphs in the font 
stemHeight				 ds		Float32			; offset: $24 (36)		;  Vertical width of the dominant horizontal stems of glyphs in the font 
capHeight				 ds		Float32			; offset: $28 (40)		;  Height of a capital letter from the baseline to the top of the letter 
xHeight					 ds		Float32			; offset: $2C (44)		;  Height of lowercase characters in a font, specifically the letter x, excluding ascenders and descenders 
italicAngle				 ds		Float32			; offset: $30 (48)		;  Angle in degrees counterclockwise from the vertical of the dominant vertical strokes of the glyphs in the font 
underlinePosition		 ds		Float32			; offset: $34 (52)		;  Distance from the baseline for positioning underlining strokes 
underlineThickness		 ds		Float32			; offset: $38 (56)		;  Stroke width for underlining 
sizeof					 EQU *					; size:   $3C (60)
						ENDR

kATSItalicQDSkew				EQU		$00004000			; fixed value of 0.25 
kATSBoldQDStretch				EQU		$00018000			; fixed value of 1.50 
kATSRadiansFactor				EQU		1144				; fixed value of approx. pi/180 (0.0174560546875) 
;  Glyph outline path constants used in ATSFontGetNativeCurveType. 

; typedef UInt16						ATSCurveType
kATSCubicCurveType				EQU		$0001
kATSQuadCurveType				EQU		$0002
kATSOtherCurveType				EQU		$0003
ATSUCurvePath			RECORD 0
vectors					 ds.l	1				; offset: $0 (0)
controlBits				 ds.l	1				; offset: $4 (4) <-- really an array of length one
vector					 ds		Float32Point	; offset: $8 (8) <-- really an array of length one
sizeof					 EQU *					; size:   $10 (16)
						ENDR
ATSUCurvePaths			RECORD 0
contours				 ds.l	1				; offset: $0 (0)
contour					 ds		ATSUCurvePath	; offset: $4 (4) <-- really an array of length one
sizeof					 EQU *					; size:   $14 (20)
						ENDR
;  Glyph ideal metrics 
ATSGlyphIdealMetrics	RECORD 0
advance					 ds		Float32Point	; offset: $0 (0)
sideBearing				 ds		Float32Point	; offset: $8 (8)
otherSideBearing		 ds		Float32Point	; offset: $10 (16)
sizeof					 EQU *					; size:   $18 (24)
						ENDR
;  Glyph screen metrics 
ATSGlyphScreenMetrics	RECORD 0
deviceAdvance			 ds		Float32Point	; offset: $0 (0)
topLeft					 ds		Float32Point	; offset: $8 (8)
height					 ds.l	1				; offset: $10 (16)
width					 ds.l	1				; offset: $14 (20)
sideBearing				 ds		Float32Point	; offset: $18 (24)
otherSideBearing		 ds		Float32Point	; offset: $20 (32)
sizeof					 EQU *					; size:   $28 (40)
						ENDR
; typedef ATSGlyphRef 					GlyphID

	ENDIF ; __ATSTYPES__ 


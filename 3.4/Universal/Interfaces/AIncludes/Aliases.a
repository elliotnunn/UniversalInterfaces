;
;    File:       Aliases.a
;
;    Contains:   Alias Manager Interfaces.
;
;    Version:    Technology: Mac OS 8.1
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1989-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__ALIASES__') = 'UNDEFINED' THEN
__ALIASES__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF


rAliasType						EQU		'alis'				; Aliases are stored as resources of this type 

															; define alias resolution action rules mask 
kARMMountVol					EQU		$00000001			; mount the volume automatically 
kARMNoUI						EQU		$00000002			; no user interface allowed during resolution 
kARMMultVols					EQU		$00000008			; search on multiple volumes 
kARMSearch						EQU		$00000100			; search quickly 
kARMSearchMore					EQU		$00000200			; search further 
kARMSearchRelFirst				EQU		$00000400			; search target on a relative path first 

															; define alias record information types 
asiZoneName						EQU		-3					; get zone name 
asiServerName					EQU		-2					; get server name 
asiVolumeName					EQU		-1					; get volume name 
asiAliasName					EQU		0					; get aliased file/folder/volume name 
asiParentName					EQU		1					; get parent folder name 
;  ResolveAliasFileWithMountFlags options 

kResolveAliasFileNoUI			EQU		$00000001			; no user interaction during resolution 
;  define the alias record that will be the blackbox for the caller 
AliasRecord				RECORD 0
userType				 ds.l	1				; offset: $0 (0)		;  appl stored type like creator type 
aliasSize				 ds.w	1				; offset: $4 (4)		;  alias record size in bytes, for appl usage 
sizeof					 EQU *					; size:   $6 (6)
						ENDR
; typedef struct AliasRecord *			AliasPtr

; typedef AliasPtr *					AliasHandle

;  alias record information type 
; typedef short 						AliasInfoType


; *  NewAlias()
; *  
; *  Summary:
; *    create a new alias between fromFile and target, returns alias
; *    record handle
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr NewAlias(const FSSpec *fromFile, const FSSpec *target, AliasHandle *alias)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NewAlias
			moveq           	#2,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NewAlias
	ENDIF


; *  NewAliasMinimal()
; *  
; *  Summary:
; *    create a minimal new alias for a target and return alias record
; *    handle
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr NewAliasMinimal(const FSSpec *target, AliasHandle *alias)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NewAliasMinimal
			moveq           	#8,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NewAliasMinimal
	ENDIF


; *  NewAliasMinimalFromFullPath()
; *  
; *  Summary:
; *    create a minimal new alias from a target fullpath (optional zone
; *    and server name) and return alias record handle
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr NewAliasMinimalFromFullPath(short fullPathLength, const void *fullPath, ConstStr32Param zoneName, ConstStr31Param serverName, AliasHandle *alias)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NewAliasMinimalFromFullPath
			moveq           	#9,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NewAliasMinimalFromFullPath
	ENDIF


; *  ResolveAlias()
; *  
; *  Summary:
; *    given an alias handle and fromFile, resolve the alias, update the
; *    alias record and return aliased filename and wasChanged flag.
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr ResolveAlias(const FSSpec *fromFile, AliasHandle alias, FSSpec *target, Boolean *wasChanged)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ResolveAlias
			moveq           	#3,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ResolveAlias
	ENDIF


; *  GetAliasInfo()
; *  
; *  Summary:
; *    given an alias handle and an index specifying requested alias
; *    information type, return the information from alias record as a
; *    string.
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr GetAliasInfo(AliasHandle alias, AliasInfoType index, Str63 theString)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_GetAliasInfo
			moveq           	#7,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetAliasInfo
	ENDIF



; *  IsAliasFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 8.5 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr IsAliasFile(const FSSpec *fileFSSpec, Boolean *aliasFileFlag, Boolean *folderFlag)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_IsAliasFile
			moveq           	#42,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION IsAliasFile
	ENDIF


; *  ResolveAliasWithMountFlags()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 8.5 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr ResolveAliasWithMountFlags(const FSSpec *fromFile, AliasHandle alias, FSSpec *target, Boolean *wasChanged, unsigned long mountFlags)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ResolveAliasWithMountFlags
			moveq           	#43,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ResolveAliasWithMountFlags
	ENDIF


; *  ResolveAliasFile()
; *  
; *  Summary:
; *    Given a file spec, return target file spec if input file spec is
; *    an alias. It resolves the entire alias chain or one step of the
; *    chain.  It returns info about whether the target is a folder or
; *    file; and whether the input file spec was an alias or not.
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr ResolveAliasFile(FSSpec *theSpec, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ResolveAliasFile
			moveq           	#12,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ResolveAliasFile
	ENDIF



; *  ResolveAliasFileWithMountFlags()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr ResolveAliasFileWithMountFlags(FSSpec *theSpec, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased, unsigned long mountFlags)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_ResolveAliasFileWithMountFlags
			moveq           	#41,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ResolveAliasFileWithMountFlags
	ENDIF


; *  FollowFinderAlias()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FollowFinderAlias(const FSSpec *fromFile, AliasHandle alias, Boolean logon, FSSpec *target, Boolean *wasChanged)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FollowFinderAlias
			moveq           	#15,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FollowFinderAlias
	ENDIF

;  
;   Low Level Routines 
;


; *  UpdateAlias()
; *  
; *  Summary:
; *    given a fromFile-target pair and an alias handle, update the
; *    alias record pointed to by alias handle to represent target as
; *    the new alias.
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr UpdateAlias(const FSSpec *fromFile, const FSSpec *target, AliasHandle alias, Boolean *wasChanged)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_UpdateAlias
			moveq           	#6,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION UpdateAlias
	ENDIF



; *  NewAliasFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeAliasFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeAliasFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  MatchAlias()
; *  
; *  Summary:
; *    Given an alias handle and fromFile, match the alias and return
; *    aliased filename(s) and needsUpdate flag
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr MatchAlias(const FSSpec *fromFile, unsigned long rulesMask, AliasHandle alias, short *aliasCount, FSSpecArrayPtr aliasList, Boolean *needsUpdate, AliasFilterUPP aliasFilter, void *yourDataPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_MatchAlias
			moveq           	#5,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MatchAlias
	ENDIF




; *  ResolveAliasFileWithMountFlagsNoUI()
; *  
; *  Summary:
; *    variation on ResolveAliasFile that does not prompt user with a
; *    dialog
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr ResolveAliasFileWithMountFlagsNoUI(FSSpec *theSpec, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased, unsigned long mountFlags)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION ResolveAliasFileWithMountFlagsNoUI
	ENDIF


; *  MatchAliasNoUI()
; *  
; *  Summary:
; *    variation on MatchAlias that does not prompt user with a dialog
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr MatchAliasNoUI(const FSSpec *fromFile, unsigned long rulesMask, AliasHandle alias, short *aliasCount, FSSpecArrayPtr aliasList, Boolean *needsUpdate, AliasFilterUPP aliasFilter, void *yourDataPtr)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MatchAliasNoUI
	ENDIF


; *  FSNewAlias()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSNewAlias(const FSRef *fromFile, const FSRef *target, AliasHandle *inAlias)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSNewAlias
			moveq           	#54,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSNewAlias
	ENDIF


; *  FSNewAliasMinimal()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSNewAliasMinimal(const FSRef *target, AliasHandle *inAlias)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSNewAliasMinimal
			moveq           	#55,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSNewAliasMinimal
	ENDIF


; *  FSIsAliasFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSIsAliasFile(const FSRef *fileRef, Boolean *aliasFileFlag, Boolean *folderFlag)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSIsAliasFile
			moveq           	#56,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSIsAliasFile
	ENDIF



; *  FSResolveAliasWithMountFlags()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSResolveAliasWithMountFlags(const FSRef *fromFile, AliasHandle inAlias, FSRef *target, Boolean *wasChanged, unsigned long mountFlags)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSResolveAliasWithMountFlags
			moveq           	#57,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSResolveAliasWithMountFlags
	ENDIF



; *  FSResolveAlias()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSResolveAlias(const FSRef *fromFile, AliasHandle alias, FSRef *target, Boolean *wasChanged)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSResolveAlias
			moveq           	#58,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSResolveAlias
	ENDIF



; *  FSResolveAliasFileWithMountFlags()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSResolveAliasFileWithMountFlags(FSRef *theRef, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased, unsigned long mountFlags)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSResolveAliasFileWithMountFlags
			moveq           	#59,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSResolveAliasFileWithMountFlags
	ENDIF



; *  FSResolveAliasFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSResolveAliasFile(FSRef *theRef, Boolean resolveAliasChains, Boolean *targetIsFolder, Boolean *wasAliased)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSResolveAliasFile
			moveq           	#60,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSResolveAliasFile
	ENDIF



; *  FSFollowFinderAlias()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSFollowFinderAlias(FSRef *fromFile, AliasHandle alias, Boolean logon, FSRef *target, Boolean *wasChanged)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSFollowFinderAlias
			moveq           	#61,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSFollowFinderAlias
	ENDIF


; *  FSUpdateAlias()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr FSUpdateAlias(const FSRef *fromFile, const FSRef *target, AliasHandle alias, Boolean *wasChanged)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_FSUpdateAlias
			moveq           	#62,D0
			dc.w            	$A823
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FSUpdateAlias
	ENDIF



	ENDIF ; __ALIASES__ 


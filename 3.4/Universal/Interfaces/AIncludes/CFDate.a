;
;    File:       CFDate.a
;
;    Contains:   CoreFoundation date
;
;    Version:    Technology: Mac OS X
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1999-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CFDATE__') = 'UNDEFINED' THEN
__CFDATE__ SET 1

	IF &TYPE('__CFBASE__') = 'UNDEFINED' THEN
	include 'CFBase.a'
	ENDIF


; typedef double 						CFTimeInterval

; typedef CFTimeInterval 				CFAbsoluteTime

;  absolute time is the time interval since the reference date 
;  the reference date (epoch) is 00:00:00 1 January 2001. 

; *  CFAbsoluteTimeGetCurrent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFAbsoluteTime CFAbsoluteTimeGetCurrent(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFAbsoluteTimeGetCurrent
	ENDIF


; *  kCFAbsoluteTimeIntervalSince1970
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFAbsoluteTimeIntervalSince1904
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 




; *  CFDateGetTypeID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFTypeID CFDateGetTypeID(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDateGetTypeID
	ENDIF


; *  CFDateCreate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDateCreate
	ENDIF


; *  CFDateGetAbsoluteTime()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDateGetAbsoluteTime
	ENDIF


; *  CFDateGetTimeIntervalSinceDate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFTimeInterval CFDateGetTimeIntervalSinceDate(CFDateRef theDate, CFDateRef otherDate)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDateGetTimeIntervalSinceDate
	ENDIF


; *  CFDateCompare()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFDateCompare
	ENDIF



CFGregorianDate			RECORD 0
year					 ds.l	1				; offset: $0 (0)
month					 ds.b	1				; offset: $4 (4)
day						 ds.b	1				; offset: $5 (5)
hour					 ds.b	1				; offset: $6 (6)
minute					 ds.b	1				; offset: $7 (7)
second					 ds		Float64			; offset: $8 (8)
sizeof					 EQU *					; size:   $10 (16)
						ENDR
CFGregorianUnits		RECORD 0
years					 ds.l	1				; offset: $0 (0)
months					 ds.l	1				; offset: $4 (4)
days					 ds.l	1				; offset: $8 (8)
hours					 ds.l	1				; offset: $C (12)
minutes					 ds.l	1				; offset: $10 (16)
seconds					 ds		Float64			; offset: $14 (20)
sizeof					 EQU *					; size:   $1C (28)
						ENDR

; typedef long							CFGregorianUnitFlags
kCFGregorianUnitsYears			EQU		$01
kCFGregorianUnitsMonths			EQU		$02
kCFGregorianUnitsDays			EQU		$04
kCFGregorianUnitsHours			EQU		$08
kCFGregorianUnitsMinutes		EQU		$10
kCFGregorianUnitsSeconds		EQU		$20
kCFGregorianAllUnits			EQU		$00FFFFFF

; *  CFGregorianDateIsValid()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CFGregorianDateIsValid(CFGregorianDate gdate, CFOptionFlags unitFlags)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFGregorianDateIsValid
	ENDIF


; *  CFGregorianDateGetAbsoluteTime()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFAbsoluteTime CFGregorianDateGetAbsoluteTime(CFGregorianDate gdate, CFTimeZoneRef tz)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFGregorianDateGetAbsoluteTime
	ENDIF


; *  CFAbsoluteTimeGetGregorianDate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFGregorianDate CFAbsoluteTimeGetGregorianDate(CFAbsoluteTime at, CFTimeZoneRef tz)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFAbsoluteTimeGetGregorianDate
	ENDIF


; *  CFAbsoluteTimeAddGregorianUnits()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFAbsoluteTime CFAbsoluteTimeAddGregorianUnits(CFAbsoluteTime at, CFTimeZoneRef tz, CFGregorianUnits units)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFAbsoluteTimeAddGregorianUnits
	ENDIF


; *  CFAbsoluteTimeGetDifferenceAsGregorianUnits()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFGregorianUnits CFAbsoluteTimeGetDifferenceAsGregorianUnits(CFAbsoluteTime at1, CFAbsoluteTime at2, CFTimeZoneRef tz, CFOptionFlags unitFlags)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFAbsoluteTimeGetDifferenceAsGregorianUnits
	ENDIF


; *  CFAbsoluteTimeGetDayOfWeek()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern SInt32 CFAbsoluteTimeGetDayOfWeek(CFAbsoluteTime at, CFTimeZoneRef tz)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFAbsoluteTimeGetDayOfWeek
	ENDIF


; *  CFAbsoluteTimeGetDayOfYear()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern SInt32 CFAbsoluteTimeGetDayOfYear(CFAbsoluteTime at, CFTimeZoneRef tz)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFAbsoluteTimeGetDayOfYear
	ENDIF


; *  CFAbsoluteTimeGetWeekOfYear()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern SInt32 CFAbsoluteTimeGetWeekOfYear(CFAbsoluteTime at, CFTimeZoneRef tz)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFAbsoluteTimeGetWeekOfYear
	ENDIF

	ENDIF ; __CFDATE__ 


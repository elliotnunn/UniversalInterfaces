;
;    File:       CFPreferences.a
;
;    Contains:   CoreFoundation preferences
;
;    Version:    Technology: Mac OS X
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1999-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CFPREFERENCES__') = 'UNDEFINED' THEN
__CFPREFERENCES__ SET 1

	IF &TYPE('__CFBASE__') = 'UNDEFINED' THEN
	include 'CFBase.a'
	ENDIF
	IF &TYPE('__CFARRAY__') = 'UNDEFINED' THEN
	include 'CFArray.a'
	ENDIF
	IF &TYPE('__CFPROPERTYLIST__') = 'UNDEFINED' THEN
	include 'CFPropertyList.a'
	ENDIF
	IF &TYPE('__CFSTRING__') = 'UNDEFINED' THEN
	include 'CFString.a'
	ENDIF


; *  kCFPreferencesAnyApplication
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFPreferencesCurrentApplication
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFPreferencesAnyHost
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFPreferencesCurrentHost
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFPreferencesAnyUser
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFPreferencesCurrentUser
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;     The "App" functions search the various sources of defaults that
;    apply to the given application, and should never be called with
;    kCFPreferencesAnyApplication - only kCFPreferencesCurrentApplication
;    or an application's ID (its bundle identifier).
;

;  Searches the various sources of application defaults to find the
;value for the given key. key must not be NULL.  If a value is found,
;it returns it; otherwise returns NULL.  Caller must release the
;returned value 


; *  CFPreferencesCopyAppValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesCopyAppValue
	ENDIF

;  Convenience to interpret a preferences value as a boolean directly.
;Returns FALSE if the key doesn't exist, or has an improper format; under
;those conditions, keyExistsAndHasValidFormat (if non-NULL) is set to FALSE 


; *  CFPreferencesGetAppBooleanValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesGetAppBooleanValue
	ENDIF

;  Convenience to interpret a preferences value as an integer directly.
;Returns 0 if the key doesn't exist, or has an improper format; under
;those conditions, keyExistsAndHasValidFormat (if non-NULL) is set to FALSE 


; *  CFPreferencesGetAppIntegerValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFIndex CFPreferencesGetAppIntegerValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesGetAppIntegerValue
	ENDIF

;  Sets the given value for the given key in the "normal" place for
;application preferences.  key must not be NULL.  If value is NULL,
;key is removed instead. 


; *  CFPreferencesSetAppValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CFPreferencesSetAppValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesSetAppValue
	ENDIF

;  Adds the preferences for the given suite to the app preferences for
;the specified application.  To write to the suite domain, use
;CFPreferencesSetValue(), below, using the suiteName in place
;of the appName 


; *  CFPreferencesAddSuitePreferencesToApp()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CFPreferencesAddSuitePreferencesToApp(CFStringRef applicationID, CFStringRef suiteID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesAddSuitePreferencesToApp
	ENDIF


; *  CFPreferencesRemoveSuitePreferencesFromApp()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CFPreferencesRemoveSuitePreferencesFromApp(CFStringRef applicationID, CFStringRef suiteID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesRemoveSuitePreferencesFromApp
	ENDIF

;  Writes all changes in all sources of application defaults.
;Returns success or failure. 

; *  CFPreferencesAppSynchronize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesAppSynchronize
	ENDIF

;  The primitive get mechanism; all arguments must be non-NULL
;(use the constants above for common values).  Only the exact
;location specified by app-user-host is searched.  The returned
;CFType must be released by the caller when it is finished with it. 


; *  CFPreferencesCopyValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesCopyValue
	ENDIF

;  Convenience to fetch multiple keys at once.  Keys in
;keysToFetch that are not present in the returned dictionary
;are not present in the domain.  If keysToFetch is NULL, all
;keys are fetched. 


; *  CFPreferencesCopyMultiple()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFDictionaryRef CFPreferencesCopyMultiple(CFArrayRef keysToFetch, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesCopyMultiple
	ENDIF

;  The primitive set function; all arguments except value must be
;non-NULL.  If value is NULL, the given key is removed 

; *  CFPreferencesSetValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesSetValue
	ENDIF

;  Convenience to set multiple values at once.  Behavior is undefined
;if a key is in both keysToSet and keysToRemove 

; *  CFPreferencesSetMultiple()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CFPreferencesSetMultiple(CFDictionaryRef keysToSet, CFArrayRef keysToRemove, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesSetMultiple
	ENDIF


; *  CFPreferencesSynchronize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesSynchronize
	ENDIF

;  Constructs and returns the list of the name of all applications
;which have preferences in the scope of the given user and host.
;The returned value must be released by the caller; neither argument
;may be NULL. 


; *  CFPreferencesCopyApplicationList()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFArrayRef CFPreferencesCopyApplicationList(CFStringRef userName, CFStringRef hostName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesCopyApplicationList
	ENDIF

;  Constructs and returns the list of all keys set in the given
;location.  The returned value must be released by the caller;
;all arguments must be non-NULL 


; *  CFPreferencesCopyKeyList()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFArrayRef CFPreferencesCopyKeyList(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFPreferencesCopyKeyList
	ENDIF

	ENDIF ; __CFPREFERENCES__ 


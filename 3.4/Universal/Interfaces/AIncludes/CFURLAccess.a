;
;    File:       CFURLAccess.a
;
;    Contains:   CoreFoundation url access
;
;    Version:    Technology: Mac OS X
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1999-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CFURLACCESS__') = 'UNDEFINED' THEN
__CFURLACCESS__ SET 1

	IF &TYPE('__CFBASE__') = 'UNDEFINED' THEN
	include 'CFBase.a'
	ENDIF
	IF &TYPE('__CFARRAY__') = 'UNDEFINED' THEN
	include 'CFArray.a'
	ENDIF
	IF &TYPE('__CFDATA__') = 'UNDEFINED' THEN
	include 'CFData.a'
	ENDIF
	IF &TYPE('__CFDICTIONARY__') = 'UNDEFINED' THEN
	include 'CFDictionary.a'
	ENDIF
	IF &TYPE('__CFSTRING__') = 'UNDEFINED' THEN
	include 'CFString.a'
	ENDIF
	IF &TYPE('__CFURL__') = 'UNDEFINED' THEN
	include 'CFURL.a'
	ENDIF


;  Attempts to read the data and properties for the given URL.  If
;only interested in one of the resourceData and properties, pass NULL
;for the other.  If properties is non-NULL and desiredProperties is
;NULL, then all properties are fetched.  Returns success or failure;
;note that as much work as possible is done even if FALSE is returned.
;So for instance if one property is not available, the others are
;fetched anyway. errorCode is set to 0 on success, and some other
;value on failure.  If non-NULL, it is the caller 's responsibility
;to release resourceData and properties.
;
;    Apple reserves for its use all negative error code values; these
;values represent errors common to any scheme.  Scheme-specific error
;codes should be positive, non-zero, and should be used only if one of
;the predefined Apple error codes does not apply.  Error codes should
;be publicized and documented with the scheme-specific properties.
;


; *  CFURLCreateDataAndPropertiesFromResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CFURLCreateDataAndPropertiesFromResource(CFAllocatorRef alloc, CFURLRef url, CFDataRef *resourceData, CFDictionaryRef *properties, CFArrayRef desiredProperties, SInt32 *errorCode)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFURLCreateDataAndPropertiesFromResource
	ENDIF

;  Attempts to write the given data and properties to the given URL.
;If dataToWrite is NULL, only properties are written out (use
;CFURLDestroyResource() to delete a resource).  Properties not present
;in propertiesToWrite are left unchanged, hence if propertiesToWrite
;is NULL or empty, the URL's properties are not changed at all.
;Returns success or failure; errorCode is set as for
;CFURLCreateDataAndPropertiesFromResource(), above.
;


; *  CFURLWriteDataAndPropertiesToResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CFURLWriteDataAndPropertiesToResource(CFURLRef url, CFDataRef dataToWrite, CFDictionaryRef propertiesToWrite, SInt32 *errorCode)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFURLWriteDataAndPropertiesToResource
	ENDIF

;  Destroys the resource indicated by url. 
;  Returns success or failure; errorCode set as above. 

; *  CFURLDestroyResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CFURLDestroyResource(CFURLRef url, SInt32 *errorCode)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFURLDestroyResource
	ENDIF

;  Convenience method which calls through to CFURLCreateDataAndPropertiesFromResource(). 
;  Returns NULL on error and sets errorCode accordingly. 

; *  CFURLCreatePropertyFromResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CFTypeRef CFURLCreatePropertyFromResource(CFAllocatorRef alloc, CFURLRef url, CFStringRef property, SInt32 *errorCode)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CFURLCreatePropertyFromResource
	ENDIF

;  Common error codes; this list is expected to grow 

; typedef long							CFURLError
kCFURLUnknownError				EQU		-10
kCFURLUnknownSchemeError		EQU		-11
kCFURLResourceNotFoundError		EQU		-12
kCFURLResourceAccessViolationError EQU	-13
kCFURLRemoteHostUnavailableError EQU	-14
kCFURLImproperArgumentsError	EQU		-15
kCFURLUnknownPropertyKeyError	EQU		-16
kCFURLPropertyKeyUnavailableError EQU	-17
kCFURLTimeoutError				EQU		-18
;  Property keys 

; *  kCFURLFileExists
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFURLFileDirectoryContents
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFURLFileLength
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFURLFileLastModificationTime
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFURLFilePOSIXMode
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFURLFileOwnerID
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFURLHTTPStatusCode
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  kCFURLHTTPStatusLine
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;  The value of kCFURLFileExists is a CFBoolean 
;  The value of kCFURLFileDirectoryContents is a CFArray containing CFURLs.  An empty array means the directory exists, but is empty 
;  The value of kCFURLFileLength is a CFNumber giving the file's length in bytes 
;  The value of kCFURLFileLastModificationTime is a CFDate 
;  The value of kCFURLFilePOSIXMode is a CFNumber as given in stat.h 
;  The value of kCFURLFileOwnerID is a CFNumber representing the owner's uid 
;  Properties for the http: scheme.  Except for the common error codes, above, errorCode will be set to the HTTP response status code upon failure.  Any HTTP header name can also be used as a property 
;  The value of kCFURLHTTPStatusCode is a CFNumber 
;  The value of kCFURLHTTPStatusLine is a CFString 
	ENDIF ; __CFURLACCESS__ 


;
;    File:       CGDataConsumer.a
;
;    Contains:   xxx put contents here xxx
;
;    Version:    Technology: from CoreGraphics-70.root
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 2000-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CGDATACONSUMER__') = 'UNDEFINED' THEN
__CGDATACONSUMER__ SET 1

	IF &TYPE('__CGBASE__') = 'UNDEFINED' THEN
	include 'CGBase.a'
	ENDIF
	IF &TYPE('__CFURL__') = 'UNDEFINED' THEN
	include 'CFURL.a'
	ENDIF



;  Callbacks for accessing data.
; * `putBytes' copies `count' bytes from `buffer' to the consumer, and
; * returns the number of bytes copied.  It should return 0 if no more data
; * can be written to the consumer.
; * `releaseConsumer', if non-NULL, is called when the consumer is freed. 

CGDataConsumerCallbacks	RECORD 0
putBytes				 ds.l	1				; offset: $0 (0)
releaseConsumer			 ds.l	1				; offset: $4 (4)
sizeof					 EQU *					; size:   $8 (8)
						ENDR
;  Create a data consumer using `callbacks' to handle the data.  `info' is
; * passed to each of the callback functions. 

; *  CGDataConsumerCreate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDataConsumerRef CGDataConsumerCreate(void *info, const CGDataConsumerCallbacks *callbacks)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGDataConsumerCreate
	ENDIF

;  Create a data consumer which writes data to `url'. 

; *  CGDataConsumerCreateWithURL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDataConsumerRef CGDataConsumerCreateWithURL(CFURLRef url)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGDataConsumerCreateWithURL
	ENDIF

;  Increment the retain count of `consumer' and return it.  All data
; * consumers are created with an initial retain count of 1. 

; *  CGDataConsumerRetain()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDataConsumerRef CGDataConsumerRetain(CGDataConsumerRef consumer)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGDataConsumerRetain
	ENDIF

;  Decrement the retain count of `consumer'.  If the retain count reaches
; * 0, then release it and any associated resources. 

; *  CGDataConsumerRelease()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CGDataConsumerRelease(CGDataConsumerRef consumer)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGDataConsumerRelease
	ENDIF

	ENDIF ; __CGDATACONSUMER__ 


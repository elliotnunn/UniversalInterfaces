;
;    File:       CGDirectPalette.a
;
;    Contains:   xxx put contents here xxx
;
;    Version:    Technology: from CoreGraphics-70.root
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 2000-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CGDIRECTPALETTE__') = 'UNDEFINED' THEN
__CGDIRECTPALETTE__ SET 1

	IF &TYPE('__CGDIRECTDISPLAY__') = 'UNDEFINED' THEN
	include 'CGDirectDisplay.a'
	ENDIF

; typedef float 						CGPaletteBlendFraction

; 
; * Convenient device color representation
; *
; * Values should be in the range from 0.0 to 1.0, where 0.0 is black, and 1.0
; * is full on for each channel.
; 

CGDeviceColor			RECORD 0
red						 ds		Float32			; offset: $0 (0)
green					 ds		Float32			; offset: $4 (4)
blue					 ds		Float32			; offset: $8 (8)
sizeof					 EQU *					; size:   $C (12)
						ENDR
CGDeviceByteColor		RECORD 0
red						 ds.b	1				; offset: $0 (0)
green					 ds.b	1				; offset: $1 (1)
blue					 ds.b	1				; offset: $2 (2)
						 ORG 4
sizeof					 EQU *					; size:   $4 (4)
						ENDR
; 
; * Create a new palette object representing the default 8 bit color palette.
; * Release the palette using CGPaletteRelease().
; 


; *  CGPaletteCreateDefaultColorPalette()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDirectPaletteRef CGPaletteCreateDefaultColorPalette(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteCreateDefaultColorPalette
	ENDIF

; 
; * Create a copy of the display's current palette, if any.
; * Returns NULL if the current display mode does not support a palette.
; * Release the palette using CGPaletteRelease().
; 


; *  CGPaletteCreateWithDisplay()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDirectPaletteRef CGPaletteCreateWithDisplay(CGDirectDisplayID display)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteCreateWithDisplay
	ENDIF

; 
; * Create a new palette with a capacity as specified.  Entries are initialized from
; * the default color palette.  Release the palette using CGPaletteRelease().
; 


; *  CGPaletteCreateWithCapacity()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDirectPaletteRef CGPaletteCreateWithCapacity(CGTableCount capacity)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteCreateWithCapacity
	ENDIF

; 
; * Create a new palette with a capacity and contents as specified.
; * Release the palette using CGPaletteRelease().
; 


; *  CGPaletteCreateWithSamples()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDirectPaletteRef CGPaletteCreateWithSamples(CGDeviceColor *sampleTable, CGTableCount sampleCount)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteCreateWithSamples
	ENDIF

; 
; * Convenience function:
; * Create a new palette with a capacity and contents as specified.
; * Release the palette using CGPaletteRelease().
; 


; *  CGPaletteCreateWithByteSamples()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDirectPaletteRef CGPaletteCreateWithByteSamples(CGDeviceByteColor *sampleTable, CGTableCount sampleCount)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteCreateWithByteSamples
	ENDIF

; 
; * Release a palette
; 


; *  CGPaletteRelease()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CGPaletteRelease(CGDirectPaletteRef palette)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteRelease
	ENDIF

; 
; * Get the color value at the specified index
; 


; *  CGPaletteGetColorAtIndex()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDeviceColor CGPaletteGetColorAtIndex(CGDirectPaletteRef palette, CGTableCount index)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteGetColorAtIndex
	ENDIF

; 
; * Get the index for the specified color value
; * The index returned is for a palette color with the
; * lowest RMS error to the specified color.
; 


; *  CGPaletteGetIndexForColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGTableCount CGPaletteGetIndexForColor(CGDirectPaletteRef palette, CGDeviceColor color)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteGetIndexForColor
	ENDIF

; 
; * Get the number of samples in the palette
; 


; *  CGPaletteGetNumberOfSamples()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGTableCount CGPaletteGetNumberOfSamples(CGDirectPaletteRef palette)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteGetNumberOfSamples
	ENDIF


; 
; * Set the color value at the specified index
; 


; *  CGPaletteSetColorAtIndex()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void CGPaletteSetColorAtIndex(CGDirectPaletteRef palette, CGDeviceColor color, CGTableCount index)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteSetColorAtIndex
	ENDIF

; 
; * Copy a palette
; 


; *  CGPaletteCreateCopy()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDirectPaletteRef CGPaletteCreateCopy(CGDirectPaletteRef palette)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteCreateCopy
	ENDIF

; 
; * Compare two palettes
; 


; *  CGPaletteIsEqualToPalette()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean CGPaletteIsEqualToPalette(CGDirectPaletteRef palette1, CGDirectPaletteRef palette2)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteIsEqualToPalette
	ENDIF

; 
; * Create a new palette blended with a fraction of a device color.
; * Free the resulting palette with CGPaletteRelease()
; 


; *  CGPaletteCreateFromPaletteBlendedWithColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern CGDirectPaletteRef CGPaletteCreateFromPaletteBlendedWithColor(CGDirectPaletteRef palette, CGPaletteBlendFraction fraction, CGDeviceColor color)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CGPaletteCreateFromPaletteBlendedWithColor
	ENDIF

	ENDIF ; __CGDIRECTPALETTE__ 


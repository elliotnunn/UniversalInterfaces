;
;    File:       CMConversions.a
;
;    Contains:   ColorSync Conversion Component API
;
;    Version:    Technology: ColorSync 2.0
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1993-2001 by Apple Computer, Inc. All rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CMCONVERSIONS__') = 'UNDEFINED' THEN
__CMCONVERSIONS__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__COMPONENTS__') = 'UNDEFINED' THEN
	include 'Components.a'
	ENDIF
	IF &TYPE('__CMAPPLICATION__') = 'UNDEFINED' THEN
	include 'CMApplication.a'
	ENDIF


CMConversionInterfaceVersion	EQU		1
;  Component function selectors 

kCMXYZToLab						EQU		0
kCMLabToXYZ						EQU		1
kCMXYZToLuv						EQU		2
kCMLuvToXYZ						EQU		3
kCMXYZToYxy						EQU		4
kCMYxyToXYZ						EQU		5
kCMRGBToHLS						EQU		6
kCMHLSToRGB						EQU		7
kCMRGBToHSV						EQU		8
kCMHSVToRGB						EQU		9
kCMRGBToGRAY					EQU		10
kCMXYZToFixedXYZ				EQU		11
kCMFixedXYZToXYZ				EQU		12
	IF CALL_NOT_IN_CARBON THEN

; *  CMXYZToLab()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMXYZToLab(ComponentInstance ci, const CMColor *src, const CMXYZColor *white, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMXYZToLab
			move.l              #$00100000,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMXYZToLab
	ENDIF


; *  CMLabToXYZ()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMLabToXYZ(ComponentInstance ci, const CMColor *src, const CMXYZColor *white, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMLabToXYZ
			move.l              #$00100001,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMLabToXYZ
	ENDIF


; *  CMXYZToLuv()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMXYZToLuv(ComponentInstance ci, const CMColor *src, const CMXYZColor *white, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMXYZToLuv
			move.l              #$00100002,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMXYZToLuv
	ENDIF


; *  CMLuvToXYZ()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMLuvToXYZ(ComponentInstance ci, const CMColor *src, const CMXYZColor *white, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMLuvToXYZ
			move.l              #$00100003,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMLuvToXYZ
	ENDIF


; *  CMXYZToYxy()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMXYZToYxy(ComponentInstance ci, const CMColor *src, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMXYZToYxy
			move.l              #$000C0004,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMXYZToYxy
	ENDIF


; *  CMYxyToXYZ()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMYxyToXYZ(ComponentInstance ci, const CMColor *src, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMYxyToXYZ
			move.l              #$000C0005,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMYxyToXYZ
	ENDIF


; *  CMRGBToHLS()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMRGBToHLS(ComponentInstance ci, const CMColor *src, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMRGBToHLS
			move.l              #$000C0006,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMRGBToHLS
	ENDIF


; *  CMHLSToRGB()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMHLSToRGB(ComponentInstance ci, const CMColor *src, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMHLSToRGB
			move.l              #$000C0007,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMHLSToRGB
	ENDIF


; *  CMRGBToHSV()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMRGBToHSV(ComponentInstance ci, const CMColor *src, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMRGBToHSV
			move.l              #$000C0008,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMRGBToHSV
	ENDIF


; *  CMHSVToRGB()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMHSVToRGB(ComponentInstance ci, const CMColor *src, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMHSVToRGB
			move.l              #$000C0009,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMHSVToRGB
	ENDIF


; *  CMRGBToGray()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMRGBToGray(ComponentInstance ci, const CMColor *src, CMColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMRGBToGray
			move.l              #$000C000A,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMRGBToGray
	ENDIF


; *  CMXYZToFixedXYZ()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMXYZToFixedXYZ(ComponentInstance ci, const CMXYZColor *src, CMFixedXYZColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMXYZToFixedXYZ
			move.l              #$000C000B,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMXYZToFixedXYZ
	ENDIF


; *  CMFixedXYZToXYZ()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorSyncLibPriv 2.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult CMFixedXYZToXYZ(ComponentInstance ci, const CMFixedXYZColor *src, CMXYZColor *dst, unsigned long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMFixedXYZToXYZ
			move.l              #$000C000C,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMFixedXYZToXYZ
	ENDIF


	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF ; __CMCONVERSIONS__ 


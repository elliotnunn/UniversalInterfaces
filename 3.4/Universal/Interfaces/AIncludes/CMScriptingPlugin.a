;
;    File:       CMScriptingPlugin.a
;
;    Contains:   ColorSync Scripting Plugin API
;
;    Version:    Technology: ColorSync 2.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1998-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__CMSCRIPTINGPLUGIN__') = 'UNDEFINED' THEN
__CMSCRIPTINGPLUGIN__ SET 1

	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF
	IF &TYPE('__CMAPPLICATION__') = 'UNDEFINED' THEN
	include 'CMApplication.a'
	ENDIF




															; ColorSync Scripting AppleEvent Errors 
cmspInvalidImageFile			EQU		-4220				; Plugin cannot handle this image file type 
cmspInvalidImageSpace			EQU		-4221				; Plugin cannot create an image file of this colorspace 
cmspInvalidProfileEmbed			EQU		-4222				; Specific invalid profile errors 
cmspInvalidProfileSource		EQU		-4223
cmspInvalidProfileDest			EQU		-4224
cmspInvalidProfileProof			EQU		-4225
cmspInvalidProfileLink			EQU		-4226

; *** embedFlags field  ***
;  reserved for future use: currently 0 

; *** matchFlags field  ***

cmspFavorEmbeddedMask			EQU		$00000001			; if bit 0 is 0 then use srcProf profile, if 1 then use profile embedded in image if present

; *** scripting plugin entry points  ***
; *** CSScriptingLib API  ***


; *  CMValidImage()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMValidImage(const FSSpec *spec)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMValidImage
	ENDIF


; *  CMGetImageSpace()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMGetImageSpace(const FSSpec *spec, OSType *space)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMGetImageSpace
	ENDIF


; *  CMEmbedImage()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMEmbedImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, CMProfileRef embProf)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMEmbedImage
	ENDIF


; *  CMUnembedImage()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMUnembedImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMUnembedImage
	ENDIF


; *  CMMatchImage()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMMatchImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef srcProf, UInt32 srcIntent, CMProfileRef dstProf)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMMatchImage
	ENDIF


; *  CMProofImage()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMProofImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef srcProf, UInt32 srcIntent, CMProfileRef dstProf, CMProfileRef prfProf)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMProofImage
	ENDIF


; *  CMLinkImage()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMLinkImage(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 qual, CMProfileRef lnkProf, UInt32 lnkIntent)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMLinkImage
	ENDIF


; *  CMCountImageProfiles()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMCountImageProfiles(const FSSpec *spec, UInt32 *count)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMCountImageProfiles
	ENDIF


; *  CMGetIndImageProfile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMGetIndImageProfile(const FSSpec *spec, UInt32 index, CMProfileRef *prof)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMGetIndImageProfile
	ENDIF


; *  CMSetIndImageProfile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in CSScriptingLib 2.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in 3.0 and later
; 

;
; extern CMError CMSetIndImageProfile(const FSSpec *specFrom, const FSSpec *specInto, Boolean repl, UInt32 index, CMProfileRef prof)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMSetIndImageProfile
	ENDIF

	ENDIF ; __CMSCRIPTINGPLUGIN__ 


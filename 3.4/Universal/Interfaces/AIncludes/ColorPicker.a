;
;    File:       ColorPicker.a
;
;    Contains:   Color Picker package Interfaces.
;
;    Version:    Technology: System 7.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1987-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__COLORPICKER__') = 'UNDEFINED' THEN
__COLORPICKER__ SET 1

	IF &TYPE('__MIXEDMODE__') = 'UNDEFINED' THEN
	include 'MixedMode.a'
	ENDIF
	IF &TYPE('__QUICKDRAW__') = 'UNDEFINED' THEN
	include 'Quickdraw.a'
	ENDIF
	IF &TYPE('__CMAPPLICATION__') = 'UNDEFINED' THEN
	include 'CMApplication.a'
	ENDIF
	IF &TYPE('__EVENTS__') = 'UNDEFINED' THEN
	include 'Events.a'
	ENDIF


															;Maximum small fract value, as long
kMaximumSmallFract				EQU		$0000FFFF

kDefaultColorPickerWidth		EQU		383
kDefaultColorPickerHeight		EQU		238

; typedef SInt16						DialogPlacementSpec
kAtSpecifiedOrigin				EQU		0
kDeepestColorScreen				EQU		1
kCenterOnMainScreen				EQU		2

;  These are for the flags field in the structs below (for example ColorPickerInfo). 

kColorPickerDialogIsMoveable	EQU		1
kColorPickerDialogIsModal		EQU		2
kColorPickerCanModifyPalette	EQU		4
kColorPickerCanAnimatePalette	EQU		8
kColorPickerAppIsColorSyncAware	EQU		16
kColorPickerInSystemDialog		EQU		32
kColorPickerInApplicationDialog	EQU		64
kColorPickerInPickerDialog		EQU		128
kColorPickerDetachedFromChoices	EQU		256
kColorPickerCallColorProcLive	EQU		512

	IF OLDROUTINENAMES THEN

															;Maximum small fract value, as long
MaxSmallFract					EQU		$0000FFFF

kDefaultWidth					EQU		383
kDefaultHeight					EQU		238
;  These are for the flags field in the structs below (for example ColorPickerInfo). 

DialogIsMoveable				EQU		1
DialogIsModal					EQU		2
CanModifyPalette				EQU		4
CanAnimatePalette				EQU		8
AppIsColorSyncAware				EQU		16
InSystemDialog					EQU		32
InApplicationDialog				EQU		64
InPickerDialog					EQU		128
DetachedFromChoices				EQU		256
CallColorProcLive				EQU		512
	ENDIF	; OLDROUTINENAMES
;  A SmallFract value is just the fractional part of a Fixed number,
;which is the low order word.  SmallFracts are used to save room,
;and to be compatible with Quickdraw's RGBColor.  They can be
;assigned directly to and from INTEGERs. 

;  Unsigned fraction between 0 and 1 
; typedef unsigned short 				SmallFract

;  For developmental simplicity in switching between the HLS and HSV
;models, HLS is reordered into HSL. Thus both models start with
;hue and saturation values; value/lightness/brightness is last. 


HSVColor				RECORD 0
hue						 ds.w	1				; offset: $0 (0)		; Fraction of circle, red at 0
saturation				 ds.w	1				; offset: $2 (2)		; 0-1, 0 for gray, 1 for pure color
value					 ds.w	1				; offset: $4 (4)		; 0-1, 0 for black, 1 for max intensity
sizeof					 EQU *					; size:   $6 (6)
						ENDR
HSLColor				RECORD 0
hue						 ds.w	1				; offset: $0 (0)		; Fraction of circle, red at 0
saturation				 ds.w	1				; offset: $2 (2)		; 0-1, 0 for gray, 1 for pure color
lightness				 ds.w	1				; offset: $4 (4)		; 0-1, 0 for black, 1 for white
sizeof					 EQU *					; size:   $6 (6)
						ENDR
CMYColor				RECORD 0
cyan					 ds.w	1				; offset: $0 (0)
magenta					 ds.w	1				; offset: $2 (2)
yellow					 ds.w	1				; offset: $4 (4)
sizeof					 EQU *					; size:   $6 (6)
						ENDR
PMColor					RECORD 0
profile					 ds.l	1				; offset: $0 (0)
color					 ds		CMColor			; offset: $4 (4)
sizeof					 EQU *					; size:   $C (12)
						ENDR
; typedef struct PMColor *				PMColorPtr

NPMColor				RECORD 0
profile					 ds.l	1				; offset: $0 (0)
color					 ds		CMColor			; offset: $4 (4)
sizeof					 EQU *					; size:   $C (12)
						ENDR
; typedef struct NPMColor *				NPMColorPtr



PickerMenuItemInfo		RECORD 0
editMenuID				 ds.w	1				; offset: $0 (0)
cutItem					 ds.w	1				; offset: $2 (2)
copyItem				 ds.w	1				; offset: $4 (4)
pasteItem				 ds.w	1				; offset: $6 (6)
clearItem				 ds.w	1				; offset: $8 (8)
undoItem				 ds.w	1				; offset: $A (10)
sizeof					 EQU *					; size:   $C (12)
						ENDR
;  Structs related to deprecated API's have been pulled from this file. 
;  Those structs necessary for developers writing their own color pickers... 
;  have been moved to ColorPickerComponents.h. 

ColorPickerInfo			RECORD 0
theColor				 ds		PMColor			; offset: $0 (0)
dstProfile				 ds.l	1				; offset: $C (12)
flags					 ds.l	1				; offset: $10 (16)
placeWhere				 ds.w	1				; offset: $14 (20)
dialogOrigin			 ds		Point			; offset: $16 (22)
pickerType				 ds.l	1				; offset: $1A (26)
eventProc				 ds.l	1				; offset: $1E (30)
colorProc				 ds.l	1				; offset: $22 (34)
colorProcData			 ds.l	1				; offset: $26 (38)
prompt					 ds		Str255			; offset: $2A (42)
mInfo					 ds		PickerMenuItemInfo ; offset: $12A (298)
newColorChosen			 ds.b	1				; offset: $136 (310)
filler					 ds.b	1				; offset: $137 (311)
sizeof					 EQU *					; size:   $138 (312)
						ENDR
NColorPickerInfo		RECORD 0
theColor				 ds		NPMColor		; offset: $0 (0)
dstProfile				 ds.l	1				; offset: $C (12)
flags					 ds.l	1				; offset: $10 (16)
placeWhere				 ds.w	1				; offset: $14 (20)
dialogOrigin			 ds		Point			; offset: $16 (22)
pickerType				 ds.l	1				; offset: $1A (26)
eventProc				 ds.l	1				; offset: $1E (30)
colorProc				 ds.l	1				; offset: $22 (34)
colorProcData			 ds.l	1				; offset: $26 (38)
prompt					 ds		Str255			; offset: $2A (42)
mInfo					 ds		PickerMenuItemInfo ; offset: $12A (298)
newColorChosen			 ds.b	1				; offset: $136 (310)
reserved				 ds.b	1				; offset: $137 (311)	; Must be 0
sizeof					 EQU *					; size:   $138 (312)
						ENDR

;   Below are the color conversion routines.

; *  Fix2SmallFract()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal SmallFract Fix2SmallFract(Fixed f)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_Fix2SmallFract
			move.w              #$0001,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Fix2SmallFract
	ENDIF


; *  SmallFract2Fix()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal Fixed SmallFract2Fix(SmallFract s)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_SmallFract2Fix
			move.w              #$0002,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SmallFract2Fix
	ENDIF


; *  CMY2RGB()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal void CMY2RGB(const CMYColor *cColor, RGBColor *rColor)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CMY2RGB
			move.w              #$0003,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CMY2RGB
	ENDIF


; *  RGB2CMY()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal void RGB2CMY(const RGBColor *rColor, CMYColor *cColor)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_RGB2CMY
			move.w              #$0004,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION RGB2CMY
	ENDIF


; *  HSL2RGB()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal void HSL2RGB(const HSLColor *hColor, RGBColor *rColor)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_HSL2RGB
			move.w              #$0005,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HSL2RGB
	ENDIF


; *  RGB2HSL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal void RGB2HSL(const RGBColor *rColor, HSLColor *hColor)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_RGB2HSL
			move.w              #$0006,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION RGB2HSL
	ENDIF


; *  HSV2RGB()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal void HSV2RGB(const HSVColor *hColor, RGBColor *rColor)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_HSV2RGB
			move.w              #$0007,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HSV2RGB
	ENDIF


; *  RGB2HSV()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal void RGB2HSV(const RGBColor *rColor, HSVColor *hColor)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_RGB2HSV
			move.w              #$0008,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION RGB2HSV
	ENDIF


;   GetColor() works with or without the Color Picker extension.

; *  GetColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal Boolean GetColor(Point where, ConstStr255Param prompt, const RGBColor *inColor, RGBColor *outColor)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_GetColor
			move.w              #$0009,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetColor
	ENDIF


;   PickColor() requires the Color Picker extension (version 2.0 or greater).

; *  PickColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorPickerLib 2.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal OSErr PickColor(ColorPickerInfo *theColorInfo)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickColor
			move.w              #$0213,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickColor
	ENDIF

;   NPickColor() requires the Color Picker extension (version 2.1 or greater).

; *  NPickColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in ColorPickerLib 2.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 

;
; pascal OSErr NPickColor(NColorPickerInfo *theColorInfo)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NPickColor
			move.w              #$0227,-(sp)
			dc.w            	$A82E
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NPickColor
	ENDIF


;  A suite of mid-level API calls have been deprecated.  Likely you never...  
;  used them anyway.  They were removed from this file and should not be... 
;  used in the future as they are not gauranteed to be supported. 

; *  NewColorChangedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  NewNColorChangedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  NewUserEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  DisposeColorChangedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  DisposeNColorChangedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  DisposeUserEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  InvokeColorChangedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  InvokeNColorChangedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


; *  InvokeUserEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         not available
; 


	ENDIF ; __COLORPICKER__ 


;
;    File:       ColorPickerComponents.a
;
;    Contains:   Color Picker Component Interfaces.
;
;    Version:    Technology: Mac OS 8.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1994-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__COLORPICKERCOMPONENTS__') = 'UNDEFINED' THEN
__COLORPICKERCOMPONENTS__ SET 1

	IF &TYPE('__COLORPICKER__') = 'UNDEFINED' THEN
	include 'ColorPicker.a'
	ENDIF
	IF &TYPE('__COMPONENTS__') = 'UNDEFINED' THEN
	include 'Components.a'
	ENDIF
	IF &TYPE('__MIXEDMODE__') = 'UNDEFINED' THEN
	include 'MixedMode.a'
	ENDIF
	IF &TYPE('__BALLOONS__') = 'UNDEFINED' THEN
	include 'Balloons.a'
	ENDIF
	IF &TYPE('__DIALOGS__') = 'UNDEFINED' THEN
	include 'Dialogs.a'
	ENDIF


kPickerComponentType			EQU		'cpkr'

kPickerInit						EQU		0
kPickerTestGraphicsWorld		EQU		1
kPickerGetDialog				EQU		2
kPickerGetItemList				EQU		3
kPickerGetColor					EQU		4
kPickerSetColor					EQU		5
kPickerEvent					EQU		6
kPickerEdit						EQU		7
kPickerSetVisibility			EQU		8
kPickerDisplay					EQU		9
kPickerItemHit					EQU		10
kPickerSetBaseItem				EQU		11
kPickerGetProfile				EQU		12
kPickerSetProfile				EQU		13
kPickerGetPrompt				EQU		14
kPickerSetPrompt				EQU		15
kPickerGetIconData				EQU		16
kPickerGetEditMenuState			EQU		17
kPickerSetOrigin				EQU		18
kPickerExtractHelpItem			EQU		19
kPickerSetColorChangedProc		EQU		20
kNPickerGetColor				EQU		21
kNPickerSetColor				EQU		22
kNPickerGetProfile				EQU		23
kNPickerSetProfile				EQU		24
kNPickerSetColorChangedProc		EQU		25
;  These structs were moved here from the ColorPicker header.

; typedef SInt16						PickerAction
kPickerDidNothing				EQU		0					; was kDidNothing 
kPickerColorChanged				EQU		1					; was kColorChanged 
kPickerOkHit					EQU		2					; was kOkHit 
kPickerCancelHit				EQU		3					; was kCancelHit 
kPickerNewPickerChosen			EQU		4					; was kNewPickerChosen 
kPickerApplItemHit				EQU		5					; was kApplItemHit 

; typedef SInt16						PickerColorType
kOriginalColor					EQU		0
kNewColor						EQU		1

; typedef SInt16						PickerEditOperation
kPickerCut						EQU		0					; was kCut 
kPickerCopy						EQU		1					; was kCopy 
kPickerPaste					EQU		2					; was kPaste 
kPickerClear					EQU		3					; was kClear 
kPickerUndo						EQU		4					; was kUndo 

; typedef SInt16						PickerItemModifier
kPickerMouseDown				EQU		0					; was kMouseDown 
kPickerKeyDown					EQU		1					; was kKeyDown 
kPickerFieldEntered				EQU		2					; was kFieldEntered 
kPickerFieldLeft				EQU		3					; was kFieldLeft 
kPickerCutOp					EQU		4					; was kCutOp 
kPickerCopyOp					EQU		5					; was kCopyOp 
kPickerPasteOp					EQU		6					; was kPasteOp 
kPickerClearOp					EQU		7					; was kClearOp 
kPickerUndoOp					EQU		8					; was kUndoOp 
;  These are for the flags field in the picker's 'thng' resource. 

kPickerCanDoColor				EQU		1					; was CanDoColor 
kPickerCanDoBlackWhite			EQU		2					; was CanDoBlackWhite 
kPickerAlwaysModifiesPalette	EQU		4					; was AlwaysModifiesPalette 
kPickerMayModifyPalette			EQU		8					; was MayModifyPalette 
kPickerIsColorSyncAware			EQU		16					; was PickerIsColorSyncAware 
kPickerCanDoSystemDialog		EQU		32					; was CanDoSystemDialog 
kPickerCanDoApplDialog			EQU		64					; was CanDoApplDialog 
kPickerHasOwnDialog				EQU		128					; was HasOwnDialog 
kPickerCanDetach				EQU		256					; was CanDetach 
kPickerIsColorSync2Aware		EQU		512					; was PickerIsColorSync2Aware 

; typedef SInt16						PickerEventForcaster
kPickerNoForcast				EQU		0					; was kNoForcast 
kPickerMenuChoice				EQU		1					; was kMenuChoice 
kPickerDialogAccept				EQU		2					; was kDialogAccept 
kPickerDialogCancel				EQU		3					; was kDialogCancel 
kPickerLeaveFocus				EQU		4					; was kLeaveFocus 
kPickerSwitch					EQU		5
kPickerNormalKeyDown			EQU		6					; was kNormalKeyDown 
kPickerNormalMouseDown			EQU		7					; was kNormalMouseDown 
PickerIconData			RECORD 0
scriptCode				 ds.w	1				; offset: $0 (0)
iconSuiteID				 ds.w	1				; offset: $2 (2)
helpResType				 ds.l	1				; offset: $4 (4)
helpResID				 ds.w	1				; offset: $8 (8)
sizeof					 EQU *					; size:   $A (10)
						ENDR
PickerInitData			RECORD 0
pickerDialog			 ds.l	1				; offset: $0 (0)
choicesDialog			 ds.l	1				; offset: $4 (4)
flags					 ds.l	1				; offset: $8 (8)
yourself				 ds.l	1				; offset: $C (12)
sizeof					 EQU *					; size:   $10 (16)
						ENDR
PickerMenuState			RECORD 0
cutEnabled				 ds.b	1				; offset: $0 (0)
copyEnabled				 ds.b	1				; offset: $1 (1)
pasteEnabled			 ds.b	1				; offset: $2 (2)
clearEnabled			 ds.b	1				; offset: $3 (3)
undoEnabled				 ds.b	1				; offset: $4 (4)
filler					 ds.b	1				; offset: $5 (5)
undoString				 ds		Str255			; offset: $6 (6)
sizeof					 EQU *					; size:   $106 (262)
						ENDR
SystemDialogInfo		RECORD 0
flags					 ds.l	1				; offset: $0 (0)
pickerType				 ds.l	1				; offset: $4 (4)
placeWhere				 ds.w	1				; offset: $8 (8)
dialogOrigin			 ds		Point			; offset: $A (10)
mInfo					 ds		PickerMenuItemInfo ; offset: $E (14)
sizeof					 EQU *					; size:   $1A (26)
						ENDR
PickerDialogInfo		RECORD 0
flags					 ds.l	1				; offset: $0 (0)
pickerType				 ds.l	1				; offset: $4 (4)
dialogOrigin			 ds.l	1				; offset: $8 (8)
mInfo					 ds		PickerMenuItemInfo ; offset: $C (12)
sizeof					 EQU *					; size:   $18 (24)
						ENDR
ApplicationDialogInfo	RECORD 0
flags					 ds.l	1				; offset: $0 (0)
pickerType				 ds.l	1				; offset: $4 (4)
theDialog				 ds.l	1				; offset: $8 (8)
pickerOrigin			 ds		Point			; offset: $C (12)
mInfo					 ds		PickerMenuItemInfo ; offset: $10 (16)
sizeof					 EQU *					; size:   $1C (28)
						ENDR
PickerEventData			RECORD 0
event					 ds.l	1				; offset: $0 (0)
action					 ds.w	1				; offset: $4 (4)
itemHit					 ds.w	1				; offset: $6 (6)
handled					 ds.b	1				; offset: $8 (8)
filler					 ds.b	1				; offset: $9 (9)
colorProc				 ds.l	1				; offset: $A (10)
colorProcData			 ds.l	1				; offset: $E (14)
forcast					 ds.w	1				; offset: $12 (18)
sizeof					 EQU *					; size:   $14 (20)
						ENDR
PickerEditData			RECORD 0
theEdit					 ds.w	1				; offset: $0 (0)
action					 ds.w	1				; offset: $2 (2)
handled					 ds.b	1				; offset: $4 (4)
filler					 ds.b	1				; offset: $5 (5)
sizeof					 EQU *					; size:   $6 (6)
						ENDR
PickerItemHitData		RECORD 0
itemHit					 ds.w	1				; offset: $0 (0)
iMod					 ds.w	1				; offset: $2 (2)
action					 ds.w	1				; offset: $4 (4)
colorProc				 ds.l	1				; offset: $6 (6)
colorProcData			 ds.l	1				; offset: $A (10)
where					 ds		Point			; offset: $E (14)
sizeof					 EQU *					; size:   $12 (18)
						ENDR
PickerHelpItemInfo		RECORD 0
options					 ds.l	1				; offset: $0 (0)
tip						 ds		Point			; offset: $4 (4)
altRect					 ds		Rect			; offset: $8 (8)
theProc					 ds.w	1				; offset: $10 (16)
helpVariant				 ds.w	1				; offset: $12 (18)
helpMessage				 ds		HMMessageRecord ; offset: $14 (20)
sizeof					 EQU *					; size:   $116 (278)
						ENDR
	IF OLDROUTINENAMES THEN

kInitPicker						EQU		0
kTestGraphicsWorld				EQU		1
kGetDialog						EQU		2
kGetItemList					EQU		3
kGetColor						EQU		4
kSetColor						EQU		5
kEvent							EQU		6
kEdit							EQU		7
kSetVisibility					EQU		8
kDrawPicker						EQU		9
kItemHit						EQU		10
kSetBaseItem					EQU		11
kGetProfile						EQU		12
kSetProfile						EQU		13
kGetPrompt						EQU		14
kSetPrompt						EQU		15
kGetIconData					EQU		16
kGetEditMenuState				EQU		17
kSetOrigin						EQU		18
kExtractHelpItem				EQU		19

kDidNothing						EQU		0
kColorChanged					EQU		1
kOkHit							EQU		2
kCancelHit						EQU		3
kNewPickerChosen				EQU		4
kApplItemHit					EQU		5

kCut							EQU		0
kCopy							EQU		1
kPaste							EQU		2
kClear							EQU		3
kUndo							EQU		4

kMouseDown						EQU		0
kKeyDown						EQU		1
kFieldEntered					EQU		2
kFieldLeft						EQU		3
kCutOp							EQU		4
kCopyOp							EQU		5
kPasteOp						EQU		6
kClearOp						EQU		7
kUndoOp							EQU		8

kNoForcast						EQU		0
kMenuChoice						EQU		1
kDialogAccept					EQU		2
kDialogCancel					EQU		3
kLeaveFocus						EQU		4
kNormalKeyDown					EQU		6
kNormalMouseDown				EQU		7
; typedef short 						ColorType

; typedef short 						EditOperation

; typedef short 						ItemModifier

; typedef short 						EventForcaster

EventData				RECORD 0
event					 ds.l	1				; offset: $0 (0)
action					 ds.w	1				; offset: $4 (4)
itemHit					 ds.w	1				; offset: $6 (6)
handled					 ds.b	1				; offset: $8 (8)
filler					 ds.b	1				; offset: $9 (9)
colorProc				 ds.l	1				; offset: $A (10)
colorProcData			 ds.l	1				; offset: $E (14)
forcast					 ds.w	1				; offset: $12 (18)
sizeof					 EQU *					; size:   $14 (20)
						ENDR
EditData				RECORD 0
theEdit					 ds.w	1				; offset: $0 (0)
action					 ds.w	1				; offset: $2 (2)
handled					 ds.b	1				; offset: $4 (4)
filler					 ds.b	1				; offset: $5 (5)
sizeof					 EQU *					; size:   $6 (6)
						ENDR
ItemHitData				RECORD 0
itemHit					 ds.w	1				; offset: $0 (0)
iMod					 ds.w	1				; offset: $2 (2)
action					 ds.w	1				; offset: $4 (4)
colorProc				 ds.l	1				; offset: $6 (6)
colorProcData			 ds.l	1				; offset: $A (10)
where					 ds		Point			; offset: $E (14)
sizeof					 EQU *					; size:   $12 (18)
						ENDR
HelpItemInfo			RECORD 0
options					 ds.l	1				; offset: $0 (0)
tip						 ds		Point			; offset: $4 (4)
altRect					 ds		Rect			; offset: $8 (8)
theProc					 ds.w	1				; offset: $10 (16)
helpVariant				 ds.w	1				; offset: $12 (18)
helpMessage				 ds		HMMessageRecord ; offset: $14 (20)
sizeof					 EQU *					; size:   $116 (278)
						ENDR
	ENDIF	; OLDROUTINENAMES
	IF CALL_NOT_IN_CARBON THEN

; *  PickerInit()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerInit(long storage, PickerInitData *data)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerInit
			move.l              #$00040000,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerInit
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerTestGraphicsWorld()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerTestGraphicsWorld(long storage, PickerInitData *data)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerTestGraphicsWorld
			move.l              #$00040001,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerTestGraphicsWorld
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerGetDialog()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerGetDialog(long storage)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerGetDialog
			move.l              #$00000002,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerGetDialog
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerGetItemList()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerGetItemList(long storage)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerGetItemList
			move.l              #$00000003,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerGetItemList
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerGetColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerGetColor(long storage, PickerColorType whichColor, PMColorPtr color)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerGetColor
			move.l              #$00060004,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerGetColor
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  NewPickerOpenUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerCloseUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerCanDoUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerVersionUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerRegisterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerSetTargetUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerInitUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerTestGraphicsWorldUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerGetDialogUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerGetItemListUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerGetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerOpenUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerCloseUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerCanDoUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerVersionUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerRegisterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetTargetUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerInitUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerTestGraphicsWorldUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerGetDialogUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerGetItemListUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerGetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerOpenUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerCloseUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerCanDoUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerVersionUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerRegisterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetTargetUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerInitUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerTestGraphicsWorldUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerGetDialogUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerGetItemListUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerGetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerSetColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerSetColor(long storage, PickerColorType whichColor, PMColorPtr color)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerSetColor
			move.l              #$00060005,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerSetColor
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerEvent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerEvent(long storage, PickerEventData *data)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerEvent
			move.l              #$00040006,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerEvent
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerEdit()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerEdit(long storage, PickerEditData *data)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerEdit
			move.l              #$00040007,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerEdit
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerSetVisibility()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerSetVisibility(long storage, Boolean visible)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerSetVisibility
			move.l              #$00020008,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerSetVisibility
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerDisplay()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerDisplay(long storage)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerDisplay
			move.l              #$00000009,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerDisplay
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerItemHit()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerItemHit(long storage, PickerItemHitData *data)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerItemHit
			move.l              #$0004000A,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerItemHit
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerSetBaseItem()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerSetBaseItem(long storage, short baseItem)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerSetBaseItem
			move.l              #$0002000B,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerSetBaseItem
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerGetProfile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerGetProfile(long storage)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerGetProfile
			move.l              #$0000000C,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerGetProfile
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerSetProfile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerSetProfile(long storage, CMProfileHandle profile)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerSetProfile
			move.l              #$0004000D,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerSetProfile
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerGetPrompt()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerGetPrompt(long storage, Str255 prompt)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerGetPrompt
			move.l              #$0004000E,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerGetPrompt
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerSetPrompt()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerSetPrompt(long storage, ConstStr255Param prompt)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerSetPrompt
			move.l              #$0004000F,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerSetPrompt
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerGetIconData()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerGetIconData(long storage, PickerIconData *data)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerGetIconData
			move.l              #$00040010,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerGetIconData
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerGetEditMenuState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerGetEditMenuState(long storage, PickerMenuState *mState)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerGetEditMenuState
			move.l              #$00040011,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerGetEditMenuState
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerSetOrigin()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerSetOrigin(long storage, Point where)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerSetOrigin
			move.l              #$00040012,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerSetOrigin
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
;   Below are the ColorPicker 2.1 routines.


	IF CALL_NOT_IN_CARBON THEN

; *  PickerSetColorChangedProc()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerSetColorChangedProc(long storage, ColorChangedUPP colorProc, long colorProcData)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerSetColorChangedProc
			move.l              #$00080014,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerSetColorChangedProc
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
;  New Color Picker 2.1 messages.  If you don't wish to support these you should already be... 
;  returning a badComponentSelector in your main entry routine.  They have new selectors
	IF CALL_NOT_IN_CARBON THEN

; *  NPickerGetColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult NPickerGetColor(long storage, PickerColorType whichColor, NPMColor *color)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NPickerGetColor
			move.l              #$00060015,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NPickerGetColor
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  NPickerSetColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult NPickerSetColor(long storage, PickerColorType whichColor, NPMColor *color)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NPickerSetColor
			move.l              #$00060016,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NPickerSetColor
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  NPickerGetProfile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult NPickerGetProfile(long storage, CMProfileRef *profile)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NPickerGetProfile
			move.l              #$00040017,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NPickerGetProfile
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  NPickerSetProfile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult NPickerSetProfile(long storage, CMProfileRef profile)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NPickerSetProfile
			move.l              #$00040018,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NPickerSetProfile
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  NPickerSetColorChangedProc()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult NPickerSetColorChangedProc(long storage, NColorChangedUPP colorProc, long colorProcData)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_NPickerSetColorChangedProc
			move.l              #$00080019,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION NPickerSetColorChangedProc
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  PickerExtractHelpItem()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal ComponentResult PickerExtractHelpItem(long storage, short itemNo, short whichMsg, PickerHelpItemInfo *helpInfo)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PickerExtractHelpItem
			move.l              #$00080013,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PickerExtractHelpItem
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  NewPickerSetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerEditUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerSetVisibilityUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerDisplayUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerItemHitUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerSetBaseItemUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerGetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerSetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerGetPromptUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerSetPromptUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerGetIconDataUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerGetEditMenuStateUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerSetOriginUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerSetColorChangedProcUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewNPickerGetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewNPickerSetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewNPickerGetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewNPickerSetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewNPickerSetColorChangedProcUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewPickerExtractHelpItemUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerEditUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetVisibilityUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerDisplayUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerItemHitUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetBaseItemUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerGetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerGetPromptUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetPromptUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerGetIconDataUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerGetEditMenuStateUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetOriginUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerSetColorChangedProcUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeNPickerGetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeNPickerSetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeNPickerGetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeNPickerSetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeNPickerSetColorChangedProcUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposePickerExtractHelpItemUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerEditUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetVisibilityUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerDisplayUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerItemHitUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetBaseItemUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerGetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerGetPromptUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetPromptUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerGetIconDataUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerGetEditMenuStateUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetOriginUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerSetColorChangedProcUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeNPickerGetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeNPickerSetColorUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeNPickerGetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeNPickerSetProfileUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeNPickerSetColorChangedProcUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokePickerExtractHelpItemUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF ; __COLORPICKERCOMPONENTS__ 


;
;    File:       CommResources.a
;
;    Contains:   Communications Toolbox Resource Manager Interfaces.
;
;    Version:    Technology: System 7.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1988-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__COMMRESOURCES__') = 'UNDEFINED' THEN
__COMMRESOURCES__ SET 1

	IF &TYPE('__OSUTILS__') = 'UNDEFINED' THEN
	include 'OSUtils.a'
	ENDIF
	IF &TYPE('__CONDITIONALMACROS__') = 'UNDEFINED' THEN
	include 'ConditionalMacros.a'
	ENDIF

	IF CALL_NOT_IN_CARBON THEN

															;    tool classes (also the tool file types)    
classCM							EQU		'cbnd'
classFT							EQU		'fbnd'
classTM							EQU		'tbnd'

															;    version of the Comm Resource Manager   
curCRMVersion					EQU		2					; constants general to the use of the Communications Resource Manager 
crmType							EQU		9					; queue type 
crmRecVersion					EQU		1					; version of queue structure 
															;    error codes 
crmGenericError					EQU		-1
crmNoErr						EQU		0
;  data structures general to the use of the Communications Resource Manager 
; typedef OSErr 						CRMErr

CRMRec					RECORD 0
qLink					 ds.l	1				; offset: $0 (0)		; reserved
qType					 ds.w	1				; offset: $4 (4)		; queue type -- ORD(crmType) = 9
crmVersion				 ds.w	1				; offset: $6 (6)		; version of queue element data structure
crmPrivate				 ds.l	1				; offset: $8 (8)		; reserved
crmReserved				 ds.w	1				; offset: $C (12)		; reserved
crmDeviceType			 ds.l	1				; offset: $E (14)		; type of device, assigned by DTS
crmDeviceID				 ds.l	1				; offset: $12 (18)		; device ID; assigned when CRMInstall is called
crmAttributes			 ds.l	1				; offset: $16 (22)		; pointer to attribute block
crmStatus				 ds.l	1				; offset: $1A (26)		; status variable - device specific
crmRefCon				 ds.l	1				; offset: $1E (30)		; for device private use
sizeof					 EQU *					; size:   $22 (34)
						ENDR
; typedef struct CRMRec *				CRMRecPtr

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  InitCRM()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal CRMErr InitCRM(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_InitCRM
			move.w              #$0501,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION InitCRM
	ENDIF


; *  CRMGetHeader()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal QHdrPtr CRMGetHeader(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetHeader
			move.w              #$0502,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetHeader
	ENDIF


; *  CRMInstall()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void CRMInstall(CRMRecPtr crmReqPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMInstall
			move.w              #$0503,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMInstall
	ENDIF


; *  CRMRemove()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr CRMRemove(CRMRecPtr crmReqPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMRemove
			move.w              #$0504,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMRemove
	ENDIF


; *  CRMSearch()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal CRMRecPtr CRMSearch(CRMRecPtr crmReqPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMSearch
			move.w              #$0505,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMSearch
	ENDIF


; *  CRMGetCRMVersion()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal short CRMGetCRMVersion(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetCRMVersion
			move.w              #$0506,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetCRMVersion
	ENDIF


; *  CRMGetResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGetResource(ResType theType, short theID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetResource
			move.w              #$0507,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetResource
	ENDIF


; *  CRMGet1Resource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGet1Resource(ResType theType, short theID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGet1Resource
			move.w              #$0508,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGet1Resource
	ENDIF


; *  CRMGetIndResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGetIndResource(ResType theType, short index)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetIndResource
			move.w              #$0509,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetIndResource
	ENDIF


; *  CRMGet1IndResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGet1IndResource(ResType theType, short index)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGet1IndResource
			move.w              #$050A,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGet1IndResource
	ENDIF


; *  CRMGetNamedResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGetNamedResource(ResType theType, ConstStr255Param name)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetNamedResource
			move.w              #$050B,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetNamedResource
	ENDIF


; *  CRMGet1NamedResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGet1NamedResource(ResType theType, ConstStr255Param name)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGet1NamedResource
			move.w              #$050C,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGet1NamedResource
	ENDIF


; *  CRMReleaseResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void CRMReleaseResource(Handle theHandle)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMReleaseResource
			move.w              #$050D,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMReleaseResource
	ENDIF


; *  CRMGetToolResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGetToolResource(short procID, ResType theType, short theID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetToolResource
			move.w              #$0523,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetToolResource
	ENDIF


; *  CRMGetToolNamedResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Handle CRMGetToolNamedResource(short procID, ResType theType, ConstStr255Param name)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetToolNamedResource
			move.w              #$0526,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetToolNamedResource
	ENDIF


; *  CRMReleaseToolResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void CRMReleaseToolResource(short procID, Handle theHandle)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMReleaseToolResource
			move.w              #$0524,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMReleaseToolResource
	ENDIF


; *  CRMGetIndex()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal long CRMGetIndex(Handle theHandle)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetIndex
			move.w              #$050E,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetIndex
	ENDIF


; *  CRMLocalToRealID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal short CRMLocalToRealID(ResType bundleType, short toolID, ResType theType, short localID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMLocalToRealID
			move.w              #$050F,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMLocalToRealID
	ENDIF


; *  CRMRealToLocalID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal short CRMRealToLocalID(ResType bundleType, short toolID, ResType theType, short realID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMRealToLocalID
			move.w              #$0510,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMRealToLocalID
	ENDIF


; *  CRMGetIndToolName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr CRMGetIndToolName(OSType bundleType, short index, Str255 toolName)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMGetIndToolName
			move.w              #$0511,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMGetIndToolName
	ENDIF


; *  CRMFindCommunications()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr CRMFindCommunications(short *vRefNum, long *dirID)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMFindCommunications
			move.w              #$051A,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMFindCommunications
	ENDIF


; *  CRMIsDriverOpen()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Boolean CRMIsDriverOpen(ConstStr255Param driverName)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMIsDriverOpen
			move.w              #$0521,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMIsDriverOpen
	ENDIF


; *  CRMParseCAPSResource()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal CRMErr CRMParseCAPSResource(Handle theHandle, ResType selector, unsigned long *value)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMParseCAPSResource
			move.w              #$0525,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMParseCAPSResource
	ENDIF


; *  CRMReserveRF()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr CRMReserveRF(short refNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMReserveRF
			move.w              #$0513,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMReserveRF
	ENDIF


; *  CRMReleaseRF()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr CRMReleaseRF(short refNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CRMReleaseRF
			move.w              #$0514,-(sp)
			move.l              sp,A0
			dc.w            	$A08B
			addq.w              #2,sp
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CRMReleaseRF
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON


	ENDIF ; __COMMRESOURCES__ 


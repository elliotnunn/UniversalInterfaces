;
;    File:       DiskInit.a
;
;    Contains:   Disk Initialization Package ('PACK' 2) Interfaces.
;
;    Version:    Technology: System 8.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1985-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__DISKINIT__') = 'UNDEFINED' THEN
__DISKINIT__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF

HFSDefaults				RECORD 0
sigWord					 ds.b	2				; offset: $0 (0)		;  signature word 
abSize					 ds.l	1				; offset: $2 (2)		;  allocation block size in bytes 
clpSize					 ds.l	1				; offset: $6 (6)		;  clump size in bytes 
nxFreeFN				 ds.l	1				; offset: $A (10)		;  next free file number 
btClpSize				 ds.l	1				; offset: $E (14)		;  B-Tree clump size in bytes 
rsrv1					 ds.w	1				; offset: $12 (18)		;  reserved 
rsrv2					 ds.w	1				; offset: $14 (20)		;  reserved 
rsrv3					 ds.w	1				; offset: $16 (22)		;  reserved 
sizeof					 EQU *					; size:   $18 (24)
						ENDR

kHFSPlusDefaultsVersion			EQU		1
HFSPlusDefaults			RECORD 0
version					 ds.w	1				; offset: $0 (0)		;  version of this structure 
flags					 ds.w	1				; offset: $2 (2)		;  currently undefined; pass zero 
blockSize				 ds.l	1				; offset: $4 (4)		;  allocation block size in bytes 
rsrcClumpSize			 ds.l	1				; offset: $8 (8)		;  clump size for resource forks 
dataClumpSize			 ds.l	1				; offset: $C (12)		;  clump size for data forks 
nextFreeFileID			 ds.l	1				; offset: $10 (16)		;  next free file number 
catalogClumpSize		 ds.l	1				; offset: $14 (20)		;  clump size for catalog B-tree 
catalogNodeSize			 ds.l	1				; offset: $18 (24)		;  node size for catalog B-tree 
extentsClumpSize		 ds.l	1				; offset: $1C (28)		;  clump size for extents B-tree 
extentsNodeSize			 ds.l	1				; offset: $20 (32)		;  node size for extents B-tree 
attributesClumpSize		 ds.l	1				; offset: $24 (36)		;  clump size for attributes B-tree 
attributesNodeSize		 ds.l	1				; offset: $28 (40)		;  node size for attributes B-tree 
allocationClumpSize		 ds.l	1				; offset: $2C (44)		;  clump size for allocation bitmap file 
sizeof					 EQU *					; size:   $30 (48)
						ENDR
	IF CALL_NOT_IN_CARBON THEN

; *  DILoad()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void DILoad(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DILoad
			moveq           	#2,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DILoad
	ENDIF


; *  DIUnload()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void DIUnload(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIUnload
			moveq           	#4,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIUnload
	ENDIF


; *  DIBadMount()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal short DIBadMount(Point where, UInt32 evtMessage)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIBadMount
			moveq           	#0,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIBadMount
	ENDIF


; *  DIFormat()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr DIFormat(short drvNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIFormat
			moveq           	#6,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIFormat
	ENDIF


; *  DIVerify()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr DIVerify(short drvNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIVerify
			moveq           	#8,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIVerify
	ENDIF


; *  DIZero()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr DIZero(short drvNum, ConstStr255Param volName)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIZero
			moveq           	#10,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIZero
	ENDIF

; 
;    DIXFormat, DIXZero, and DIReformat are only available when FSM (File System Manager) is installed.
;    FSM is part of Macintosh PC Exchange and System 7.5.
;


; *  DIXFormat()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 8.5 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr DIXFormat(short drvNum, Boolean fmtFlag, unsigned long fmtArg, unsigned long *actSize)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIXFormat
			moveq           	#12,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIXFormat
	ENDIF


; *  DIXZero()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 8.5 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr DIXZero(short drvNum, ConstStr255Param volName, short fsid, short mediaStatus, short volTypeSelector, unsigned long volSize, void *extendedInfoPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIXZero
			moveq           	#14,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIXZero
	ENDIF


; *  DIReformat()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 8.5 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr DIReformat(short drvNum, short fsid, ConstStr255Param volName, ConstStr255Param msgText)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_DIReformat
			moveq           	#16,D0
			move.w              D0,-(sp)
			dc.w            	$A9E9
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DIReformat
	ENDIF


	ENDIF	; CALL_NOT_IN_CARBON

	ENDIF ; __DISKINIT__ 


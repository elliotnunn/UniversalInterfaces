;
;    File:       DrawSprocket.a
;
;    Contains:   Games Sprockets: DrawSprocket interfaces
;
;    Version:    Technology: Draw Sprocket 1.7
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1996-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__DRAWSPROCKET__') = 'UNDEFINED' THEN
__DRAWSPROCKET__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__EVENTS__') = 'UNDEFINED' THEN
	include 'Events.a'
	ENDIF
	IF &TYPE('__QUICKDRAW__') = 'UNDEFINED' THEN
	include 'Quickdraw.a'
	ENDIF
	IF &TYPE('__QDOFFSCREEN__') = 'UNDEFINED' THEN
	include 'QDOffscreen.a'
	ENDIF
	IF &TYPE('__DISPLAYS__') = 'UNDEFINED' THEN
	include 'Displays.a'
	ENDIF
	IF &TYPE('__MACERRORS__') = 'UNDEFINED' THEN
	include 'MacErrors.a'
	ENDIF
; 
;********************************************************************************
;** constants
;********************************************************************************
;


; typedef long							DSpDepthMask
kDSpDepthMask_1					EQU		$01
kDSpDepthMask_2					EQU		$02
kDSpDepthMask_4					EQU		$04
kDSpDepthMask_8					EQU		$08
kDSpDepthMask_16				EQU		$10
kDSpDepthMask_32				EQU		$20
kDSpDepthMask_All				EQU		-1

; typedef long							DSpColorNeeds
kDSpColorNeeds_DontCare			EQU		0
kDSpColorNeeds_Request			EQU		1
kDSpColorNeeds_Require			EQU		2

; typedef long							DSpContextState
kDSpContextState_Active			EQU		0
kDSpContextState_Paused			EQU		1
kDSpContextState_Inactive		EQU		2
;  kDSpContextOption_QD3DAccel not yet implemented 

; typedef long							DSpContextOption
															;    kDSpContextOption_QD3DAccel       = 1<<0,
kDSpContextOption_PageFlip		EQU		$02
kDSpContextOption_DontSyncVBL	EQU		$04
kDSpContextOption_Stereoscopic	EQU		$08

; typedef long							DSpAltBufferOption
kDSpAltBufferOption_RowBytesEqualsWidth EQU $01

; typedef long							DSpBufferKind
kDSpBufferKind_Normal			EQU		0

; typedef long							DSpBlitMode
kDSpBlitMode_Plain				EQU		0
kDSpBlitMode_SrcKey				EQU		$01
kDSpBlitMode_DstKey				EQU		$02
kDSpBlitMode_Interpolation		EQU		$04
; 
;********************************************************************************
;** data types
;********************************************************************************
;







	IF CALL_NOT_IN_CARBON THEN

; *  NewDSpEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewDSpCallbackUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeDSpEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeDSpCallbackUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeDSpEventUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeDSpCallbackUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

	ENDIF	; CALL_NOT_IN_CARBON
DSpContextAttributes	RECORD 0
frequency				 ds.l	1				; offset: $0 (0)
displayWidth			 ds.l	1				; offset: $4 (4)
displayHeight			 ds.l	1				; offset: $8 (8)
reserved1				 ds.l	1				; offset: $C (12)
reserved2				 ds.l	1				; offset: $10 (16)
colorNeeds				 ds.l	1				; offset: $14 (20)
colorTable				 ds.l	1				; offset: $18 (24)
contextOptions			 ds.l	1				; offset: $1C (28)
backBufferDepthMask		 ds.l	1				; offset: $20 (32)
displayDepthMask		 ds.l	1				; offset: $24 (36)
backBufferBestDepth		 ds.l	1				; offset: $28 (40)
displayBestDepth		 ds.l	1				; offset: $2C (44)
pageCount				 ds.l	1				; offset: $30 (48)
filler					 ds.b	3				; offset: $34 (52)
gameMustConfirmSwitch	 ds.b	1				; offset: $37 (55)
reserved3				 ds.l	4				; offset: $38 (56)
sizeof					 EQU *					; size:   $48 (72)
						ENDR
; typedef struct DSpContextAttributes *	DSpContextAttributesPtr

DSpAltBufferAttributes	RECORD 0
width					 ds.l	1				; offset: $0 (0)
height					 ds.l	1				; offset: $4 (4)
options					 ds.l	1				; offset: $8 (8)
reserved				 ds.l	4				; offset: $C (12)
sizeof					 EQU *					; size:   $1C (28)
						ENDR


DSpBlitInfo				RECORD 0
completionFlag			 ds.b	1				; offset: $0 (0)
filler					 ds.b	3				; offset: $1 (1)
completionProc			 ds.l	1				; offset: $4 (4)
srcContext				 ds.l	1				; offset: $8 (8)
srcBuffer				 ds.l	1				; offset: $C (12)
srcRect					 ds		Rect			; offset: $10 (16)
srcKey					 ds.l	1				; offset: $18 (24)
dstContext				 ds.l	1				; offset: $1C (28)
dstBuffer				 ds.l	1				; offset: $20 (32)
dstRect					 ds		Rect			; offset: $24 (36)
dstKey					 ds.l	1				; offset: $2C (44)
mode					 ds.l	1				; offset: $30 (48)
reserved				 ds.l	4				; offset: $34 (52)
sizeof					 EQU *					; size:   $44 (68)
						ENDR
; typedef struct DSpBlitInfo *			DSpBlitInfoPtr

; 
;********************************************************************************
;** function prototypes
;********************************************************************************
;


; 
;** global operations
;


; *  DSpStartup()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpStartup(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpStartup
	ENDIF


; *  DSpShutdown()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpShutdown(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpShutdown
	ENDIF


; *  DSpGetVersion()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.7 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern NumVersion DSpGetVersion(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpGetVersion
	ENDIF


; *  DSpGetFirstContext()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpGetFirstContext(DisplayIDType inDisplayID, DSpContextReference *outContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpGetFirstContext
	ENDIF


; *  DSpGetNextContext()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpGetNextContext(DSpContextReference inCurrentContext, DSpContextReference *outContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpGetNextContext
	ENDIF


; *  DSpGetCurrentContext()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.7 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpGetCurrentContext(DisplayIDType inDisplayID, DSpContextReference *outContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpGetCurrentContext
	ENDIF


; *  DSpFindBestContext()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpFindBestContext(DSpContextAttributesPtr inDesiredAttributes, DSpContextReference *outContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpFindBestContext
	ENDIF


; *  DSpFindBestContextOnDisplayID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.7 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpFindBestContextOnDisplayID(DSpContextAttributesPtr inDesiredAttributes, DSpContextReference *outContext, DisplayIDType inDisplayID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpFindBestContextOnDisplayID
	ENDIF

	IF CALL_NOT_IN_CARBON THEN

; *  DSpCanUserSelectContext()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpCanUserSelectContext(DSpContextAttributesPtr inDesiredAttributes, Boolean *outUserCanSelectContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpCanUserSelectContext
	ENDIF


; *  DSpUserSelectContext()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpUserSelectContext(DSpContextAttributesPtr inDesiredAttributes, DisplayIDType inDialogDisplayLocation, DSpEventUPP inEventProc, DSpContextReference *outContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpUserSelectContext
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON

; *  DSpProcessEvent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpProcessEvent(EventRecord *inEvent, Boolean *outEventWasProcessed)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpProcessEvent
	ENDIF


; *  DSpSetBlankingColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpSetBlankingColor(const RGBColor *inRGBColor)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpSetBlankingColor
	ENDIF


; *  DSpSetDebugMode()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpSetDebugMode(Boolean inDebugMode)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpSetDebugMode
	ENDIF


; *  DSpFindContextFromPoint()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpFindContextFromPoint(Point inGlobalPoint, DSpContextReference *outContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpFindContextFromPoint
	ENDIF


; *  DSpGetMouse()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpGetMouse(Point *outGlobalPoint)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpGetMouse
	ENDIF

; 
;** alternate buffer operations
;

	IF CALL_NOT_IN_CARBON THEN

; *  DSpAltBuffer_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpAltBuffer_New(DSpContextReference inContext, Boolean inVRAMBuffer, DSpAltBufferAttributes *inAttributes, DSpAltBufferReference *outAltBuffer)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpAltBuffer_New
	ENDIF


; *  DSpAltBuffer_Dispose()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpAltBuffer_Dispose(DSpAltBufferReference inAltBuffer)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpAltBuffer_Dispose
	ENDIF


; *  DSpAltBuffer_InvalRect()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpAltBuffer_InvalRect(DSpAltBufferReference inAltBuffer, const Rect *inInvalidRect)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpAltBuffer_InvalRect
	ENDIF


; *  DSpAltBuffer_GetCGrafPtr()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpAltBuffer_GetCGrafPtr(DSpAltBufferReference inAltBuffer, DSpBufferKind inBufferKind, CGrafPtr *outCGrafPtr, GDHandle *outGDevice)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpAltBuffer_GetCGrafPtr
	ENDIF

; 
;** context operations
;

;  general 
	ENDIF	; CALL_NOT_IN_CARBON

; *  DSpContext_GetAttributes()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GetAttributes(DSpContextReferenceConst inContext, DSpContextAttributesPtr outAttributes)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetAttributes
	ENDIF


; *  DSpContext_Reserve()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_Reserve(DSpContextReference inContext, DSpContextAttributesPtr inDesiredAttributes)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_Reserve
	ENDIF


; *  DSpContext_Queue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.7 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_Queue(DSpContextReference inParentContext, DSpContextReference inChildContext, DSpContextAttributesPtr inDesiredAttributes)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_Queue
	ENDIF


; *  DSpContext_Switch()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.7 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_Switch(DSpContextReference inOldContext, DSpContextReference inNewContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_Switch
	ENDIF


; *  DSpContext_Release()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_Release(DSpContextReference inContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_Release
	ENDIF


; *  DSpContext_Dispose()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_Dispose(DSpContextReference inContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_Dispose
	ENDIF


; *  DSpContext_GetDisplayID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GetDisplayID(DSpContextReferenceConst inContext, DisplayIDType *outDisplayID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetDisplayID
	ENDIF


; *  DSpContext_GlobalToLocal()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GlobalToLocal(DSpContextReferenceConst inContext, Point *ioPoint)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GlobalToLocal
	ENDIF


; *  DSpContext_LocalToGlobal()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_LocalToGlobal(DSpContextReferenceConst inContext, Point *ioPoint)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_LocalToGlobal
	ENDIF

	IF CALL_NOT_IN_CARBON THEN

; *  DSpContext_SetVBLProc()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_SetVBLProc(DSpContextReference inContext, DSpCallbackUPP inProcPtr, void *inRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_SetVBLProc
	ENDIF


; *  DSpContext_GetFlattenedSize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_GetFlattenedSize(DSpContextReference inContext, UInt32 *outFlatContextSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetFlattenedSize
	ENDIF


; *  DSpContext_Flatten()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_Flatten(DSpContextReference inContext, void *outFlatContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_Flatten
	ENDIF


; *  DSpContext_Restore()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_Restore(void *inFlatContext, DSpContextReference *outRestoredContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_Restore
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON

; *  DSpContext_GetMonitorFrequency()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GetMonitorFrequency(DSpContextReferenceConst inContext, Fixed *outFrequency)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetMonitorFrequency
	ENDIF

	IF CALL_NOT_IN_CARBON THEN

; *  DSpContext_SetMaxFrameRate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_SetMaxFrameRate(DSpContextReference inContext, UInt32 inMaxFPS)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_SetMaxFrameRate
	ENDIF


; *  DSpContext_GetMaxFrameRate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_GetMaxFrameRate(DSpContextReferenceConst inContext, UInt32 *outMaxFPS)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetMaxFrameRate
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON

; *  DSpContext_SetState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_SetState(DSpContextReference inContext, DSpContextState inState)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_SetState
	ENDIF


; *  DSpContext_GetState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GetState(DSpContextReferenceConst inContext, DSpContextState *outState)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetState
	ENDIF


; *  DSpContext_IsBusy()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_IsBusy(DSpContextReferenceConst inContext, Boolean *outBusyFlag)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_IsBusy
	ENDIF

;  dirty rectangles 
	IF CALL_NOT_IN_CARBON THEN

; *  DSpContext_SetDirtyRectGridSize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_SetDirtyRectGridSize(DSpContextReference inContext, UInt32 inCellPixelWidth, UInt32 inCellPixelHeight)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_SetDirtyRectGridSize
	ENDIF


; *  DSpContext_GetDirtyRectGridSize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_GetDirtyRectGridSize(DSpContextReferenceConst inContext, UInt32 *outCellPixelWidth, UInt32 *outCellPixelHeight)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetDirtyRectGridSize
	ENDIF


; *  DSpContext_GetDirtyRectGridUnits()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_GetDirtyRectGridUnits(DSpContextReferenceConst inContext, UInt32 *outCellPixelWidth, UInt32 *outCellPixelHeight)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetDirtyRectGridUnits
	ENDIF


; *  DSpContext_InvalBackBufferRect()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_InvalBackBufferRect(DSpContextReference inContext, const Rect *inRect)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_InvalBackBufferRect
	ENDIF

;  underlays 

; *  DSpContext_SetUnderlayAltBuffer()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_SetUnderlayAltBuffer(DSpContextReference inContext, DSpAltBufferReference inNewUnderlay)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_SetUnderlayAltBuffer
	ENDIF


; *  DSpContext_GetUnderlayAltBuffer()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpContext_GetUnderlayAltBuffer(DSpContextReferenceConst inContext, DSpAltBufferReference *outUnderlay)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetUnderlayAltBuffer
	ENDIF

;  gamma 
	ENDIF	; CALL_NOT_IN_CARBON

; *  DSpContext_FadeGammaOut()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_FadeGammaOut(DSpContextReference inContext, RGBColor *inZeroIntensityColor)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_FadeGammaOut
	ENDIF


; *  DSpContext_FadeGammaIn()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_FadeGammaIn(DSpContextReference inContext, RGBColor *inZeroIntensityColor)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_FadeGammaIn
	ENDIF


; *  DSpContext_FadeGamma()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_FadeGamma(DSpContextReference inContext, SInt32 inPercentOfOriginalIntensity, RGBColor *inZeroIntensityColor)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_FadeGamma
	ENDIF

;  buffering 

; *  DSpContext_SwapBuffers()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_SwapBuffers(DSpContextReference inContext, DSpCallbackUPP inBusyProc, void *inUserRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_SwapBuffers
	ENDIF


; *  DSpContext_GetBackBuffer()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GetBackBuffer(DSpContextReference inContext, DSpBufferKind inBufferKind, CGrafPtr *outBackBuffer)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetBackBuffer
	ENDIF


; *  DSpContext_GetFrontBuffer()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GetFrontBuffer(DSpContextReferenceConst inContext, CGrafPtr *outFrontBuffer)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetFrontBuffer
	ENDIF

;  clut operations 

; *  DSpContext_SetCLUTEntries()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_SetCLUTEntries(DSpContextReference inContext, const ColorSpec *inEntries, UInt16 inStartingEntry, UInt16 inLastEntry)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_SetCLUTEntries
	ENDIF


; *  DSpContext_GetCLUTEntries()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus DSpContext_GetCLUTEntries(DSpContextReferenceConst inContext, ColorSpec *outEntries, UInt16 inStartingEntry, UInt16 inLastEntry)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpContext_GetCLUTEntries
	ENDIF

;  blit operations 
	IF CALL_NOT_IN_CARBON THEN

; *  DSpBlit_Faster()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpBlit_Faster(DSpBlitInfoPtr inBlitInfo, Boolean inAsyncFlag)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpBlit_Faster
	ENDIF


; *  DSpBlit_Fastest()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in DrawSprocketLib 1.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus DSpBlit_Fastest(DSpBlitInfoPtr inBlitInfo, Boolean inAsyncFlag)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION DSpBlit_Fastest
	ENDIF


	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF ; __DRAWSPROCKET__ 


;
;    File:       EPPC.a
;
;    Contains:   High Level Event Manager Interfaces.
;
;    Version:    Technology: System 7.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1988-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__EPPC__') = 'UNDEFINED' THEN
__EPPC__ SET 1

	IF &TYPE('__MACERRORS__') = 'UNDEFINED' THEN
	include 'MacErrors.a'
	ENDIF
	IF &TYPE('__APPLETALK__') = 'UNDEFINED' THEN
	include 'AppleTalk.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF
	IF &TYPE('__PPCTOOLBOX__') = 'UNDEFINED' THEN
	include 'PPCToolbox.a'
	ENDIF
	IF &TYPE('__PROCESSES__') = 'UNDEFINED' THEN
	include 'Processes.a'
	ENDIF
	IF &TYPE('__EVENTS__') = 'UNDEFINED' THEN
	include 'Events.a'
	ENDIF


															; postOptions currently supported 
receiverIDMask					EQU		$0000F000
receiverIDisPSN					EQU		$00008000
receiverIDisSignature			EQU		$00007000
receiverIDisSessionID			EQU		$00006000
receiverIDisTargetID			EQU		$00005000
systemOptionsMask				EQU		$00000F00
nReturnReceipt					EQU		$00000200
priorityMask					EQU		$000000FF
nAttnMsg						EQU		$00000001

															; constant for return receipts 
HighLevelEventMsgClass			EQU		'jaym'
rtrnReceiptMsgID				EQU		'rtrn'

msgWasPartiallyAccepted			EQU		2
msgWasFullyAccepted				EQU		1
msgWasNotAccepted				EQU		0
TargetID				RECORD 0
sessionID				 ds.l	1				; offset: $0 (0)
name					 ds		PPCPortRec		; offset: $4 (4)
location				 ds		LocationNameRec ; offset: $4C (76)
recvrName				 ds		PPCPortRec		; offset: $B4 (180)
sizeof					 EQU *					; size:   $FC (252)
						ENDR
; typedef struct TargetID *				TargetIDPtr

; typedef TargetIDPtr *					TargetIDHandle

; typedef TargetIDHandle 				TargetIDHdl

SenderID				RECORD 0
f						 ds		TargetID
sizeof					 EQU *					; size:   $FC (252)
						ENDR


; typedef struct SenderID *				SenderIDPtr

HighLevelEventMsg		RECORD 0
HighLevelEventMsgHeaderLength  ds.w 1			; offset: $0 (0)
version					 ds.w	1				; offset: $2 (2)
reserved1				 ds.l	1				; offset: $4 (4)
theMsgEvent				 ds		EventRecord		; offset: $8 (8)
userRefcon				 ds.l	1				; offset: $18 (24)
postingOptions			 ds.l	1				; offset: $1C (28)
msgLength				 ds.l	1				; offset: $20 (32)
sizeof					 EQU *					; size:   $24 (36)
						ENDR
; typedef struct HighLevelEventMsg *	HighLevelEventMsgPtr

; typedef HighLevelEventMsgPtr *		HighLevelEventMsgHandle

; typedef HighLevelEventMsgHandle 		HighLevelEventMsgHdl

	IF CALL_NOT_IN_CARBON THEN

; *  NewGetSpecificFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeGetSpecificFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeGetSpecificFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN
	IF CALL_NOT_IN_CARBON THEN

; *  PostHighLevelEvent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr PostHighLevelEvent(const EventRecord *theEvent, void *receiverID, unsigned long msgRefcon, void *msgBuff, unsigned long msgLen, unsigned long postingOptions)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_PostHighLevelEvent
			move.w              #$0034,-(sp)
			dc.w            	$A88F
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PostHighLevelEvent
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN
	IF CALL_NOT_IN_CARBON THEN

; *  AcceptHighLevelEvent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr AcceptHighLevelEvent(TargetID *sender, unsigned long *msgRefcon, void *msgBuff, unsigned long *msgLen)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_AcceptHighLevelEvent
			move.w              #$0033,-(sp)
			dc.w            	$A88F
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION AcceptHighLevelEvent
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN
	IF CALL_NOT_IN_CARBON THEN

; *  GetProcessSerialNumberFromPortName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr GetProcessSerialNumberFromPortName(const PPCPortRec *portName, ProcessSerialNumber *pPSN)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_GetProcessSerialNumberFromPortName
			move.w              #$0035,-(sp)
			dc.w            	$A88F
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetProcessSerialNumberFromPortName
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN
	IF CALL_NOT_IN_CARBON THEN

; *  GetPortNameFromProcessSerialNumber()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr GetPortNameFromProcessSerialNumber(PPCPortRec *portName, const ProcessSerialNumber *pPSN)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_GetPortNameFromProcessSerialNumber
			move.w              #$0046,-(sp)
			dc.w            	$A88F
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetPortNameFromProcessSerialNumber
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN
	IF CALL_NOT_IN_CARBON THEN

; *  GetSpecificHighLevelEvent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Boolean GetSpecificHighLevelEvent(GetSpecificFilterUPP aFilter, void *contextPtr, OSErr *err)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_GetSpecificHighLevelEvent
			move.w              #$0045,-(sp)
			dc.w            	$A88F
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetSpecificHighLevelEvent
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF ; __EPPC__ 


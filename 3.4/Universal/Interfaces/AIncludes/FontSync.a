;
;    File:       FontSync.a
;
;    Contains:   Public interface for FontSync
;
;    Version:    Technology: Mac OS 9
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1999-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__FONTSYNC__') = 'UNDEFINED' THEN
__FONTSYNC__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF
	IF &TYPE('__FONTS__') = 'UNDEFINED' THEN
	include 'Fonts.a'
	ENDIF
	IF &TYPE('__SFNTTYPES__') = 'UNDEFINED' THEN
	include 'SFNTTypes.a'
	ENDIF
	IF &TYPE('__MACERRORS__') = 'UNDEFINED' THEN
	include 'MacErrors.a'
	ENDIF


;  Matching Options 

; typedef UInt32						FNSMatchOptions
kFNSMatchNames					EQU		$00000001			; font names must match 
kFNSMatchTechnology				EQU		$00000002			; scaler technology must match 
kFNSMatchGlyphs					EQU		$00000004			; glyph data must match 
kFNSMatchEncodings				EQU		$00000008			; cmaps must match 
kFNSMatchQDMetrics				EQU		$00000010			; QuickDraw Text metrics must match 
kFNSMatchATSUMetrics			EQU		$00000020			; ATSUI metrics (incl. vertical) must match 
kFNSMatchKerning				EQU		$00000040			; kerning data must match 
kFNSMatchWSLayout				EQU		$00000080			; WorldScript layout tables must match 
kFNSMatchAATLayout				EQU		$00000100			; AAT (incl. OpenType) layout tables must match 
kFNSMatchPrintEncoding			EQU		$00000200			; PostScript font and glyph names and re-encoding vector must match 
kFNSMissingDataNoMatch			EQU		$80000000			; treat missing data as mismatch 
kFNSMatchAll					EQU		$FFFFFFFF			; everything must match 
kFNSMatchDefaults				EQU		0					; use global default match options 

; *  FNSMatchDefaultsGet()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern FNSMatchOptions FNSMatchDefaultsGet(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSMatchDefaultsGet
	ENDIF


;  Version control 

; typedef UInt32						FNSObjectVersion
kFNSVersionDontCare				EQU		0
kFNSCurSysInfoVersion			EQU		1
;  No features defined yet.
; typedef UInt32 						FNSFeatureFlags


;   The FontSync library version number is binary-coded decimal:
;   8 bits of major version, 4 minor version and 4 bits revision.


FNSSysInfo				RECORD 0
iSysInfoVersion			 ds.l	1				; offset: $0 (0)		;  fill this in before calling FNSSysInfoGet
oFeatures				 ds.l	1				; offset: $4 (4)
oCurRefVersion			 ds.l	1				; offset: $8 (8)
oMinRefVersion			 ds.l	1				; offset: $C (12)
oCurProfileVersion		 ds.l	1				; offset: $10 (16)
oMinProfileVersion		 ds.l	1				; offset: $14 (20)
oFontSyncVersion		 ds.w	1				; offset: $18 (24)
sizeof					 EQU *					; size:   $1A (26)
						ENDR

; *  FNSSysInfoGet()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern void FNSSysInfoGet(FNSSysInfo *ioInfo)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSSysInfoGet
	ENDIF


;  FontSync References 



; *  FNSReferenceGetVersion()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceGetVersion(FNSFontReference iReference, FNSObjectVersion *oVersion)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceGetVersion
	ENDIF


; *  FNSReferenceDispose()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceDispose(FNSFontReference iReference)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceDispose
	ENDIF


; *  FNSReferenceMatch()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceMatch(FNSFontReference iReference1, FNSFontReference iReference2, FNSMatchOptions iOptions, FNSMatchOptions *oFailedMatchOptions)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceMatch
	ENDIF


; *  FNSReferenceFlattenedSize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceFlattenedSize(FNSFontReference iReference, ByteCount *oFlattenedSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceFlattenedSize
	ENDIF


; *  FNSReferenceFlatten()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceFlatten(FNSFontReference iReference, void *oFlatReference, ByteCount *oFlattenedSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceFlatten
	ENDIF


; *  FNSReferenceUnflatten()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceUnflatten(const void *iFlatReference, ByteCount iFlattenedSize, FNSFontReference *oReference)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceUnflatten
	ENDIF


;  FontSync Profiles 

kFNSCreatorDefault				EQU		0
kFNSProfileFileType				EQU		'fnsp'



; *  FNSProfileCreate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileCreate(const FSSpec *iFile, FourCharCode iCreator, ItemCount iEstNumRefs, FNSObjectVersion iDesiredVersion, FNSFontProfile *oProfile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileCreate
	ENDIF


; *  FNSProfileOpen()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileOpen(const FSSpec *iFile, Boolean iOpenForWrite, FNSFontProfile *oProfile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileOpen
	ENDIF


; *  FNSProfileGetVersion()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileGetVersion(FNSFontProfile iProfile, FNSObjectVersion *oVersion)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileGetVersion
	ENDIF


; *  FNSProfileCompact()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileCompact(FNSFontProfile iProfile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileCompact
	ENDIF


; *  FNSProfileClose()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileClose(FNSFontProfile iProfile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileClose
	ENDIF


; *  FNSProfileAddReference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileAddReference(FNSFontProfile iProfile, FNSFontReference iReference)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileAddReference
	ENDIF


; *  FNSProfileRemoveReference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileRemoveReference(FNSFontProfile iProfile, FNSFontReference iReference)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileRemoveReference
	ENDIF


; *  FNSProfileRemoveIndReference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileRemoveIndReference(FNSFontProfile iProfile, UInt32 iIndex)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileRemoveIndReference
	ENDIF


; *  FNSProfileClear()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileClear(FNSFontProfile iProfile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileClear
	ENDIF


; *  FNSProfileCountReferences()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileCountReferences(FNSFontProfile iProfile, ItemCount *oCount)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileCountReferences
	ENDIF


; *  FNSProfileGetIndReference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileGetIndReference(FNSFontProfile iProfile, UInt32 iWhichReference, FNSFontReference *oReference)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileGetIndReference
	ENDIF


; *  FNSProfileMatchReference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSProfileMatchReference(FNSFontProfile iProfile, FNSFontReference iReference, FNSMatchOptions iMatchOptions, ItemCount iOutputSize, UInt32 oIndices[], ItemCount *oNumMatches)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSProfileMatchReference
	ENDIF


;  Mapping to and from Font Objects 

; *  FNSReferenceCreate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceCreate(FMFont iFont, FNSObjectVersion iDesiredVersion, FNSFontReference *oReference)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceCreate
	ENDIF


; *  FNSReferenceMatchFonts()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceMatchFonts(FNSFontReference iReference, FNSMatchOptions iMatchOptions, ItemCount iOutputSize, FMFont oFonts[], ItemCount *oNumMatches)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceMatchFonts
	ENDIF


;  Mapping to and from Font Families 

; *  FNSReferenceCreateFromFamily()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceCreateFromFamily(FMFontFamily iFamily, FMFontStyle iStyle, FNSObjectVersion iDesiredVersion, FNSFontReference *oReference, FMFontStyle *oActualStyle)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceCreateFromFamily
	ENDIF


; *  FNSReferenceMatchFamilies()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceMatchFamilies(FNSFontReference iReference, FNSMatchOptions iMatchOptions, ItemCount iOutputSize, FMFontFamilyInstance oFonts[], ItemCount *oNumMatches)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceMatchFamilies
	ENDIF


;  UI Support 

; *  FNSReferenceGetFamilyInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceGetFamilyInfo(FNSFontReference iReference, Str255 oFamilyName, ScriptCode *oFamilyNameScript, FMFontStyle *oActualStyle)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceGetFamilyInfo
	ENDIF


; *  FNSReferenceCountNames()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceCountNames(FNSFontReference iReference, ItemCount *oNameCount)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceCountNames
	ENDIF


; *  FNSReferenceGetIndName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceGetIndName(FNSFontReference iReference, ItemCount iFontNameIndex, ByteCount iMaximumNameLength, Ptr oName, ByteCount *oActualNameLength, FontNameCode *oFontNameCode, FontPlatformCode *oFontNamePlatform, FontScriptCode *oFontNameScript, FontLanguageCode *oFontNameLanguage)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceGetIndName
	ENDIF


; *  FNSReferenceFindName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus FNSReferenceFindName(FNSFontReference iReference, FontNameCode iFontNameCode, FontPlatformCode iFontNamePlatform, FontScriptCode iFontNameScript, FontLanguageCode iFontNameLanguage, ByteCount iMaximumNameLength, Ptr oName, ByteCount *oActualNameLength, ItemCount *oFontNameIndex)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSReferenceFindName
	ENDIF

;  Miscellany 

; *  FNSEnabled()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in FontSyncLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern Boolean FNSEnabled(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION FNSEnabled
	ENDIF

	ENDIF ; __FONTSYNC__ 


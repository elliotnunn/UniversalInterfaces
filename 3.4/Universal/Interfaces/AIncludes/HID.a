;
;    File:       HID.a
;
;    Contains:   Definition of the interfaces to the HIDLib shared library and
;
;    Version:    Technology: HID 1.0
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1999-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__HID__') = 'UNDEFINED' THEN
__HID__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__MACERRORS__') = 'UNDEFINED' THEN
	include 'MacErrors.a'
	ENDIF


;   
;    Interfaces for HIDLib



;  types of HID reports (input, output, feature)

kHIDInputReport					EQU		1
kHIDOutputReport				EQU		2
kHIDFeatureReport				EQU		3
kHIDUnknownReport				EQU		255
;  constants used in HIDButtonCapabilities and HIDValueCapabilities structures

															; While HIDButtonCaps and HIDValueCaps have no version #, they can be
															; thought of as version 1 of HIDButtonCapabilities and HIDValueCapabilities.
kHIDCurrentCapabilitiesPBVersion EQU	2
;  flags passed to HIDOpenReportDescriptor

kHIDFlag_StrictErrorChecking	EQU		$00000001
; typedef UInt32 						HIDReportType

; typedef UInt32 						HIDUsage



HIDUsageAndPage			RECORD 0
usage					 ds.l	1				; offset: $0 (0)
usagePage				 ds.l	1				; offset: $4 (4)
sizeof					 EQU *					; size:   $8 (8)
						ENDR
; typedef struct HIDUsageAndPage *		HIDUsageAndPagePtr

HIDCaps					RECORD 0
usage					 ds.l	1				; offset: $0 (0)
usagePage				 ds.l	1				; offset: $4 (4)
inputReportByteLength	 ds.l	1				; offset: $8 (8)
outputReportByteLength	 ds.l	1				; offset: $C (12)
featureReportByteLength	 ds.l	1				; offset: $10 (16)
numberCollectionNodes	 ds.l	1				; offset: $14 (20)
numberInputButtonCaps	 ds.l	1				; offset: $18 (24)
numberInputValueCaps	 ds.l	1				; offset: $1C (28)
numberOutputButtonCaps	 ds.l	1				; offset: $20 (32)
numberOutputValueCaps	 ds.l	1				; offset: $24 (36)
numberFeatureButtonCaps	 ds.l	1				; offset: $28 (40)
numberFeatureValueCaps	 ds.l	1				; offset: $2C (44)
sizeof					 EQU *					; size:   $30 (48)
						ENDR
; typedef struct HIDCaps *				HIDCapsPtr

HIDCapabilities			RECORD 0
usage					 ds.l	1				; offset: $0 (0)
usagePage				 ds.l	1				; offset: $4 (4)
inputReportByteLength	 ds.l	1				; offset: $8 (8)
outputReportByteLength	 ds.l	1				; offset: $C (12)
featureReportByteLength	 ds.l	1				; offset: $10 (16)
numberCollectionNodes	 ds.l	1				; offset: $14 (20)
numberInputButtonCaps	 ds.l	1				; offset: $18 (24)
numberInputValueCaps	 ds.l	1				; offset: $1C (28)
numberOutputButtonCaps	 ds.l	1				; offset: $20 (32)
numberOutputValueCaps	 ds.l	1				; offset: $24 (36)
numberFeatureButtonCaps	 ds.l	1				; offset: $28 (40)
numberFeatureValueCaps	 ds.l	1				; offset: $2C (44)
sizeof					 EQU *					; size:   $30 (48)
						ENDR
; typedef struct HIDCapabilities *		HIDCapabilitiesPtr

HIDCollectionNode		RECORD 0
collectionUsage			 ds.l	1				; offset: $0 (0)
collectionUsagePage		 ds.l	1				; offset: $4 (4)
parent					 ds.l	1				; offset: $8 (8)
numberOfChildren		 ds.l	1				; offset: $C (12)
nextSibling				 ds.l	1				; offset: $10 (16)
firstChild				 ds.l	1				; offset: $14 (20)
sizeof					 EQU *					; size:   $18 (24)
						ENDR
; typedef struct HIDCollectionNode *	HIDCollectionNodePtr

HIDButtonCaps			RECORD 0
usagePage				 ds.l	1				; offset: $0 (0)
reportID				 ds.l	1				; offset: $4 (4)
bitField				 ds.l	1				; offset: $8 (8)
collection				 ds.l	1				; offset: $C (12)
collectionUsage			 ds.l	1				; offset: $10 (16)
collectionUsagePage		 ds.l	1				; offset: $14 (20)
isRange					 ds.b	1				; offset: $18 (24)
isStringRange			 ds.b	1				; offset: $19 (25)
isDesignatorRange		 ds.b	1				; offset: $1A (26)
isAbsolute				 ds.b	1				; offset: $1B (27)
usageMin				 ds.l	1				; offset: $1C (28)
usageMax				 ds.l	1				; offset: $20 (32)
stringMin				 ds.l	1				; offset: $24 (36)
stringMax				 ds.l	1				; offset: $28 (40)
designatorMin			 ds.l	1				; offset: $2C (44)
designatorMax			 ds.l	1				; offset: $30 (48)
						 ORG 28
usage					 ds.l	1				; offset: $1C (28)
reserved1				 ds.l	1				; offset: $20 (32)
stringIndex				 ds.l	1				; offset: $24 (36)
reserved2				 ds.l	1				; offset: $28 (40)
designatorIndex			 ds.l	1				; offset: $2C (44)
reserved3				 ds.l	1				; offset: $30 (48)
sizeof					 EQU *					; size:   $34 (52)
						ENDR
; typedef struct HIDButtonCaps *		HIDButtonCapsPtr

HIDButtonCapabilities	RECORD 0
usagePage				 ds.l	1				; offset: $0 (0)
reportID				 ds.l	1				; offset: $4 (4)
bitField				 ds.l	1				; offset: $8 (8)
collection				 ds.l	1				; offset: $C (12)
collectionUsage			 ds.l	1				; offset: $10 (16)
collectionUsagePage		 ds.l	1				; offset: $14 (20)
isRange					 ds.b	1				; offset: $18 (24)
isStringRange			 ds.b	1				; offset: $19 (25)
isDesignatorRange		 ds.b	1				; offset: $1A (26)
isAbsolute				 ds.b	1				; offset: $1B (27)
unitExponent			 ds.l	1				; offset: $1C (28)
units					 ds.l	1				; offset: $20 (32)
reserved				 ds.l	1				; offset: $24 (36)
pbVersion				 ds.l	1				; offset: $28 (40)
usageMin				 ds.l	1				; offset: $2C (44)
usageMax				 ds.l	1				; offset: $30 (48)
stringMin				 ds.l	1				; offset: $34 (52)
stringMax				 ds.l	1				; offset: $38 (56)
designatorMin			 ds.l	1				; offset: $3C (60)
designatorMax			 ds.l	1				; offset: $40 (64)
						 ORG 44
usage					 ds.l	1				; offset: $2C (44)
reserved1				 ds.l	1				; offset: $30 (48)
stringIndex				 ds.l	1				; offset: $34 (52)
reserved2				 ds.l	1				; offset: $38 (56)
designatorIndex			 ds.l	1				; offset: $3C (60)
reserved3				 ds.l	1				; offset: $40 (64)
sizeof					 EQU *					; size:   $44 (68)
						ENDR
; typedef struct HIDButtonCapabilities * HIDButtonCapabilitiesPtr

HIDValueCaps			RECORD 0
usagePage				 ds.l	1				; offset: $0 (0)
reportID				 ds.l	1				; offset: $4 (4)
bitField				 ds.l	1				; offset: $8 (8)
collection				 ds.l	1				; offset: $C (12)
collectionUsage			 ds.l	1				; offset: $10 (16)
collectionUsagePage		 ds.l	1				; offset: $14 (20)
isRange					 ds.b	1				; offset: $18 (24)
isStringRange			 ds.b	1				; offset: $19 (25)
isDesignatorRange		 ds.b	1				; offset: $1A (26)
isAbsolute				 ds.b	1				; offset: $1B (27)
bitSize					 ds.l	1				; offset: $1C (28)
reportCount				 ds.l	1				; offset: $20 (32)
logicalMin				 ds.l	1				; offset: $24 (36)
logicalMax				 ds.l	1				; offset: $28 (40)
physicalMin				 ds.l	1				; offset: $2C (44)
physicalMax				 ds.l	1				; offset: $30 (48)
usageMin				 ds.l	1				; offset: $34 (52)
usageMax				 ds.l	1				; offset: $38 (56)
stringMin				 ds.l	1				; offset: $3C (60)
stringMax				 ds.l	1				; offset: $40 (64)
designatorMin			 ds.l	1				; offset: $44 (68)
designatorMax			 ds.l	1				; offset: $48 (72)
						 ORG 52
usage					 ds.l	1				; offset: $34 (52)
reserved1				 ds.l	1				; offset: $38 (56)
stringIndex				 ds.l	1				; offset: $3C (60)
reserved2				 ds.l	1				; offset: $40 (64)
designatorIndex			 ds.l	1				; offset: $44 (68)
reserved3				 ds.l	1				; offset: $48 (72)
sizeof					 EQU *					; size:   $4C (76)
						ENDR
; typedef struct HIDValueCaps *			HIDValueCapsPtr

HIDValueCapabilities	RECORD 0
usagePage				 ds.l	1				; offset: $0 (0)
reportID				 ds.l	1				; offset: $4 (4)
bitField				 ds.l	1				; offset: $8 (8)
collection				 ds.l	1				; offset: $C (12)
collectionUsage			 ds.l	1				; offset: $10 (16)
collectionUsagePage		 ds.l	1				; offset: $14 (20)
isRange					 ds.b	1				; offset: $18 (24)
isStringRange			 ds.b	1				; offset: $19 (25)
isDesignatorRange		 ds.b	1				; offset: $1A (26)
isAbsolute				 ds.b	1				; offset: $1B (27)
bitSize					 ds.l	1				; offset: $1C (28)
reportCount				 ds.l	1				; offset: $20 (32)
logicalMin				 ds.l	1				; offset: $24 (36)
logicalMax				 ds.l	1				; offset: $28 (40)
physicalMin				 ds.l	1				; offset: $2C (44)
physicalMax				 ds.l	1				; offset: $30 (48)
unitExponent			 ds.l	1				; offset: $34 (52)
units					 ds.l	1				; offset: $38 (56)
reserved				 ds.l	1				; offset: $3C (60)
pbVersion				 ds.l	1				; offset: $40 (64)
usageMin				 ds.l	1				; offset: $44 (68)
usageMax				 ds.l	1				; offset: $48 (72)
stringMin				 ds.l	1				; offset: $4C (76)
stringMax				 ds.l	1				; offset: $50 (80)
designatorMin			 ds.l	1				; offset: $54 (84)
designatorMax			 ds.l	1				; offset: $58 (88)
						 ORG 68
usage					 ds.l	1				; offset: $44 (68)
reserved1				 ds.l	1				; offset: $48 (72)
stringIndex				 ds.l	1				; offset: $4C (76)
reserved2				 ds.l	1				; offset: $50 (80)
designatorIndex			 ds.l	1				; offset: $54 (84)
reserved3				 ds.l	1				; offset: $58 (88)
sizeof					 EQU *					; size:   $5C (92)
						ENDR
; typedef struct HIDValueCapabilities *	HIDValueCapabilitiesPtr

	IF CALL_NOT_IN_CARBON THEN

; *  HIDGetHIDLibVersion()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern UInt32 HIDGetHIDLibVersion(void)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetHIDLibVersion
	ENDIF


; *  HIDOpenReportDescriptor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDOpenReportDescriptor(void *hidReportDescriptor, ByteCount descriptorLength, HIDPreparsedDataRef *preparsedDataRef, UInt32 flags)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDOpenReportDescriptor
	ENDIF


; *  HIDCloseReportDescriptor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDCloseReportDescriptor(HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDCloseReportDescriptor
	ENDIF



; *  HIDGetCaps()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetCaps(HIDPreparsedDataRef preparsedDataRef, HIDCapsPtr capabilities)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetCaps
	ENDIF


; *  HIDGetCapabilities()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetCapabilities(HIDPreparsedDataRef preparsedDataRef, HIDCapabilitiesPtr capabilities)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetCapabilities
	ENDIF


; *  HIDGetCollectionNodes()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetCollectionNodes(HIDCollectionNodePtr collectionNodes, UInt32 *collectionNodesSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetCollectionNodes
	ENDIF


; *  HIDGetButtonCaps()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetButtonCaps(HIDReportType reportType, HIDButtonCapsPtr buttonCaps, UInt32 *buttonCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetButtonCaps
	ENDIF


; *  HIDGetButtonCapabilities()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetButtonCapabilities(HIDReportType reportType, HIDButtonCapabilitiesPtr buttonCaps, UInt32 *buttonCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetButtonCapabilities
	ENDIF


; *  HIDGetValueCaps()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetValueCaps(HIDReportType reportType, HIDValueCapsPtr valueCaps, UInt32 *valueCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetValueCaps
	ENDIF


; *  HIDGetValueCapabilities()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetValueCapabilities(HIDReportType reportType, HIDValueCapabilitiesPtr valueCaps, UInt32 *valueCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetValueCapabilities
	ENDIF


; *  HIDGetSpecificButtonCaps()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetSpecificButtonCaps(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, HIDButtonCapsPtr buttonCaps, UInt32 *buttonCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetSpecificButtonCaps
	ENDIF


; *  HIDGetSpecificButtonCapabilities()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetSpecificButtonCapabilities(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, HIDButtonCapabilitiesPtr buttonCaps, UInt32 *buttonCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetSpecificButtonCapabilities
	ENDIF


; *  HIDGetSpecificValueCaps()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetSpecificValueCaps(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, HIDValueCapsPtr valueCaps, UInt32 *valueCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetSpecificValueCaps
	ENDIF


; *  HIDGetSpecificValueCapabilities()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetSpecificValueCapabilities(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, HIDValueCapabilitiesPtr valueCaps, UInt32 *valueCapsSize, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetSpecificValueCapabilities
	ENDIF


; *  HIDGetNextButtonInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetNextButtonInfo(HIDReportType reportType, HIDUsage usagePage, HIDUsage usage, UInt32 *collection, UInt8 *reportID, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetNextButtonInfo
	ENDIF


; *  HIDGetNextUsageValueInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetNextUsageValueInfo(HIDReportType reportType, HIDUsage usagePage, HIDUsage usage, UInt32 *collection, UInt8 *reportID, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetNextUsageValueInfo
	ENDIF


; *  HIDMaxUsageListLength()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern UInt32 HIDMaxUsageListLength(HIDReportType reportType, HIDUsage usagePage, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDMaxUsageListLength
	ENDIF


; *  HIDGetReportLength()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetReportLength(HIDReportType reportType, UInt8 reportID, ByteCount *reportLength, HIDPreparsedDataRef preparsedDataRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetReportLength
	ENDIF


; *  HIDInitReport()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.4 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDInitReport(HIDReportType reportType, UInt8 reportID, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDInitReport
	ENDIF



; *  HIDGetButtons()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetButtons(HIDReportType reportType, UInt32 collection, HIDUsageAndPagePtr usageList, UInt32 *usageListSize, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetButtons
	ENDIF


; *  HIDGetButtonsOnPage()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetButtonsOnPage(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage *usageList, UInt32 *usageListSize, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetButtonsOnPage
	ENDIF


; *  HIDGetScaledUsageValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetScaledUsageValue(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, SInt32 *usageValue, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetScaledUsageValue
	ENDIF


; *  HIDGetUsageValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetUsageValue(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, SInt32 *usageValue, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetUsageValue
	ENDIF


; *  HIDGetUsageValueArray()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDGetUsageValueArray(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, Byte *usageValueBuffer, ByteCount usageValueBufferSize, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDGetUsageValueArray
	ENDIF



; *  HIDSetButton()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDSetButton(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDSetButton
	ENDIF


; *  HIDSetButtons()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDSetButtons(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage *usageList, UInt32 *usageListSize, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDSetButtons
	ENDIF


; *  HIDSetScaledUsageValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDSetScaledUsageValue(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, SInt32 usageValue, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDSetScaledUsageValue
	ENDIF


; *  HIDSetUsageValue()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDSetUsageValue(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, SInt32 usageValue, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDSetUsageValue
	ENDIF


; *  HIDSetUsageValueArray()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDSetUsageValueArray(HIDReportType reportType, HIDUsage usagePage, UInt32 collection, HIDUsage usage, Byte *usageValueBuffer, ByteCount usageValueBufferLength, HIDPreparsedDataRef preparsedDataRef, void *report, ByteCount reportLength)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDSetUsageValueArray
	ENDIF


; *  HIDUsageListDifference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HIDLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus HIDUsageListDifference(HIDUsage *previousUsageList, HIDUsage *currentUsageList, HIDUsage *breakUsageList, HIDUsage *makeUsageList, UInt32 usageListsSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HIDUsageListDifference
	ENDIF


;   
;    Interfaces for a HID device driver



;  these are the constants to be passed to HIDGetDeviceInfo
	ENDIF	; CALL_NOT_IN_CARBON

kHIDGetInfo_VendorID			EQU		1
kHIDGetInfo_ProductID			EQU		2
kHIDGetInfo_VersionNumber		EQU		3
kHIDGetInfo_InterfaceRef		EQU		4
kHIDGetInfo_MaxReportSize		EQU		$10
kHIDGetInfo_GetManufacturerString EQU	$0100
kHIDGetInfo_GetProductString	EQU		$0101
kHIDGetInfo_GetSerialNumberString EQU	$0102
kHIDGetInfo_VendorSpecificStart	EQU		$00010000
;  these are the valid permissions to pass to HIDOpenDevice

kHIDPerm_ReadOnly				EQU		$0001
kHIDPerm_ReadWriteShared		EQU		$0003
kHIDPerm_ReadWriteExclusive		EQU		$0013
;  these are flags used in HIDInstallReportHandler

kHIDFlag_CallbackIsResident		EQU		$0001

;  these are the constants to be passed to HIDControlDevice

kHIDVendorSpecificControlStart	EQU		$00010000
;  these constant versions are used in the HIDDeviceDispatchTable structure

kHIDCurrentDispatchTableVersion	EQU		3
kHIDOldestCompatableDispatchTableVersion EQU 1
kHIDDispatchTableVersion1		EQU		1
kHIDDispatchTableVersion2		EQU		2
kHIDDispatchTableVersion1OldestCompatible EQU 1


;  HIDGetDeviceInfo is used to get specific information about a HID Device
;  HIDGetHIDDescriptor is used to get a specific HID descriptor from a HID device (such as a report descriptor)
;  You must first 'open' a device before using it
;  When finished, 'close' a device
;  User provided ProcPtr to be called when HID report is received
;  User provided ProcPtr to be called when indexed string is received

;   When installed, a report handler is called at defered task time (unless kHIDFlag_CallbackIsResident is passed) 
;   whenever an interrupt packet is recieved on the first interrupt in pipe. The supplied refcon is also passed thru.


;  When finished, remove the report handler.
;  If there was a HIDReportHandler installed previous to the one from this connection, pass that one this report

;   HIDGetReport is used to get a report (of type input, output, or feature) directly from a HID device
;   the HIDReportHandler will be called with the report when it is received.


;  HIDGetSizedReport is used like HIDGetReport, but for devices that require exact size to return report.
;  HIDSetReport is used to send a report (of type input, output, or feature) directly to a HID device
;  HIDControlDevice is used to send misc control messages to a device

;   HIDGetIndexedString is used to get a string directly from a HID device.
;   The HIDStringHandler will be called with the string when it is received or nil string if completed with an error.



;   dispatchTableCurrentVersion is kHIDCurrentDispatchTableVersion
;   dispatchTableOldestVersion is kHIDOldestCompatableDispatchTableVersion
;        (the oldest built client using this API that this HID device driver will work with)
;   vendorID is who wrote this HID device driver (hi word of 0 and USB vendorID is valid)


HIDDeviceDispatchTable	RECORD 0
dispatchTableCurrentVersion  ds.l 1				; offset: $0 (0)
dispatchTableOldestVersion  ds.l 1				; offset: $4 (4)
vendorID				 ds.l	1				; offset: $8 (8)
vendorSpecific			 ds.l	1				; offset: $C (12)
reserved				 ds.l	1				; offset: $10 (16)
pHIDGetDeviceInfo		 ds.l	1				; offset: $14 (20)
pHIDGetHIDDescriptor	 ds.l	1				; offset: $18 (24)
pHIDOpenDevice			 ds.l	1				; offset: $1C (28)
pHIDCloseDevice			 ds.l	1				; offset: $20 (32)
pHIDInstallReportHandler  ds.l	1				; offset: $24 (36)
pHIDRemoveReportHandler	 ds.l	1				; offset: $28 (40)
pHIDCallPreviousReportHandler  ds.l 1			; offset: $2C (44)
pHIDGetReport			 ds.l	1				; offset: $30 (48)		;  new for vers 2, was reserved in version 1
pHIDSetReport			 ds.l	1				; offset: $34 (52)		;  new for vers 2, was reserved in version 1
pHIDControlDevice		 ds.l	1				; offset: $38 (56)
pHIDGetIndexedString	 ds.l	1				; offset: $3C (60)		;  new for vers 3
pHIDGetSizedReport		 ds.l	1				; offset: $40 (64)		;  new for vers 3
sizeof					 EQU *					; size:   $44 (68)
						ENDR
; typedef struct HIDDeviceDispatchTable * HIDDeviceDispatchTablePtr

;  A USB HIDDevice driver should export a HIDDeviceDispatchTable symbol 
;  in it's PEF container, with the name "\pTheHIDDeviceDispatchTable" 


;  ****************************************************************************************** 
;  HID Usage Tables                                                                           
;                                                                                             
;  The following constants are from the USB 'HID Usage Tables' specification, revision 1.1rc3 
;  ****************************************************************************************** 

;  Usage Pages 

kHIDPage_Undefined				EQU		$00
kHIDPage_GenericDesktop			EQU		$01
kHIDPage_Simulation				EQU		$02
kHIDPage_VR						EQU		$03
kHIDPage_Sport					EQU		$04
kHIDPage_Game					EQU		$05					; Reserved 0x06 
kHIDPage_KeyboardOrKeypad		EQU		$07					; USB Device Class Definition for Human Interface Devices (HID). Note: the usage type for all key codes is Selector (Sel). 
kHIDPage_LEDs					EQU		$08
kHIDPage_Button					EQU		$09
kHIDPage_Ordinal				EQU		$0A
kHIDPage_Telephony				EQU		$0B
kHIDPage_Consumer				EQU		$0C
kHIDPage_Digitizer				EQU		$0D					; Reserved 0x0E 
kHIDPage_PID					EQU		$0F					; USB Physical Interface Device definitions for force feedback and related devices. 
kHIDPage_Unicode				EQU		$10					; Reserved 0x11 - 0x13 
kHIDPage_AlphanumericDisplay	EQU		$14					; Reserved 0x15 - 0x7F 
															; Monitor 0x80 - 0x83     USB Device Class Definition for Monitor Devices 
															; Power 0x84 - 0x87   USB Device Class Definition for Power Devices 
															; Reserved 0x88 - 0x8B 
kHIDPage_BarCodeScanner			EQU		$8C					; (Point of Sale) USB Device Class Definition for Bar Code Scanner Devices 
kHIDPage_Scale					EQU		$8D					; (Point of Sale) USB Device Class Definition for Scale Devices 
															; ReservedPointofSalepages 0x8E - 0x8F 
kHIDPage_CameraControl			EQU		$90					; USB Device Class Definition for Image Class Devices 
kHIDPage_Arcade					EQU		$91					; OAAF Definitions for arcade and coinop related Devices 
															; Reserved 0x92 - 0xFEFF 
															; VendorDefined 0xFF00 - 0xFFFF 
kHIDPage_VendorDefinedStart		EQU		$FF00
;  Undefined Usage for all usage pages 

kHIDUsage_Undefined				EQU		$00
;  GenericDesktop Page (0x01) 

kHIDUsage_GD_Pointer			EQU		$01					; Physical Collection 
kHIDUsage_GD_Mouse				EQU		$02					; Application Collection 
															; 0x03 Reserved 
kHIDUsage_GD_Joystick			EQU		$04					; Application Collection 
kHIDUsage_GD_GamePad			EQU		$05					; Application Collection 
kHIDUsage_GD_Keyboard			EQU		$06					; Application Collection 
kHIDUsage_GD_Keypad				EQU		$07					; Application Collection 
kHIDUsage_GD_MultiAxisController EQU	$08					; Application Collection 
															; 0x09 - 0x2F Reserved 
kHIDUsage_GD_X					EQU		$30					; Dynamic Value 
kHIDUsage_GD_Y					EQU		$31					; Dynamic Value 
kHIDUsage_GD_Z					EQU		$32					; Dynamic Value 
kHIDUsage_GD_Rx					EQU		$33					; Dynamic Value 
kHIDUsage_GD_Ry					EQU		$34					; Dynamic Value 
kHIDUsage_GD_Rz					EQU		$35					; Dynamic Value 
kHIDUsage_GD_Slider				EQU		$36					; Dynamic Value 
kHIDUsage_GD_Dial				EQU		$37					; Dynamic Value 
kHIDUsage_GD_Wheel				EQU		$38					; Dynamic Value 
kHIDUsage_GD_Hatswitch			EQU		$39					; Dynamic Value 
kHIDUsage_GD_CountedBuffer		EQU		$3A					; Logical Collection 
kHIDUsage_GD_ByteCount			EQU		$3B					; Dynamic Value 
kHIDUsage_GD_MotionWakeup		EQU		$3C					; One-Shot Control 
kHIDUsage_GD_Start				EQU		$3D					; On/Off Control 
kHIDUsage_GD_Select				EQU		$3E					; On/Off Control 
															; 0x3F Reserved 
kHIDUsage_GD_Vx					EQU		$40					; Dynamic Value 
kHIDUsage_GD_Vy					EQU		$41					; Dynamic Value 
kHIDUsage_GD_Vz					EQU		$42					; Dynamic Value 
kHIDUsage_GD_Vbrx				EQU		$43					; Dynamic Value 
kHIDUsage_GD_Vbry				EQU		$44					; Dynamic Value 
kHIDUsage_GD_Vbrz				EQU		$45					; Dynamic Value 
kHIDUsage_GD_Vno				EQU		$46					; Dynamic Value 
															; 0x47 - 0x7F Reserved 
kHIDUsage_GD_SystemControl		EQU		$80					; Application Collection 
kHIDUsage_GD_SystemPowerDown	EQU		$81					; One-Shot Control 
kHIDUsage_GD_SystemSleep		EQU		$82					; One-Shot Control 
kHIDUsage_GD_SystemWakeUp		EQU		$83					; One-Shot Control 
kHIDUsage_GD_SystemContextMenu	EQU		$84					; One-Shot Control 
kHIDUsage_GD_SystemMainMenu		EQU		$85					; One-Shot Control 
kHIDUsage_GD_SystemAppMenu		EQU		$86					; One-Shot Control 
kHIDUsage_GD_SystemMenuHelp		EQU		$87					; One-Shot Control 
kHIDUsage_GD_SystemMenuExit		EQU		$88					; One-Shot Control 
kHIDUsage_GD_SystemMenu			EQU		$89					; Selector 
kHIDUsage_GD_SystemMenuRight	EQU		$8A					; Re-Trigger Control 
kHIDUsage_GD_SystemMenuLeft		EQU		$8B					; Re-Trigger Control 
kHIDUsage_GD_SystemMenuUp		EQU		$8C					; Re-Trigger Control 
kHIDUsage_GD_SystemMenuDown		EQU		$8D					; Re-Trigger Control 
															; 0x8E - 0x8F Reserved 
kHIDUsage_GD_DPadUp				EQU		$90					; On/Off Control 
kHIDUsage_GD_DPadDown			EQU		$91					; On/Off Control 
kHIDUsage_GD_DPadRight			EQU		$92					; On/Off Control 
kHIDUsage_GD_DPadLeft			EQU		$93					; On/Off Control 
															; 0x94 - 0xFFFF Reserved 
kHIDUsage_GD_Reserved			EQU		$FFFF
;  Simulation Page (0x02) 
;  This section provides detailed descriptions of the usages employed by simulation devices. 

kHIDUsage_Sim_FlightSimulationDevice EQU $01				; Application Collection 
kHIDUsage_Sim_AutomobileSimulationDevice EQU $02			; Application Collection 
kHIDUsage_Sim_TankSimulationDevice EQU	$03					; Application Collection 
kHIDUsage_Sim_SpaceshipSimulationDevice EQU $04				; Application Collection 
kHIDUsage_Sim_SubmarineSimulationDevice EQU $05				; Application Collection 
kHIDUsage_Sim_SailingSimulationDevice EQU $06				; Application Collection 
kHIDUsage_Sim_MotorcycleSimulationDevice EQU $07			; Application Collection 
kHIDUsage_Sim_SportsSimulationDevice EQU $08				; Application Collection 
kHIDUsage_Sim_AirplaneSimulationDevice EQU $09				; Application Collection 
kHIDUsage_Sim_HelicopterSimulationDevice EQU $0A			; Application Collection 
kHIDUsage_Sim_MagicCarpetSimulationDevice EQU $0B			; Application Collection 
kHIDUsage_Sim_BicycleSimulationDevice EQU $0C				; Application Collection 
															; 0x0D - 0x1F Reserved 
kHIDUsage_Sim_FlightControlStick EQU	$20					; Application Collection 
kHIDUsage_Sim_FlightStick		EQU		$21					; Application Collection 
kHIDUsage_Sim_CyclicControl		EQU		$22					; Physical Collection 
kHIDUsage_Sim_CyclicTrim		EQU		$23					; Physical Collection 
kHIDUsage_Sim_FlightYoke		EQU		$24					; Application Collection 
kHIDUsage_Sim_TrackControl		EQU		$25					; Physical Collection 
															; 0x26 - 0xAF Reserved 
kHIDUsage_Sim_Aileron			EQU		$B0					; Dynamic Value 
kHIDUsage_Sim_AileronTrim		EQU		$B1					; Dynamic Value 
kHIDUsage_Sim_AntiTorqueControl	EQU		$B2					; Dynamic Value 
kHIDUsage_Sim_AutopilotEnable	EQU		$B3					; On/Off Control 
kHIDUsage_Sim_ChaffRelease		EQU		$B4					; One-Shot Control 
kHIDUsage_Sim_CollectiveControl	EQU		$B5					; Dynamic Value 
kHIDUsage_Sim_DiveBrake			EQU		$B6					; Dynamic Value 
kHIDUsage_Sim_ElectronicCountermeasures EQU $B7				; On/Off Control 
kHIDUsage_Sim_Elevator			EQU		$B8					; Dynamic Value 
kHIDUsage_Sim_ElevatorTrim		EQU		$B9					; Dynamic Value 
kHIDUsage_Sim_Rudder			EQU		$BA					; Dynamic Value 
kHIDUsage_Sim_Throttle			EQU		$BB					; Dynamic Value 
kHIDUsage_Sim_FlightCommunications EQU	$BC					; On/Off Control 
kHIDUsage_Sim_FlareRelease		EQU		$BD					; One-Shot Control 
kHIDUsage_Sim_LandingGear		EQU		$BE					; On/Off Control 
kHIDUsage_Sim_ToeBrake			EQU		$BF					; Dynamic Value 
kHIDUsage_Sim_Trigger			EQU		$C0					; Momentary Control 
kHIDUsage_Sim_WeaponsArm		EQU		$C1					; On/Off Control 
kHIDUsage_Sim_Weapons			EQU		$C2					; Selector 
kHIDUsage_Sim_WingFlaps			EQU		$C3					; Dynamic Value 
kHIDUsage_Sim_Accelerator		EQU		$C4					; Dynamic Value 
kHIDUsage_Sim_Brake				EQU		$C5					; Dynamic Value 
kHIDUsage_Sim_Clutch			EQU		$C6					; Dynamic Value 
kHIDUsage_Sim_Shifter			EQU		$C7					; Dynamic Value 
kHIDUsage_Sim_Steering			EQU		$C8					; Dynamic Value 
kHIDUsage_Sim_TurretDirection	EQU		$C9					; Dynamic Value 
kHIDUsage_Sim_BarrelElevation	EQU		$CA					; Dynamic Value 
kHIDUsage_Sim_DivePlane			EQU		$CB					; Dynamic Value 
kHIDUsage_Sim_Ballast			EQU		$CC					; Dynamic Value 
kHIDUsage_Sim_BicycleCrank		EQU		$CD					; Dynamic Value 
kHIDUsage_Sim_HandleBars		EQU		$CE					; Dynamic Value 
kHIDUsage_Sim_FrontBrake		EQU		$CF					; Dynamic Value 
kHIDUsage_Sim_RearBrake			EQU		$D0					; Dynamic Value 
															; 0xD1 - 0xFFFF Reserved 
kHIDUsage_Sim_Reserved			EQU		$FFFF
;  VR Page (0x03) 
;  Virtual Reality controls depend on designators to identify the individual controls. Most of the following are 
;  usages are applied to the collections of entities that comprise the actual device. 

kHIDUsage_VR_Belt				EQU		$01					; Application Collection 
kHIDUsage_VR_BodySuit			EQU		$02					; Application Collection 
kHIDUsage_VR_Flexor				EQU		$03					; Physical Collection 
kHIDUsage_VR_Glove				EQU		$04					; Application Collection 
kHIDUsage_VR_HeadTracker		EQU		$05					; Physical Collection 
kHIDUsage_VR_HeadMountedDisplay	EQU		$06					; Application Collection 
kHIDUsage_VR_HandTracker		EQU		$07					; Application Collection 
kHIDUsage_VR_Oculometer			EQU		$08					; Application Collection 
kHIDUsage_VR_Vest				EQU		$09					; Application Collection 
kHIDUsage_VR_AnimatronicDevice	EQU		$0A					; Application Collection 
															; 0x0B - 0x1F Reserved 
kHIDUsage_VR_StereoEnable		EQU		$20					; On/Off Control 
kHIDUsage_VR_DisplayEnable		EQU		$21					; On/Off Control 
															; 0x22 - 0xFFFF Reserved 
kHIDUsage_VR_Reserved			EQU		$FFFF
;  Sport Page (0x04) 

kHIDUsage_Sprt_BaseballBat		EQU		$01					; Application Collection 
kHIDUsage_Sprt_GolfClub			EQU		$02					; Application Collection 
kHIDUsage_Sprt_RowingMachine	EQU		$03					; Application Collection 
kHIDUsage_Sprt_Treadmill		EQU		$04					; Application Collection 
															; 0x05 - 0x2F Reserved 
kHIDUsage_Sprt_Oar				EQU		$30					; Dynamic Value 
kHIDUsage_Sprt_Slope			EQU		$31					; Dynamic Value 
kHIDUsage_Sprt_Rate				EQU		$32					; Dynamic Value 
kHIDUsage_Sprt_StickSpeed		EQU		$33					; Dynamic Value 
kHIDUsage_Sprt_StickFaceAngle	EQU		$34					; Dynamic Value 
kHIDUsage_Sprt_StickHeelOrToe	EQU		$35					; Dynamic Value 
kHIDUsage_Sprt_StickFollowThrough EQU	$36					; Dynamic Value 
kHIDUsage_Sprt_StickTempo		EQU		$37					; Dynamic Value 
kHIDUsage_Sprt_StickType		EQU		$38					; Named Array 
kHIDUsage_Sprt_StickHeight		EQU		$39					; Dynamic Value 
															; 0x3A - 0x4F Reserved 
kHIDUsage_Sprt_Putter			EQU		$50					; Selector 
kHIDUsage_Sprt_1Iron			EQU		$51					; Selector 
kHIDUsage_Sprt_2Iron			EQU		$52					; Selector 
kHIDUsage_Sprt_3Iron			EQU		$53					; Selector 
kHIDUsage_Sprt_4Iron			EQU		$54					; Selector 
kHIDUsage_Sprt_5Iron			EQU		$55					; Selector 
kHIDUsage_Sprt_6Iron			EQU		$56					; Selector 
kHIDUsage_Sprt_7Iron			EQU		$57					; Selector 
kHIDUsage_Sprt_8Iron			EQU		$58					; Selector 
kHIDUsage_Sprt_9Iron			EQU		$59					; Selector 
kHIDUsage_Sprt_10Iron			EQU		$5A					; Selector 
kHIDUsage_Sprt_11Iron			EQU		$5B					; Selector 
kHIDUsage_Sprt_SandWedge		EQU		$5C					; Selector 
kHIDUsage_Sprt_LoftWedge		EQU		$5D					; Selector 
kHIDUsage_Sprt_PowerWedge		EQU		$5E					; Selector 
kHIDUsage_Sprt_1Wood			EQU		$5F					; Selector 
kHIDUsage_Sprt_3Wood			EQU		$60					; Selector 
kHIDUsage_Sprt_5Wood			EQU		$61					; Selector 
kHIDUsage_Sprt_7Wood			EQU		$62					; Selector 
kHIDUsage_Sprt_9Wood			EQU		$63					; Selector 
															; 0x64 - 0xFFFF Reserved 
kHIDUsage_Sprt_Reserved			EQU		$FFFF
;  Game Page (0x05) 

kHIDUsage_Game_3DGameController	EQU		$01					; Application Collection 
kHIDUsage_Game_PinballDevice	EQU		$02					; Application Collection 
kHIDUsage_Game_GunDevice		EQU		$03					; Application Collection 
															; 0x04 - 0x1F Reserved 
kHIDUsage_Game_PointofView		EQU		$20					; Physical Collection 
kHIDUsage_Game_TurnRightOrLeft	EQU		$21					; Dynamic Value 
kHIDUsage_Game_PitchUpOrDown	EQU		$22					; Dynamic Value 
kHIDUsage_Game_RollRightOrLeft	EQU		$23					; Dynamic Value 
kHIDUsage_Game_MoveRightOrLeft	EQU		$24					; Dynamic Value 
kHIDUsage_Game_MoveForwardOrBackward EQU $25				; Dynamic Value 
kHIDUsage_Game_MoveUpOrDown		EQU		$26					; Dynamic Value 
kHIDUsage_Game_LeanRightOrLeft	EQU		$27					; Dynamic Value 
kHIDUsage_Game_LeanForwardOrBackward EQU $28				; Dynamic Value 
kHIDUsage_Game_HeightOfPOV		EQU		$29					; Dynamic Value 
kHIDUsage_Game_Flipper			EQU		$2A					; Momentary Control 
kHIDUsage_Game_SecondaryFlipper	EQU		$2B					; Momentary Control 
kHIDUsage_Game_Bump				EQU		$2C					; Momentary Control 
kHIDUsage_Game_NewGame			EQU		$2D					; One-Shot Control 
kHIDUsage_Game_ShootBall		EQU		$2E					; One-Shot Control 
kHIDUsage_Game_Player			EQU		$2F					; One-Shot Control 
kHIDUsage_Game_GunBolt			EQU		$30					; On/Off Control 
kHIDUsage_Game_GunClip			EQU		$31					; On/Off Control 
kHIDUsage_Game_Gun				EQU		$32					; Selector 
kHIDUsage_Game_GunSingleShot	EQU		$33					; Selector 
kHIDUsage_Game_GunBurst			EQU		$34					; Selector 
kHIDUsage_Game_GunAutomatic		EQU		$35					; Selector 
kHIDUsage_Game_GunSafety		EQU		$36					; On/Off Control 
kHIDUsage_Game_GamepadFireOrJump EQU	$37					; Logical Collection 
kHIDUsage_Game_GamepadTrigger	EQU		$39					; Logical Collection 
															; 0x3A - 0xFFFF Reserved 
kHIDUsage_Game_Reserved			EQU		$FFFF
;  KeyboardOrKeypad Page (0x07) 
;  This section is the Usage Page for key codes to be used in implementing a USB keyboard.  
;  A Boot Keyboard (84-, 101- or 104-key) should at a minimum support all associated usage codes as 
;  indicated in the âBootâ column below. 
;  The usage type of all key codes is Selectors (Sel), except for the modifier keys Keyboard Left Control (0x224) 
;  to Keyboard Right GUI (0x231) which are Dynamic Flags (DV). 
;  Note: A general note on Usages and languages: 
;  Due to the variation of keyboards from language to language, it is not feasible to specify exact key mappings 
;  for every language. Where this list is not specific for a key function in a language, the closest equivalent key 
;  position should be used, so that a keyboard may be modified for a different language by simply printing different 
;  keycaps. One example is the Y key on a North American keyboard. In Germany this is typically Z. Rather than changing 
;  the keyboard firmware to put the Z Usage into that place in the descriptor list, the vendor should use the Y Usage on 
;  both the North American and German keyboards. This continues to be the existing practice in the industry, in order to 
;  minimize the number of changes to the electronics to accommodate otherlanguages. 

kHIDUsage_KeyboardErrorRollOver	EQU		$01					; ErrorRollOver 
kHIDUsage_KeyboardPOSTFail		EQU		$02					; POSTFail 
kHIDUsage_KeyboardErrorUndefined EQU	$03					; ErrorUndefined 
kHIDUsage_KeyboardA				EQU		$04					; a or A 
kHIDUsage_KeyboardB				EQU		$05					; b or B 
kHIDUsage_KeyboardC				EQU		$06					; c or C 
kHIDUsage_KeyboardD				EQU		$07					; d or D 
kHIDUsage_KeyboardE				EQU		$08					; e or E 
kHIDUsage_KeyboardF				EQU		$09					; f or F 
kHIDUsage_KeyboardG				EQU		$0A					; g or G 
kHIDUsage_KeyboardH				EQU		$0B					; h or H 
kHIDUsage_KeyboardI				EQU		$0C					; i or I 
kHIDUsage_KeyboardJ				EQU		$0D					; j or J 
kHIDUsage_KeyboardK				EQU		$0E					; k or K 
kHIDUsage_KeyboardL				EQU		$0F					; l or L 
kHIDUsage_KeyboardM				EQU		$10					; m or M 
kHIDUsage_KeyboardN				EQU		$11					; n or N 
kHIDUsage_KeyboardO				EQU		$12					; o or O 
kHIDUsage_KeyboardP				EQU		$13					; p or P 
kHIDUsage_KeyboardQ				EQU		$14					; q or Q 
kHIDUsage_KeyboardR				EQU		$15					; r or R 
kHIDUsage_KeyboardS				EQU		$16					; s or S 
kHIDUsage_KeyboardT				EQU		$17					; t or T 
kHIDUsage_KeyboardU				EQU		$18					; u or U 
kHIDUsage_KeyboardV				EQU		$19					; v or V 
kHIDUsage_KeyboardW				EQU		$1A					; w or W 
kHIDUsage_KeyboardX				EQU		$1B					; x or X 
kHIDUsage_KeyboardY				EQU		$1C					; y or Y 
kHIDUsage_KeyboardZ				EQU		$1D					; z or Z 
kHIDUsage_Keyboard1				EQU		$1E					; 1 or ! 
kHIDUsage_Keyboard2				EQU		$1F					; 2 or @ 
kHIDUsage_Keyboard3				EQU		$20					; 3 or # 
kHIDUsage_Keyboard4				EQU		$21					; 4 or $ 
kHIDUsage_Keyboard5				EQU		$22					; 5 or % 
kHIDUsage_Keyboard6				EQU		$23					; 6 or ^ 
kHIDUsage_Keyboard7				EQU		$24					; 7 or & 
kHIDUsage_Keyboard8				EQU		$25					; 8 or * 
kHIDUsage_Keyboard9				EQU		$26					; 9 or ( 
kHIDUsage_Keyboard0				EQU		$27					; 0 or ) 
kHIDUsage_KeyboardReturnOrEnter	EQU		$28					; Return (Enter) 
kHIDUsage_KeyboardEscape		EQU		$29					; Escape 
kHIDUsage_KeyboardDeleteOrBackspace EQU	$2A					; Delete (Backspace) 
kHIDUsage_KeyboardTab			EQU		$2B					; Tab 
kHIDUsage_KeyboardSpacebar		EQU		$2C					; Spacebar 
kHIDUsage_KeyboardHyphen		EQU		$2D					; - or _ 
kHIDUsage_KeyboardEqualSign		EQU		$2E					; = or + 
kHIDUsage_KeyboardOpenBracket	EQU		$2F					; [ or { 
kHIDUsage_KeyboardCloseBracket	EQU		$30					; ] or } 
kHIDUsage_KeyboardBackslash		EQU		$31					; \ or | 
kHIDUsage_KeyboardNonUSPound	EQU		$32					; Non-US # or _ 
kHIDUsage_KeyboardSemicolon		EQU		$33					; ; or : 
kHIDUsage_KeyboardQuote			EQU		$34					; ' or " 
kHIDUsage_KeyboardGraveAccentAndTilde EQU $35				; Grave Accent and Tilde 
kHIDUsage_KeyboardComma			EQU		$36					; , or < 
kHIDUsage_KeyboardPeriod		EQU		$37					; . or > 
kHIDUsage_KeyboardSlash			EQU		$38					; / or ? 
kHIDUsage_KeyboardCapsLock		EQU		$39					; Caps Lock 
kHIDUsage_KeyboardF1			EQU		$3A					; F1 
kHIDUsage_KeyboardF2			EQU		$3B					; F2 
kHIDUsage_KeyboardF3			EQU		$3C					; F3 
kHIDUsage_KeyboardF4			EQU		$3D					; F4 
kHIDUsage_KeyboardF5			EQU		$3E					; F5 
kHIDUsage_KeyboardF6			EQU		$3F					; F6 
kHIDUsage_KeyboardF7			EQU		$40					; F7 
kHIDUsage_KeyboardF8			EQU		$41					; F8 
kHIDUsage_KeyboardF9			EQU		$42					; F9 
kHIDUsage_KeyboardF10			EQU		$43					; F10 
kHIDUsage_KeyboardF11			EQU		$44					; F11 
kHIDUsage_KeyboardF12			EQU		$45					; F12 
kHIDUsage_KeyboardPrintScreen	EQU		$46					; Print Screen 
kHIDUsage_KeyboardScrollLock	EQU		$47					; Scroll Lock 
kHIDUsage_KeyboardPause			EQU		$48					; Pause 
kHIDUsage_KeyboardInsert		EQU		$49					; Insert 
kHIDUsage_KeyboardHome			EQU		$4A					; Home 
kHIDUsage_KeyboardPageUp		EQU		$4B					; Page Up 
kHIDUsage_KeyboardDeleteForward	EQU		$4C					; Delete Forward 
kHIDUsage_KeyboardEnd			EQU		$4D					; End 
kHIDUsage_KeyboardPageDown		EQU		$4E					; Page Down 
kHIDUsage_KeyboardRightArrow	EQU		$4F					; Right Arrow 
kHIDUsage_KeyboardLeftArrow		EQU		$50					; Left Arrow 
kHIDUsage_KeyboardDownArrow		EQU		$51					; Down Arrow 
kHIDUsage_KeyboardUpArrow		EQU		$52					; Up Arrow 
kHIDUsage_KeypadNumLock			EQU		$53					; Keypad NumLock or Clear 
kHIDUsage_KeypadSlash			EQU		$54					; Keypad / 
kHIDUsage_KeypadAsterisk		EQU		$55					; Keypad * 
kHIDUsage_KeypadHyphen			EQU		$56					; Keypad - 
kHIDUsage_KeypadPlus			EQU		$57					; Keypad + 
kHIDUsage_KeypadEnter			EQU		$58					; Keypad Enter 
kHIDUsage_Keypad1				EQU		$59					; Keypad 1 or End 
kHIDUsage_Keypad2				EQU		$5A					; Keypad 2 or Down Arrow 
kHIDUsage_Keypad3				EQU		$5B					; Keypad 3 or Page Down 
kHIDUsage_Keypad4				EQU		$5C					; Keypad 4 or Left Arrow 
kHIDUsage_Keypad5				EQU		$5D					; Keypad 5 
kHIDUsage_Keypad6				EQU		$5E					; Keypad 6 or Right Arrow 
kHIDUsage_Keypad7				EQU		$5F					; Keypad 7 or Home 
kHIDUsage_Keypad8				EQU		$60					; Keypad 8 or Up Arrow 
kHIDUsage_Keypad9				EQU		$61					; Keypad 9 or Page Up 
kHIDUsage_Keypad0				EQU		$62					; Keypad 0 or Insert 
kHIDUsage_KeypadPeriod			EQU		$63					; Keypad . or Delete 
kHIDUsage_KeyboardNonUSBackslash EQU	$64					; Non-US \ or | 
kHIDUsage_KeyboardApplication	EQU		$65					; Application 
kHIDUsage_KeyboardPower			EQU		$66					; Power 
kHIDUsage_KeypadEqualSign		EQU		$67					; Keypad = 
kHIDUsage_KeyboardF13			EQU		$68					; F13 
kHIDUsage_KeyboardF14			EQU		$69					; F14 
kHIDUsage_KeyboardF15			EQU		$6A					; F15 
kHIDUsage_KeyboardF16			EQU		$6B					; F16 
kHIDUsage_KeyboardF17			EQU		$6C					; F17 
kHIDUsage_KeyboardF18			EQU		$6D					; F18 
kHIDUsage_KeyboardF19			EQU		$6E					; F19 
kHIDUsage_KeyboardF20			EQU		$6F					; F20 
kHIDUsage_KeyboardF21			EQU		$70					; F21 
kHIDUsage_KeyboardF22			EQU		$71					; F22 
kHIDUsage_KeyboardF23			EQU		$72					; F23 
kHIDUsage_KeyboardF24			EQU		$73					; F24 
kHIDUsage_KeyboardExecute		EQU		$74					; Execute 
kHIDUsage_KeyboardHelp			EQU		$75					; Help 
kHIDUsage_KeyboardMenu			EQU		$76					; Menu 
kHIDUsage_KeyboardSelect		EQU		$77					; Select 
kHIDUsage_KeyboardStop			EQU		$78					; Stop 
kHIDUsage_KeyboardAgain			EQU		$79					; Again 
kHIDUsage_KeyboardUndo			EQU		$7A					; Undo 
kHIDUsage_KeyboardCut			EQU		$7B					; Cut 
kHIDUsage_KeyboardCopy			EQU		$7C					; Copy 
kHIDUsage_KeyboardPaste			EQU		$7D					; Paste 
kHIDUsage_KeyboardFind			EQU		$7E					; Find 
kHIDUsage_KeyboardMute			EQU		$7F					; Mute 
kHIDUsage_KeyboardVolumeUp		EQU		$80					; Volume Up 
kHIDUsage_KeyboardVolumeDown	EQU		$81					; Volume Down 
kHIDUsage_KeyboardLockingCapsLock EQU	$82					; Locking Caps Lock 
kHIDUsage_KeyboardLockingNumLock EQU	$83					; Locking Num Lock 
kHIDUsage_KeyboardLockingScrollLock EQU	$84					; Locking Scroll Lock 
kHIDUsage_KeypadComma			EQU		$85					; Keypad Comma 
kHIDUsage_KeypadEqualSignAS400	EQU		$86					; Keypad Equal Sign for AS/400 
kHIDUsage_KeyboardInternational1 EQU	$87					; International1 
kHIDUsage_KeyboardInternational2 EQU	$88					; International2 
kHIDUsage_KeyboardInternational3 EQU	$89					; International3 
kHIDUsage_KeyboardInternational4 EQU	$8A					; International4 
kHIDUsage_KeyboardInternational5 EQU	$8B					; International5 
kHIDUsage_KeyboardInternational6 EQU	$8C					; International6 
kHIDUsage_KeyboardInternational7 EQU	$8D					; International7 
kHIDUsage_KeyboardInternational8 EQU	$8E					; International8 
kHIDUsage_KeyboardInternational9 EQU	$8F					; International9 
kHIDUsage_KeyboardLANG1			EQU		$90					; LANG1 
kHIDUsage_KeyboardLANG2			EQU		$91					; LANG2 
kHIDUsage_KeyboardLANG3			EQU		$92					; LANG3 
kHIDUsage_KeyboardLANG4			EQU		$93					; LANG4 
kHIDUsage_KeyboardLANG5			EQU		$94					; LANG5 
kHIDUsage_KeyboardLANG6			EQU		$95					; LANG6 
kHIDUsage_KeyboardLANG7			EQU		$96					; LANG7 
kHIDUsage_KeyboardLANG8			EQU		$97					; LANG8 
kHIDUsage_KeyboardLANG9			EQU		$98					; LANG9 
kHIDUsage_KeyboardAlternateErase EQU	$99					; AlternateErase 
kHIDUsage_KeyboardSysReqOrAttention EQU	$9A					; SysReq/Attention 
kHIDUsage_KeyboardCancel		EQU		$9B					; Cancel 
kHIDUsage_KeyboardClear			EQU		$9C					; Clear 
kHIDUsage_KeyboardPrior			EQU		$9D					; Prior 
kHIDUsage_KeyboardReturn		EQU		$9E					; Return 
kHIDUsage_KeyboardSeparator		EQU		$9F					; Separator 
kHIDUsage_KeyboardOut			EQU		$A0					; Out 
kHIDUsage_KeyboardOper			EQU		$A1					; Oper 
kHIDUsage_KeyboardClearOrAgain	EQU		$A2					; Clear/Again 
kHIDUsage_KeyboardCrSelOrProps	EQU		$A3					; CrSel/Props 
kHIDUsage_KeyboardExSel			EQU		$A4					; ExSel 
															; 0xA5-0xDF Reserved 
kHIDUsage_KeyboardLeftControl	EQU		$E0					; Left Control 
kHIDUsage_KeyboardLeftShift		EQU		$E1					; Left Shift 
kHIDUsage_KeyboardLeftAlt		EQU		$E2					; Left Alt 
kHIDUsage_KeyboardLeftGUI		EQU		$E3					; Left GUI 
kHIDUsage_KeyboardRightControl	EQU		$E4					; Right Control 
kHIDUsage_KeyboardRightShift	EQU		$E5					; Right Shift 
kHIDUsage_KeyboardRightAlt		EQU		$E6					; Right Alt 
kHIDUsage_KeyboardRightGUI		EQU		$E7					; Right GUI 
															; 0xE8-0xFFFF Reserved 
kHIDUsage_Keyboard_Reserved		EQU		$FFFF
;  LEDs Page (0x08) 
;  An LED or indicator is implemented as an On/Off Control (OOF) using the âSingle button toggleâ mode, 
;/* where a value of 1 will turn on the indicator, and a value of 0 will turn it off. The exceptions are described below. 

kHIDUsage_LED_NumLock			EQU		$01					; On/Off Control 
kHIDUsage_LED_CapsLock			EQU		$02					; On/Off Control 
kHIDUsage_LED_ScrollLock		EQU		$03					; On/Off Control 
kHIDUsage_LED_Compose			EQU		$04					; On/Off Control 
kHIDUsage_LED_Kana				EQU		$05					; On/Off Control 
kHIDUsage_LED_Power				EQU		$06					; On/Off Control 
kHIDUsage_LED_Shift				EQU		$07					; On/Off Control 
kHIDUsage_LED_DoNotDisturb		EQU		$08					; On/Off Control 
kHIDUsage_LED_Mute				EQU		$09					; On/Off Control 
kHIDUsage_LED_ToneEnable		EQU		$0A					; On/Off Control 
kHIDUsage_LED_HighCutFilter		EQU		$0B					; On/Off Control 
kHIDUsage_LED_LowCutFilter		EQU		$0C					; On/Off Control 
kHIDUsage_LED_EqualizerEnable	EQU		$0D					; On/Off Control 
kHIDUsage_LED_SoundFieldOn		EQU		$0E					; On/Off Control 
kHIDUsage_LED_SurroundOn		EQU		$0F					; On/Off Control 
kHIDUsage_LED_Repeat			EQU		$10					; On/Off Control 
kHIDUsage_LED_Stereo			EQU		$11					; On/Off Control 
kHIDUsage_LED_SamplingRateDetect EQU	$12					; On/Off Control 
kHIDUsage_LED_Spinning			EQU		$13					; On/Off Control 
kHIDUsage_LED_CAV				EQU		$14					; On/Off Control 
kHIDUsage_LED_CLV				EQU		$15					; On/Off Control 
kHIDUsage_LED_RecordingFormatDetect EQU	$16					; On/Off Control 
kHIDUsage_LED_OffHook			EQU		$17					; On/Off Control 
kHIDUsage_LED_Ring				EQU		$18					; On/Off Control 
kHIDUsage_LED_MessageWaiting	EQU		$19					; On/Off Control 
kHIDUsage_LED_DataMode			EQU		$1A					; On/Off Control 
kHIDUsage_LED_BatteryOperation	EQU		$1B					; On/Off Control 
kHIDUsage_LED_BatteryOK			EQU		$1C					; On/Off Control 
kHIDUsage_LED_BatteryLow		EQU		$1D					; On/Off Control 
kHIDUsage_LED_Speaker			EQU		$1E					; On/Off Control 
kHIDUsage_LED_HeadSet			EQU		$1F					; On/Off Control 
kHIDUsage_LED_Hold				EQU		$20					; On/Off Control 
kHIDUsage_LED_Microphone		EQU		$21					; On/Off Control 
kHIDUsage_LED_Coverage			EQU		$22					; On/Off Control 
kHIDUsage_LED_NightMode			EQU		$23					; On/Off Control 
kHIDUsage_LED_SendCalls			EQU		$24					; On/Off Control 
kHIDUsage_LED_CallPickup		EQU		$25					; On/Off Control 
kHIDUsage_LED_Conference		EQU		$26					; On/Off Control 
kHIDUsage_LED_StandBy			EQU		$27					; On/Off Control 
kHIDUsage_LED_CameraOn			EQU		$28					; On/Off Control 
kHIDUsage_LED_CameraOff			EQU		$29					; On/Off Control 
kHIDUsage_LED_OnLine			EQU		$2A					; On/Off Control 
kHIDUsage_LED_OffLine			EQU		$2B					; On/Off Control 
kHIDUsage_LED_Busy				EQU		$2C					; On/Off Control 
kHIDUsage_LED_Ready				EQU		$2D					; On/Off Control 
kHIDUsage_LED_PaperOut			EQU		$2E					; On/Off Control 
kHIDUsage_LED_PaperJam			EQU		$2F					; On/Off Control 
kHIDUsage_LED_Remote			EQU		$30					; On/Off Control 
kHIDUsage_LED_Forward			EQU		$31					; On/Off Control 
kHIDUsage_LED_Reverse			EQU		$32					; On/Off Control 
kHIDUsage_LED_Stop				EQU		$33					; On/Off Control 
kHIDUsage_LED_Rewind			EQU		$34					; On/Off Control 
kHIDUsage_LED_FastForward		EQU		$35					; On/Off Control 
kHIDUsage_LED_Play				EQU		$36					; On/Off Control 
kHIDUsage_LED_Pause				EQU		$37					; On/Off Control 
kHIDUsage_LED_Record			EQU		$38					; On/Off Control 
kHIDUsage_LED_Error				EQU		$39					; On/Off Control 
kHIDUsage_LED_Usage				EQU		$3A					; Selector 
kHIDUsage_LED_UsageInUseIndicator EQU	$3B					; Usage Switch 
kHIDUsage_LED_UsageMultiModeIndicator EQU $3C				; Usage Modifier 
kHIDUsage_LED_IndicatorOn		EQU		$3D					; Selector 
kHIDUsage_LED_IndicatorFlash	EQU		$3E					; Selector 
kHIDUsage_LED_IndicatorSlowBlink EQU	$3F					; Selector 
kHIDUsage_LED_IndicatorFastBlink EQU	$40					; Selector 
kHIDUsage_LED_IndicatorOff		EQU		$41					; Selector 
kHIDUsage_LED_FlashOnTime		EQU		$42					; Dynamic Value 
kHIDUsage_LED_SlowBlinkOnTime	EQU		$43					; Dynamic Value 
kHIDUsage_LED_SlowBlinkOffTime	EQU		$44					; Dynamic Value 
kHIDUsage_LED_FastBlinkOnTime	EQU		$45					; Dynamic Value 
kHIDUsage_LED_FastBlinkOffTime	EQU		$46					; Dynamic Value 
kHIDUsage_LED_UsageIndicatorColor EQU	$47					; Usage Modifier 
kHIDUsage_LED_IndicatorRed		EQU		$48					; Selector 
kHIDUsage_LED_IndicatorGreen	EQU		$49					; Selector 
kHIDUsage_LED_IndicatorAmber	EQU		$4A					; Selector 
kHIDUsage_LED_GenericIndicator	EQU		$4B					; On/Off Control 
kHIDUsage_LED_SystemSuspend		EQU		$4C					; On/Off Control 
kHIDUsage_LED_ExternalPowerConnected EQU $4D				; On/Off Control 
															; 0x4E - 0xFFFF Reserved 
kHIDUsage_LED_Reserved			EQU		$FFFF
;  Button Page (0x09) 
;  The Button page is the first place an application should look for user selection controls. System graphical user 
;  interfaces typically employ a pointer and a set of hierarchical selectors to select, move and otherwise manipulate 
;  their environment. For these purposes the following assignment of significance can be applied to the Button usages: 
;  â¢ Button 1, Primary Button. Used for object selecting, dragging, and double click activation. On MacOS, this is the 
;/*   only button. Microsoft operating systems call this a logical left button, because it 
;    is not necessarily physically located on the left of the pointing device. 
;  â¢ Button 2, Secondary Button. Used by newer graphical user interfaces to browse object properties. Exposed by systems 
;    to applications that typically assign application-specific functionality. 
;  â¢ Button 3, Tertiary Button. Optional control. Exposed to applications, but seldom assigned functionality due to prevalence 
;    of two- and one-button devices. 
;  â¢ Buttons 4 -55. As the button number increases, its significance as a selector decreases. 
;  In many ways the assignment of button numbers is similar to the assignment of Effort in Physical descriptors. 
;  Button 1 would be used to define the button a finger rests on when the hand is in the âat restâ position, that is, virtually 
;  no effort is required by the user to activate the button. Button values increment as the finger has to stretch to reach a 
;  control. See Section 6.2.3, âPhysical Descriptors,â in the HID Specification for methods of further qualifying buttons. 

kHIDUsage_Button_1				EQU		$01					; (primary/trigger) 
kHIDUsage_Button_2				EQU		$02					; (secondary) 
kHIDUsage_Button_3				EQU		$03					; (tertiary) 
kHIDUsage_Button_4				EQU		$04					; 4th button 
															; ... 
kHIDUsage_Button_65535			EQU		$FFFF
;  Ordinal Page (0x0A) 
;  The Ordinal page allows multiple instances of a control or sets of controls to be declared without requiring individual 
;  enumeration in the native usage page. For example, it is not necessary to declare usages of Pointer 1, Pointer 2, and so 
;  forth on the Generic Desktop page. When parsed, the ordinal instance number is, in essence, concatenated to the usages 
;  attached to the encompassing collection to create Pointer 1, Pointer 2, and so forth. 
;  For an example, see Section A.5, âMultiple Instances of a Control,â in Appendix A, âUsage Examples.â By convention, 
;  an Ordinal collection is placed inside the collection for which it is declaring multiple instances. 
;  Instances do not have to be identical. 

															; 0x00 Reserved 
kHIDUsage_Ord_Instance1			EQU		$01					; Usage Modifier 
kHIDUsage_Ord_Instance2			EQU		$02					; Usage Modifier 
kHIDUsage_Ord_Instance3			EQU		$03					; Usage Modifier 
kHIDUsage_Ord_Instance4			EQU		$04					; Usage Modifier 
kHIDUsage_Ord_Instance65535		EQU		$FFFF				; Usage Modifier 
;  Telephony Page (0x0B) 
;  This usage page defines the keytop and control usages for telephony devices. 
;  Indicators on a phone are handled by wrapping them in LED: Usage In Use Indicator and LED: Usage Selected Indicator 
;  usages. For example, a message-indicator LED would be identified by a Telephony: Message usage declared as a Feature 
;  or Output in a LED: Usage In Use Indicator collection. 
;  See Section 14, âConsumer Page (0x0C),â for audio volume and tone controls. 

kHIDUsage_Tfon_Phone			EQU		$01					; Application Collection 
kHIDUsage_Tfon_AnsweringMachine	EQU		$02					; Application Collection 
kHIDUsage_Tfon_MessageControls	EQU		$03					; Logical Collection 
kHIDUsage_Tfon_Handset			EQU		$04					; Logical Collection 
kHIDUsage_Tfon_Headset			EQU		$05					; Logical Collection 
kHIDUsage_Tfon_TelephonyKeyPad	EQU		$06					; Named Array 
kHIDUsage_Tfon_ProgrammableButton EQU	$07					; Named Array 
															; 0x08 - 0x1F Reserved 
kHIDUsage_Tfon_HookSwitch		EQU		$20					; On/Off Control 
kHIDUsage_Tfon_Flash			EQU		$21					; Momentary Control 
kHIDUsage_Tfon_Feature			EQU		$22					; One-Shot Control 
kHIDUsage_Tfon_Hold				EQU		$23					; On/Off Control 
kHIDUsage_Tfon_Redial			EQU		$24					; One-Shot Control 
kHIDUsage_Tfon_Transfer			EQU		$25					; One-Shot Control 
kHIDUsage_Tfon_Drop				EQU		$26					; One-Shot Control 
kHIDUsage_Tfon_Park				EQU		$27					; On/Off Control 
kHIDUsage_Tfon_ForwardCalls		EQU		$28					; On/Off Control 
kHIDUsage_Tfon_AlternateFunction EQU	$29					; Momentary Control 
kHIDUsage_Tfon_Line				EQU		$2A					; One-Shot Control 
kHIDUsage_Tfon_SpeakerPhone		EQU		$2B					; On/Off Control 
kHIDUsage_Tfon_Conference		EQU		$2C					; On/Off Control 
kHIDUsage_Tfon_RingEnable		EQU		$2D					; On/Off Control 
kHIDUsage_Tfon_Ring				EQU		$2E					; Selector 
kHIDUsage_Tfon_PhoneMute		EQU		$2F					; On/Off Control 
kHIDUsage_Tfon_CallerID			EQU		$30					; Momentary Control 
															; 0x31 - 0x4F Reserved 
kHIDUsage_Tfon_SpeedDial		EQU		$50					; One-Shot Control 
kHIDUsage_Tfon_StoreNumber		EQU		$51					; One-Shot Control 
kHIDUsage_Tfon_RecallNumber		EQU		$52					; One-Shot Control 
kHIDUsage_Tfon_PhoneDirectory	EQU		$53					; On/Off Control 
															; 0x54 - 0x6F Reserved 
kHIDUsage_Tfon_VoiceMail		EQU		$70					; On/Off Control 
kHIDUsage_Tfon_ScreenCalls		EQU		$71					; On/Off Control 
kHIDUsage_Tfon_DoNotDisturb		EQU		$72					; On/Off Control 
kHIDUsage_Tfon_Message			EQU		$73					; One-Shot Control 
kHIDUsage_Tfon_AnswerOnOrOff	EQU		$74					; On/Off Control 
															; 0x75 - 0x8F Reserved 
kHIDUsage_Tfon_InsideDialTone	EQU		$90					; Momentary Control 
kHIDUsage_Tfon_OutsideDialTone	EQU		$91					; Momentary Control 
kHIDUsage_Tfon_InsideRingTone	EQU		$92					; Momentary Control 
kHIDUsage_Tfon_OutsideRingTone	EQU		$93					; Momentary Control 
kHIDUsage_Tfon_PriorityRingTone	EQU		$94					; Momentary Control 
kHIDUsage_Tfon_InsideRingback	EQU		$95					; Momentary Control 
kHIDUsage_Tfon_PriorityRingback	EQU		$96					; Momentary Control 
kHIDUsage_Tfon_LineBusyTone		EQU		$97					; Momentary Control 
kHIDUsage_Tfon_ReorderTone		EQU		$98					; Momentary Control 
kHIDUsage_Tfon_CallWaitingTone	EQU		$99					; Momentary Control 
kHIDUsage_Tfon_ConfirmationTone1 EQU	$9A					; Momentary Control 
kHIDUsage_Tfon_ConfirmationTone2 EQU	$9B					; Momentary Control 
kHIDUsage_Tfon_TonesOff			EQU		$9C					; On/Off Control 
kHIDUsage_Tfon_OutsideRingback	EQU		$9D					; Momentary Control 
															; 0x9E - 0xAF Reserved 
kHIDUsage_Tfon_PhoneKey0		EQU		$B0					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey1		EQU		$B1					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey2		EQU		$B2					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey3		EQU		$B3					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey4		EQU		$B4					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey5		EQU		$B5					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey6		EQU		$B6					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey7		EQU		$B7					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey8		EQU		$B8					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKey9		EQU		$B9					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKeyStar		EQU		$BA					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKeyPound	EQU		$BB					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKeyA		EQU		$BC					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKeyB		EQU		$BD					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKeyC		EQU		$BE					; Selector/One-Shot Control 
kHIDUsage_Tfon_PhoneKeyD		EQU		$BF					; Selector/One-Shot Control 
															; 0xC0 - 0xFFFF Reserved 
kHIDUsage_TFon_Reserved			EQU		$FFFF
;  Consumer Page (0x0C) 
;  All controls on the Consumer page are application-specific. That is, they affect a specific device, not the system as a whole. 

kHIDUsage_Csmr_ConsumerControl	EQU		$01					; Application Collection 
kHIDUsage_Csmr_NumericKeyPad	EQU		$02					; Named Array 
kHIDUsage_Csmr_ProgrammableButtons EQU	$03					; Named Array 
															; 0x03 - 0x1F Reserved 
kHIDUsage_Csmr_Plus10			EQU		$20					; One-Shot Control 
kHIDUsage_Csmr_Plus100			EQU		$21					; One-Shot Control 
kHIDUsage_Csmr_AMOrPM			EQU		$22					; One-Shot Control 
															; 0x23 - 0x3F Reserved 
kHIDUsage_Csmr_Power			EQU		$30					; On/Off Control 
kHIDUsage_Csmr_Reset			EQU		$31					; One-Shot Control 
kHIDUsage_Csmr_Sleep			EQU		$32					; One-Shot Control 
kHIDUsage_Csmr_SleepAfter		EQU		$33					; One-Shot Control 
kHIDUsage_Csmr_SleepMode		EQU		$34					; Re-Trigger Control 
kHIDUsage_Csmr_Illumination		EQU		$35					; On/Off Control 
kHIDUsage_Csmr_FunctionButtons	EQU		$36					; Named Array 
															; 0x37 - 0x3F Reserved 
kHIDUsage_Csmr_Menu				EQU		$40					; On/Off Control 
kHIDUsage_Csmr_MenuPick			EQU		$41					; One-Shot Control 
kHIDUsage_Csmr_MenuUp			EQU		$42					; One-Shot Control 
kHIDUsage_Csmr_MenuDown			EQU		$43					; One-Shot Control 
kHIDUsage_Csmr_MenuLeft			EQU		$44					; One-Shot Control 
kHIDUsage_Csmr_MenuRight		EQU		$45					; One-Shot Control 
kHIDUsage_Csmr_MenuEscape		EQU		$46					; One-Shot Control 
kHIDUsage_Csmr_MenuValueIncrease EQU	$47					; One-Shot Control 
kHIDUsage_Csmr_MenuValueDecrease EQU	$48					; One-Shot Control 
															; 0x49 - 0x5F Reserved 
kHIDUsage_Csmr_DataOnScreen		EQU		$60					; On/Off Control 
kHIDUsage_Csmr_ClosedCaption	EQU		$61					; On/Off Control 
kHIDUsage_Csmr_ClosedCaptionSelect EQU	$62					; Selector 
kHIDUsage_Csmr_VCROrTV			EQU		$63					; On/Off Control 
kHIDUsage_Csmr_BroadcastMode	EQU		$64					; One-Shot Control 
kHIDUsage_Csmr_Snapshot			EQU		$65					; One-Shot Control 
kHIDUsage_Csmr_Still			EQU		$66					; One-Shot Control 
															; 0x67 - 0x7F Reserved 
kHIDUsage_Csmr_Selection		EQU		$80					; Named Array 
kHIDUsage_Csmr_Assign			EQU		$81					; Selector 
kHIDUsage_Csmr_ModeStep			EQU		$82					; One-Shot Control 
kHIDUsage_Csmr_RecallLast		EQU		$83					; One-Shot Control 
kHIDUsage_Csmr_EnterChannel		EQU		$84					; One-Shot Control 
kHIDUsage_Csmr_OrderMovie		EQU		$85					; One-Shot Control 
kHIDUsage_Csmr_Channel			EQU		$86					; Linear Control 
kHIDUsage_Csmr_MediaSelection	EQU		$87					; Selector 
kHIDUsage_Csmr_MediaSelectComputer EQU	$88					; Selector 
kHIDUsage_Csmr_MediaSelectTV	EQU		$89					; Selector 
kHIDUsage_Csmr_MediaSelectWWW	EQU		$8A					; Selector 
kHIDUsage_Csmr_MediaSelectDVD	EQU		$8B					; Selector 
kHIDUsage_Csmr_MediaSelectTelephone EQU	$8C					; Selector 
kHIDUsage_Csmr_MediaSelectProgramGuide EQU $8D				; Selector 
kHIDUsage_Csmr_MediaSelectVideoPhone EQU $8E				; Selector 
kHIDUsage_Csmr_MediaSelectGames	EQU		$8F					; Selector 
kHIDUsage_Csmr_MediaSelectMessages EQU	$90					; Selector 
kHIDUsage_Csmr_MediaSelectCD	EQU		$91					; Selector 
kHIDUsage_Csmr_MediaSelectVCR	EQU		$92					; Selector 
kHIDUsage_Csmr_MediaSelectTuner	EQU		$93					; Selector 
kHIDUsage_Csmr_Quit				EQU		$94					; One-Shot Control 
kHIDUsage_Csmr_Help				EQU		$95					; On/Off Control 
kHIDUsage_Csmr_MediaSelectTape	EQU		$96					; Selector 
kHIDUsage_Csmr_MediaSelectCable	EQU		$97					; Selector 
kHIDUsage_Csmr_MediaSelectSatellite EQU	$98					; Selector 
kHIDUsage_Csmr_MediaSelectSecurity EQU	$99					; Selector 
kHIDUsage_Csmr_MediaSelectHome	EQU		$9A					; Selector 
kHIDUsage_Csmr_MediaSelectCall	EQU		$9B					; Selector 
kHIDUsage_Csmr_ChannelIncrement	EQU		$9C					; One-Shot Control 
kHIDUsage_Csmr_ChannelDecrement	EQU		$9D					; One-Shot Control 
kHIDUsage_Csmr_Media			EQU		$9E					; Selector 
															; 0x9F Reserved 
kHIDUsage_Csmr_VCRPlus			EQU		$A0					; One-Shot Control 
kHIDUsage_Csmr_Once				EQU		$A1					; One-Shot Control 
kHIDUsage_Csmr_Daily			EQU		$A2					; One-Shot Control 
kHIDUsage_Csmr_Weekly			EQU		$A3					; One-Shot Control 
kHIDUsage_Csmr_Monthly			EQU		$A4					; One-Shot Control 
															; 0xA5 - 0xAF Reserved 
kHIDUsage_Csmr_Play				EQU		$B0					; On/Off Control 
kHIDUsage_Csmr_Pause			EQU		$B1					; On/Off Control 
kHIDUsage_Csmr_Record			EQU		$B2					; On/Off Control 
kHIDUsage_Csmr_FastForward		EQU		$B3					; On/Off Control 
kHIDUsage_Csmr_Rewind			EQU		$B4					; On/Off Control 
kHIDUsage_Csmr_ScanNextTrack	EQU		$B5					; One-Shot Control 
kHIDUsage_Csmr_ScanPreviousTrack EQU	$B6					; One-Shot Control 
kHIDUsage_Csmr_Stop				EQU		$B7					; One-Shot Control 
kHIDUsage_Csmr_Eject			EQU		$B8					; One-Shot Control 
kHIDUsage_Csmr_RandomPlay		EQU		$B9					; On/Off Control 
kHIDUsage_Csmr_SelectDisc		EQU		$BA					; Named Array 
kHIDUsage_Csmr_EnterDisc		EQU		$BB					; Momentary Control 
kHIDUsage_Csmr_Repeat			EQU		$BC					; One-Shot Control 
kHIDUsage_Csmr_Tracking			EQU		$BD					; Linear Control 
kHIDUsage_Csmr_TrackNormal		EQU		$BE					; One-Shot Control 
kHIDUsage_Csmr_SlowTracking		EQU		$BF					; Linear Control 
kHIDUsage_Csmr_FrameForward		EQU		$C0					; Re-Trigger Control 
kHIDUsage_Csmr_FrameBack		EQU		$C1					; Re-Trigger Control 
kHIDUsage_Csmr_Mark				EQU		$C2					; One-Shot Control 
kHIDUsage_Csmr_ClearMark		EQU		$C3					; One-Shot Control 
kHIDUsage_Csmr_RepeatFromMark	EQU		$C4					; On/Off Control 
kHIDUsage_Csmr_ReturnToMark		EQU		$C5					; One-Shot Control 
kHIDUsage_Csmr_SearchMarkForward EQU	$C6					; One-Shot Control 
kHIDUsage_Csmr_SearchMarkBackwards EQU	$C7					; One-Shot Control 
kHIDUsage_Csmr_CounterReset		EQU		$C8					; One-Shot Control 
kHIDUsage_Csmr_ShowCounter		EQU		$C9					; One-Shot Control 
kHIDUsage_Csmr_TrackingIncrement EQU	$CA					; Re-Trigger Control 
kHIDUsage_Csmr_TrackingDecrement EQU	$CB					; Re-Trigger Control 
kHIDUsage_Csmr_StopOrEject		EQU		$CC					; One-Shot Control 
kHIDUsage_Csmr_PlayOrPause		EQU		$CD					; One-Shot Control 
kHIDUsage_Csmr_PlayOrSkip		EQU		$CE					; One-Shot Control 
															; 0xCF - 0xDF Reserved 
kHIDUsage_Csmr_Volume			EQU		$E0					; Linear Control 
kHIDUsage_Csmr_Balance			EQU		$E1					; Linear Control 
kHIDUsage_Csmr_Mute				EQU		$E2					; On/Off Control 
kHIDUsage_Csmr_Bass				EQU		$E3					; Linear Control 
kHIDUsage_Csmr_Treble			EQU		$E4					; Linear Control 
kHIDUsage_Csmr_BassBoost		EQU		$E5					; On/Off Control 
kHIDUsage_Csmr_SurroundMode		EQU		$E6					; One-Shot Control 
kHIDUsage_Csmr_Loudness			EQU		$E7					; On/Off Control 
kHIDUsage_Csmr_MPX				EQU		$E8					; On/Off Control 
kHIDUsage_Csmr_VolumeIncrement	EQU		$E9					; Re-Trigger Control 
kHIDUsage_Csmr_VolumeDecrement	EQU		$EA					; Re-Trigger Control 
															; 0xEB - 0xEF Reserved 
kHIDUsage_Csmr_Speed			EQU		$F0					; Selector 
kHIDUsage_Csmr_PlaybackSpeed	EQU		$F1					; Named Array 
kHIDUsage_Csmr_StandardPlay		EQU		$F2					; Selector 
kHIDUsage_Csmr_LongPlay			EQU		$F3					; Selector 
kHIDUsage_Csmr_ExtendedPlay		EQU		$F4					; Selector 
kHIDUsage_Csmr_Slow				EQU		$F5					; One-Shot Control 
															; 0xF6 - 0xFF Reserved 
kHIDUsage_Csmr_FanEnable		EQU		$0100				; On/Off Control 
kHIDUsage_Csmr_FanSpeed			EQU		$0101				; Linear Control 
kHIDUsage_Csmr_LightEnable		EQU		$0102				; On/Off Control 
kHIDUsage_Csmr_LightIlluminationLevel EQU $0103				; Linear Control 
kHIDUsage_Csmr_ClimateControlEnable EQU	$0104				; On/Off Control 
kHIDUsage_Csmr_RoomTemperature	EQU		$0105				; Linear Control 
kHIDUsage_Csmr_SecurityEnable	EQU		$0106				; On/Off Control 
kHIDUsage_Csmr_FireAlarm		EQU		$0107				; One-Shot Control 
kHIDUsage_Csmr_PoliceAlarm		EQU		$0108				; One-Shot Control 
															; 0x109 - 0x14F Reserved 
kHIDUsage_Csmr_BalanceRight		EQU		$0150				; Re-Trigger Control 
kHIDUsage_Csmr_BalanceLeft		EQU		$0151				; Re-Trigger Control 
kHIDUsage_Csmr_BassIncrement	EQU		$0152				; Re-Trigger Control 
kHIDUsage_Csmr_BassDecrement	EQU		$0153				; Re-Trigger Control 
kHIDUsage_Csmr_TrebleIncrement	EQU		$0154				; Re-Trigger Control 
kHIDUsage_Csmr_TrebleDecrement	EQU		$0155				; Re-Trigger Control 
															; 0x156 - 0x15F Reserved 
kHIDUsage_Csmr_SpeakerSystem	EQU		$0160				; Logical Collection 
kHIDUsage_Csmr_ChannelLeft		EQU		$0161				; Logical Collection 
kHIDUsage_Csmr_ChannelRight		EQU		$0162				; Logical Collection 
kHIDUsage_Csmr_ChannelCenter	EQU		$0163				; Logical Collection 
kHIDUsage_Csmr_ChannelFront		EQU		$0164				; Logical Collection 
kHIDUsage_Csmr_ChannelCenterFront EQU	$0165				; Logical Collection 
kHIDUsage_Csmr_ChannelSide		EQU		$0166				; Logical Collection 
kHIDUsage_Csmr_ChannelSurround	EQU		$0167				; Logical Collection 
kHIDUsage_Csmr_ChannelLowFrequencyEnhancement EQU $0168		; Logical Collection 
kHIDUsage_Csmr_ChannelTop		EQU		$0169				; Logical Collection 
kHIDUsage_Csmr_ChannelUnknown	EQU		$016A				; Logical Collection 
															; 0x16B - 0x16F Reserved 
kHIDUsage_Csmr_SubChannel		EQU		$0170				; Linear Control 
kHIDUsage_Csmr_SubChannelIncrement EQU	$0171				; One-Shot Control 
kHIDUsage_Csmr_SubChannelDecrement EQU	$0172				; One-Shot Control 
kHIDUsage_Csmr_AlternateAudioIncrement EQU $0173			; One-Shot Control 
kHIDUsage_Csmr_AlternateAudioDecrement EQU $0174			; One-Shot Control 
															; 0x175 - 0x17F Reserved 
kHIDUsage_Csmr_ApplicationLaunchButtons EQU $0180			; Named Array 
kHIDUsage_Csmr_ALLaunchButtonConfigurationTool EQU $0181	; Selector 
kHIDUsage_Csmr_ALProgrammableButtonConfiguration EQU $0182	; Selector 
kHIDUsage_Csmr_ALConsumerControlConfiguration EQU $0183		; Selector 
kHIDUsage_Csmr_ALWordProcessor	EQU		$0184				; Selector 
kHIDUsage_Csmr_ALTextEditor		EQU		$0185				; Selector 
kHIDUsage_Csmr_ALSpreadsheet	EQU		$0186				; Selector 
kHIDUsage_Csmr_ALGraphicsEditor	EQU		$0187				; Selector 
kHIDUsage_Csmr_ALPresentationApp EQU	$0188				; Selector 
kHIDUsage_Csmr_ALDatabaseApp	EQU		$0189				; Selector 
kHIDUsage_Csmr_ALEmailReader	EQU		$018A				; Selector 
kHIDUsage_Csmr_ALNewsreader		EQU		$018B				; Selector 
kHIDUsage_Csmr_ALVoicemail		EQU		$018C				; Selector 
kHIDUsage_Csmr_ALContactsOrAddressBook EQU $018D			; Selector 
kHIDUsage_Csmr_ALCalendarOrSchedule EQU	$018E				; Selector 
kHIDUsage_Csmr_ALTaskOrProjectManager EQU $018F				; Selector 
kHIDUsage_Csmr_ALLogOrJournalOrTimecard EQU $0190			; Selector 
kHIDUsage_Csmr_ALCheckbookOrFinance EQU	$0191				; Selector 
kHIDUsage_Csmr_ALCalculator		EQU		$0192				; Selector 
kHIDUsage_Csmr_ALAOrVCaptureOrPlayback EQU $0193			; Selector 
kHIDUsage_Csmr_ALLocalMachineBrowser EQU $0194				; Selector 
kHIDUsage_Csmr_ALLANOrWANBrowser EQU	$0195				; Selector 
kHIDUsage_Csmr_ALInternetBrowser EQU	$0196				; Selector 
kHIDUsage_Csmr_ALRemoteNetworkingOrISPConnect EQU $0197		; Selector 
kHIDUsage_Csmr_ALNetworkConference EQU	$0198				; Selector 
kHIDUsage_Csmr_ALNetworkChat	EQU		$0199				; Selector 
kHIDUsage_Csmr_ALTelephonyOrDialer EQU	$019A				; Selector 
kHIDUsage_Csmr_ALLogon			EQU		$019B				; Selector 
kHIDUsage_Csmr_ALLogoff			EQU		$019C				; Selector 
kHIDUsage_Csmr_ALLogonOrLogoff	EQU		$019D				; Selector 
kHIDUsage_Csmr_ALTerminalLockOrScreensaver EQU $019E		; Selector 
kHIDUsage_Csmr_ALControlPanel	EQU		$019F				; Selector 
kHIDUsage_Csmr_ALCommandLineProcessorOrRun EQU $01A0		; Selector 
kHIDUsage_Csmr_ALProcessOrTaskManager EQU $01A1				; Selector 
kHIDUsage_Csmr_AL				EQU		$01A2				; Selector 
kHIDUsage_Csmr_ALNextTaskOrApplication EQU $0143			; Selector 
kHIDUsage_Csmr_ALPreviousTaskOrApplication EQU $01A4		; Selector 
kHIDUsage_Csmr_ALPreemptiveHaltTaskOrApplication EQU $01A5	; Selector 
															; 0x1A6 - 0x1FF Reserved 
kHIDUsage_Csmr_GenericGUIApplicationControls EQU $0200		; Named Array 
kHIDUsage_Csmr_ACNew			EQU		$0201				; Selector 
kHIDUsage_Csmr_ACOpen			EQU		$0202				; Selector 
kHIDUsage_Csmr_ACClose			EQU		$0203				; Selector 
kHIDUsage_Csmr_ACExit			EQU		$0204				; Selector 
kHIDUsage_Csmr_ACMaximize		EQU		$0205				; Selector 
kHIDUsage_Csmr_ACMinimize		EQU		$0206				; Selector 
kHIDUsage_Csmr_ACSave			EQU		$0207				; Selector 
kHIDUsage_Csmr_ACPrint			EQU		$0208				; Selector 
kHIDUsage_Csmr_ACProperties		EQU		$0209				; Selector 
kHIDUsage_Csmr_ACUndo			EQU		$021A				; Selector 
kHIDUsage_Csmr_ACCopy			EQU		$021B				; Selector 
kHIDUsage_Csmr_ACCut			EQU		$021C				; Selector 
kHIDUsage_Csmr_ACPaste			EQU		$021D				; Selector 
kHIDUsage_Csmr_AC				EQU		$021E				; Selector 
kHIDUsage_Csmr_ACFind			EQU		$021F				; Selector 
kHIDUsage_Csmr_ACFindandReplace	EQU		$0220				; Selector 
kHIDUsage_Csmr_ACSearch			EQU		$0221				; Selector 
kHIDUsage_Csmr_ACGoTo			EQU		$0222				; Selector 
kHIDUsage_Csmr_ACHome			EQU		$0223				; Selector 
kHIDUsage_Csmr_ACBack			EQU		$0224				; Selector 
kHIDUsage_Csmr_ACForward		EQU		$0225				; Selector 
kHIDUsage_Csmr_ACStop			EQU		$0226				; Selector 
kHIDUsage_Csmr_ACRefresh		EQU		$0227				; Selector 
kHIDUsage_Csmr_ACPreviousLink	EQU		$0228				; Selector 
kHIDUsage_Csmr_ACNextLink		EQU		$0229				; Selector 
kHIDUsage_Csmr_ACBookmarks		EQU		$022A				; Selector 
kHIDUsage_Csmr_ACHistory		EQU		$022B				; Selector 
kHIDUsage_Csmr_ACSubscriptions	EQU		$022C				; Selector 
kHIDUsage_Csmr_ACZoomIn			EQU		$022D				; Selector 
kHIDUsage_Csmr_ACZoomOut		EQU		$022E				; Selector 
kHIDUsage_Csmr_ACZoom			EQU		$022F				; Selector 
kHIDUsage_Csmr_ACFullScreenView	EQU		$0230				; Selector 
kHIDUsage_Csmr_ACNormalView		EQU		$0231				; Selector 
kHIDUsage_Csmr_ACViewToggle		EQU		$0232				; Selector 
kHIDUsage_Csmr_ACScrollUp		EQU		$0233				; Selector 
kHIDUsage_Csmr_ACScrollDown		EQU		$0234				; Selector 
kHIDUsage_Csmr_ACScroll			EQU		$0235				; Selector 
kHIDUsage_Csmr_ACPanLeft		EQU		$0236				; Selector 
kHIDUsage_Csmr_ACPanRight		EQU		$0237				; Selector 
kHIDUsage_Csmr_ACPan			EQU		$0238				; Selector 
kHIDUsage_Csmr_ACNewWindow		EQU		$0239				; Selector 
kHIDUsage_Csmr_ACTileHorizontally EQU	$023A				; Selector 
kHIDUsage_Csmr_ACTileVertically	EQU		$023B				; Selector 
kHIDUsage_Csmr_ACFormat			EQU		$023C				; Selector 
															; 0x23D - 0xFFFF Reserved 
kHIDUsage_Csmr_Reserved			EQU		$FFFF
;  Digitizer Page (0x0D) 
;  This section provides detailed descriptions of the usages employed by Digitizer Devices. 

kHIDUsage_Dig_Digitizer			EQU		$01					; Application Collection 
kHIDUsage_Dig_Pen				EQU		$02					; Application Collection 
kHIDUsage_Dig_LightPen			EQU		$03					; Application Collection 
kHIDUsage_Dig_TouchScreen		EQU		$04					; Application Collection 
kHIDUsage_Dig_TouchPad			EQU		$05					; Application Collection 
kHIDUsage_Dig_WhiteBoard		EQU		$06					; Application Collection 
kHIDUsage_Dig_CoordinateMeasuringMachine EQU $07			; Application Collection 
kHIDUsage_Dig_3DDigitizer		EQU		$08					; Application Collection 
kHIDUsage_Dig_StereoPlotter		EQU		$09					; Application Collection 
kHIDUsage_Dig_ArticulatedArm	EQU		$0A					; Application Collection 
kHIDUsage_Dig_Armature			EQU		$0B					; Application Collection 
kHIDUsage_Dig_MultiplePointDigitizer EQU $0C				; Application Collection 
kHIDUsage_Dig_FreeSpaceWand		EQU		$0D					; Application Collection 
															; 0x0E - 0x1F Reserved 
kHIDUsage_Dig_Stylus			EQU		$20					; Logical Collection 
kHIDUsage_Dig_Puck				EQU		$21					; Logical Collection 
kHIDUsage_Dig_Finger			EQU		$22					; Logical Collection 
															; 0x23 - 0x2F Reserved 
kHIDUsage_Dig_TipPressure		EQU		$30					; Dynamic Value 
kHIDUsage_Dig_BarrelPressure	EQU		$31					; Dynamic Value 
kHIDUsage_Dig_InRange			EQU		$32					; Momentary Control 
kHIDUsage_Dig_Touch				EQU		$33					; Momentary Control 
kHIDUsage_Dig_Untouch			EQU		$34					; One-Shot Control 
kHIDUsage_Dig_Tap				EQU		$35					; One-Shot Control 
kHIDUsage_Dig_Quality			EQU		$36					; Dynamic Value 
kHIDUsage_Dig_DataValid			EQU		$37					; Momentary Control 
kHIDUsage_Dig_TransducerIndex	EQU		$38					; Dynamic Value 
kHIDUsage_Dig_TabletFunctionKeys EQU	$39					; Logical Collection 
kHIDUsage_Dig_ProgramChangeKeys	EQU		$3A					; Logical Collection 
kHIDUsage_Dig_BatteryStrength	EQU		$3B					; Dynamic Value 
kHIDUsage_Dig_Invert			EQU		$3C					; Momentary Control 
kHIDUsage_Dig_XTilt				EQU		$3D					; Dynamic Value 
kHIDUsage_Dig_YTilt				EQU		$3E					; Dynamic Value 
kHIDUsage_Dig_Azimuth			EQU		$3F					; Dynamic Value 
kHIDUsage_Dig_Altitude			EQU		$40					; Dynamic Value 
kHIDUsage_Dig_Twist				EQU		$41					; Dynamic Value 
kHIDUsage_Dig_TipSwitch			EQU		$42					; Momentary Control 
kHIDUsage_Dig_SecondaryTipSwitch EQU	$43					; Momentary Control 
kHIDUsage_Dig_BarrelSwitch		EQU		$44					; Momentary Control 
kHIDUsage_Dig_Eraser			EQU		$45					; Momentary Control 
kHIDUsage_Dig_TabletPick		EQU		$46					; Momentary Control 
															; 0x47 - 0xFFFF Reserved 
kHIDUsage_Dig_Reserved			EQU		$FFFF
;  AlphanumericDisplay Page (0x14) 
;  The Alphanumeric Display page is intended for use by simple alphanumeric displays that are used on consumer devices. 

kHIDUsage_AD_AlphanumericDisplay EQU	$01					; Application Collection 
															; 0x02 - 0x1F Reserved 
kHIDUsage_AD_DisplayAttributesReport EQU $20				; Logical Collection 
kHIDUsage_AD_ASCIICharacterSet	EQU		$21					; Static Flag 
kHIDUsage_AD_DataReadBack		EQU		$22					; Static Flag 
kHIDUsage_AD_FontReadBack		EQU		$23					; Static Flag 
kHIDUsage_AD_DisplayControlReport EQU	$24					; Logical Collection 
kHIDUsage_AD_ClearDisplay		EQU		$25					; Dynamic Flag 
kHIDUsage_AD_DisplayEnable		EQU		$26					; Dynamic Flag 
kHIDUsage_AD_ScreenSaverDelay	EQU		$27					; Static Value 
kHIDUsage_AD_ScreenSaverEnable	EQU		$28					; Dynamic Flag 
kHIDUsage_AD_VerticalScroll		EQU		$29					; Static Flag 
kHIDUsage_AD_HorizontalScroll	EQU		$2A					; Static Flag 
kHIDUsage_AD_CharacterReport	EQU		$2B					; Logical Collection 
kHIDUsage_AD_DisplayData		EQU		$2C					; Dynamic Value 
kHIDUsage_AD_DisplayStatus		EQU		$2D					; Logical Collection 
kHIDUsage_AD_StatNotReady		EQU		$2E					; Selector 
kHIDUsage_AD_StatReady			EQU		$2F					; Selector 
kHIDUsage_AD_ErrNotaloadablecharacter EQU $30				; Selector 
kHIDUsage_AD_ErrFontdatacannotberead EQU $31				; Selector 
kHIDUsage_AD_CursorPositionReport EQU	$32					; Logical Collection 
kHIDUsage_AD_Row				EQU		$33					; Dynamic Value 
kHIDUsage_AD_Column				EQU		$34					; Dynamic Value 
kHIDUsage_AD_Rows				EQU		$35					; Static Value 
kHIDUsage_AD_Columns			EQU		$36					; Static Value 
kHIDUsage_AD_CursorPixelPositioning EQU	$37					; Static Flag 
kHIDUsage_AD_CursorMode			EQU		$38					; Dynamic Flag 
kHIDUsage_AD_CursorEnable		EQU		$39					; Dynamic Flag 
kHIDUsage_AD_CursorBlink		EQU		$3A					; Dynamic Flag 
kHIDUsage_AD_FontReport			EQU		$3B					; Logical Collection 
kHIDUsage_AD_FontData			EQU		$3C					; Buffered Byte 
kHIDUsage_AD_CharacterWidth		EQU		$3D					; Static Value 
kHIDUsage_AD_CharacterHeight	EQU		$3E					; Static Value 
kHIDUsage_AD_CharacterSpacingHorizontal EQU $3F				; Static Value 
kHIDUsage_AD_CharacterSpacingVertical EQU $40				; Static Value 
kHIDUsage_AD_UnicodeCharacterSet EQU	$41					; Static Flag 
															; 0x42 - 0xFFFF Reserved 
kHIDUsage_AD_Reserved			EQU		$FFFF
	ENDIF ; __HID__ 


;
;    File:       HTMLRendering.a
;
;    Contains:   HTML Rendering Library Interfaces.
;
;    Version:    Technology: 1.0
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1999-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__HTMLRENDERING__') = 'UNDEFINED' THEN
__HTMLRENDERING__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__QUICKDRAW__') = 'UNDEFINED' THEN
	include 'Quickdraw.a'
	ENDIF
	IF &TYPE('__EVENTS__') = 'UNDEFINED' THEN
	include 'Events.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF
	IF &TYPE('__CODEFRAGMENTS__') = 'UNDEFINED' THEN
	include 'CodeFragments.a'
	ENDIF
	IF &TYPE('__CONTROLS__') = 'UNDEFINED' THEN
	include 'Controls.a'
	ENDIF
	IF &TYPE('__CFDATA__') = 'UNDEFINED' THEN
	include 'CFData.a'
	ENDIF
	IF &TYPE('__CFSTRING__') = 'UNDEFINED' THEN
	include 'CFString.a'
	ENDIF
	IF &TYPE('__CFURL__') = 'UNDEFINED' THEN
	include 'CFURL.a'
	ENDIF



; *  HRGetHTMLRenderingLibVersion()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetHTMLRenderingLibVersion(NumVersion *returnVers)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetHTMLRenderingLibVersion
	ENDIF

	IF TARGET_RT_MAC_CFM THEN
	ELSEIF TARGET_RT_MAC_MACHO THEN
	ENDIF	; 

kHRRendererHTML32Type			EQU		'ht32'				; HTML 3.2 


; *  HRNewReference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRNewReference(HRReference *hrRef, OSType rendererType, GrafPtr grafPtr)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRNewReference
	ENDIF


; *  HRNewReferenceInWindow()
; *  
; *  Discussion:
; *    Use this API from  a Carbon App. All the contrrols created by the
; *    HTML renderer will be embedded in the root control of the window
; *    specified by the window ref.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Pointer to the new reference created and returned by the
; *      renderer.
; *    
; *    rendererType:
; *      Type of the renderer e.g. kHRRendererHTML32Type. Only this type
; *      is supported for now.
; *    
; *    inWindowRef:
; *      Reference to the window for which rendering area will be
; *      specified.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRNewReferenceInWindow(HRReference *hrRef, OSType rendererType, WindowRef inWindowRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRNewReferenceInWindow
	ENDIF


; *  HRDisposeReference()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRDisposeReference(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRDisposeReference
	ENDIF



; *  HRFreeMemory()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal SInt32 HRFreeMemory(Size inBytesNeeded)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRFreeMemory
	ENDIF


;  System level notifications 

; *  HRScreenConfigurationChanged()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRScreenConfigurationChanged(void)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRScreenConfigurationChanged
	ENDIF


; *  HRIsHREvent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal Boolean HRIsHREvent(const EventRecord *eventRecord)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRIsHREvent
	ENDIF


;  Drawing 

; *  HRSetGrafPtr()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRSetGrafPtr(HRReference hrRef, GrafPtr grafPtr)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRSetGrafPtr
	ENDIF


; *  HRSetWindowRef()
; *  
; *  Discussion:
; *    Use this API from  a Carbon App. All the contrrols created by the
; *    HTML renderer will be moved in the root control of the window
; *    specified by the window ref. All the drawing will now happen in
; *    the specified window.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    windowRef:
; *      new Reference to the window to be attached to the above hrRef.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRSetWindowRef(HRReference hrRef, WindowRef windowRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRSetWindowRef
	ENDIF


; *  HRSetEmbeddingControl()
; *  
; *  Discussion:
; *    Use this API to tell the HTML Renderer to embed all the controls
; *    it has created so far and the new controls it creates after this
; *    call to be embedded in the given control. Useful if you wish to
; *    have an HTML displayed with in your dialog. e.g. Software Update
; *    needs this.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    controlRef:
; *      all the future controls created by renderer are embeded in this
; *      controlRef.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRSetEmbeddingControl(HRReference hrRef, ControlRef controlRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRSetEmbeddingControl
	ENDIF


; *  HRActivate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRActivate(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRActivate
	ENDIF


; *  HRDeactivate()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRDeactivate(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRDeactivate
	ENDIF


; *  HRDraw()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRDraw(HRReference hrRef, RgnHandle updateRgnH)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRDraw
	ENDIF


; *  HRDrawInPort()
; *  
; *  Discussion:
; *    Use this API from  a Carbon App.  All the drawing will now happen
; *    in the specified port. This is the API you want to use to draw in
; *    an offscreen port, for example when printing. You could also use
; *    this API to draw in an on screen port.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    updateRgnH:
; *      Region to be updated.
; *    
; *    grafPtr:
; *      A graf pointer to render HTML into.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRDrawInPort(HRReference hrRef, RgnHandle updateRgnH, CGrafPtr grafPtr)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRDrawInPort
	ENDIF


; *  HRSetRenderingRect()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRSetRenderingRect(HRReference hrRef, const Rect *renderingRect)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRSetRenderingRect
	ENDIF


; *  HRGetRenderedImageSize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetRenderedImageSize(HRReference hrRef, Point *renderingSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetRenderedImageSize
	ENDIF


; *  HRGetRenderedImageSize32()
; *  
; *  Discussion:
; *    Use this API when the rendered image could have coordinates
; *    larger than what SInt16 can hold.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    height:
; *      Height of the image is returned in this parameter.
; *    
; *    width:
; *      Width of the image is returned in this parameter.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetRenderedImageSize32(HRReference hrRef, UInt32 *height, UInt32 *width)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetRenderedImageSize32
	ENDIF


; *  HRScrollToLocation()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRScrollToLocation(HRReference hrRef, Point *location)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRScrollToLocation
	ENDIF


; *  HRScrollToImageLocation32()
; *  
; *  Discussion:
; *    Use this API when specifying location to scroll to. Location is
; *    specified in image space.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    h:
; *      Horizontal location.
; *    
; *    v:
; *      Vertical location.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRScrollToImageLocation32(HRReference hrRef, SInt32 h, SInt32 v)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRScrollToImageLocation32
	ENDIF


; *  HRForceQuickdraw()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRForceQuickdraw(HRReference hrRef, Boolean forceQuickdraw)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRForceQuickdraw
	ENDIF


; typedef SInt16						HRScrollbarState
eHRScrollbarOn					EQU		0
eHRScrollbarOff					EQU		1
eHRScrollbarAuto				EQU		2

; *  HRSetScrollbarState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRSetScrollbarState(HRReference hrRef, HRScrollbarState hScrollbarState, HRScrollbarState vScrollbarState)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRSetScrollbarState
	ENDIF


; *  HRSetDrawBorder()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRSetDrawBorder(HRReference hrRef, Boolean drawBorder)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRSetDrawBorder
	ENDIF


; *  HRSetGrowboxCutout()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRSetGrowboxCutout(HRReference hrRef, Boolean allowCutout)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRSetGrowboxCutout
	ENDIF

;  Navigation 

; *  HRGoToFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToFile(HRReference hrRef, const FSSpec *fsspec, Boolean addToHistory, Boolean forceRefresh)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToFile
	ENDIF


; *  HRGoToURL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToURL(HRReference hrRef, const char *url, Boolean addToHistory, Boolean forceRefresh)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToURL
	ENDIF


; *  HRGoToAnchor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToAnchor(HRReference hrRef, const char *anchorName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToAnchor
	ENDIF


; *  HRGoToPtr()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToPtr(HRReference hrRef, char *buffer, UInt32 bufferSize, Boolean addToHistory, Boolean forceRefresh)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToPtr
	ENDIF


; *  HRGoToFSRef()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGoToFile,
; *    HRGoToURL, HRGoToAnchor and HRGoToPtr. These APIs are same in
; *    behavior with their old counter parts. The only difference is
; *    that they take FSRef, CFURLRef, CFString, and CFData as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    fref:
; *      Reference to HTML file that is be opened and rendered.
; *    
; *    addToHistory:
; *      true if this file URL should be added to history.
; *    
; *    forceRefresh:
; *      true if the rendering area should be refreshed.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToFSRef(HRReference hrRef, const FSRef *fref, Boolean addToHistory, Boolean forceRefresh)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToFSRef
	ENDIF


; *  HRGoToCFURL()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGoToFile,
; *    HRGoToURL, HRGoToAnchor and HRGoToPtr. These APIs are same in
; *    behavior with their old counter parts. The only difference is
; *    that they take FSRef, CFURLRef, CFString, and CFData as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    url:
; *      Reference to url that is be rendered.
; *    
; *    addToHistory:
; *      true if this URL should be added to history.
; *    
; *    forceRefresh:
; *      true if the rendering area should be refreshed.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToCFURL(HRReference hrRef, CFURLRef url, Boolean addToHistory, Boolean forceRefresh)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToCFURL
	ENDIF


; *  HRGoToAnchorCFString()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGoToFile,
; *    HRGoToURL, HRGoToAnchor and HRGoToPtr. These APIs are same in
; *    behavior with their old counter parts. The only difference is
; *    that they take FSRef, CFURLRef, CFString, and CFData as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    anchorName:
; *      Name of the anchor to be displayed.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToAnchorCFString(HRReference hrRef, CFStringRef anchorName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToAnchorCFString
	ENDIF


; *  HRGoToData()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGoToFile,
; *    HRGoToURL, HRGoToAnchor and HRGoToPtr. These APIs are same in
; *    behavior with their old counter parts. The only difference is
; *    that they take FSRef, CFURLRef, CFString, and CFData as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    data:
; *      Reference to data in the memory that is be rendered.
; *    
; *    addToHistory:
; *      true if this file URL should be added to history.
; *    
; *    forceRefresh:
; *      true if the rendering area should be refreshed.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGoToData(HRReference hrRef, CFDataRef data, Boolean addToHistory, Boolean forceRefresh)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGoToData
	ENDIF

;  Accessors 
;  either file url or url of <base> tag 

; *  HRGetRootURL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetRootURL(HRReference hrRef, Handle rootURLH)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetRootURL
	ENDIF

;  url of <base> tag 

; *  HRGetBaseURL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetBaseURL(HRReference hrRef, Handle baseURLH)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetBaseURL
	ENDIF

;  file url 

; *  HRGetHTMLURL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetHTMLURL(HRReference hrRef, Handle HTMLURLH)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetHTMLURL
	ENDIF


; *  HRGetTitle()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetTitle(HRReference hrRef, StringPtr title)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetTitle
	ENDIF


; *  HRGetHTMLFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetHTMLFile(HRReference hrRef, FSSpec *fsspec)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetHTMLFile
	ENDIF



; *  HRGetRootURLAsCFString()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGetRootURL,
; *    HRGetBaseURL, HRGetHTMLURL, HRGetTitle and HRGetHTMLFile. These
; *    APIs are same in behavior with their old counter parts. The only
; *    difference is that they take CFString, CFURLRef, and FSRef as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    rootString:
; *      Get CFString equivalent for the root url.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetRootURLAsCFString(HRReference hrRef, CFStringRef *rootString)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetRootURLAsCFString
	ENDIF


; *  HRGetBaseURLAsCFString()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGetRootURL,
; *    HRGetBaseURL, HRGetHTMLURL, HRGetTitle and HRGetHTMLFile. These
; *    APIs are same in behavior with their old counter parts. The only
; *    difference is that they take CFString, CFURLRef, and FSRef as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    baseString:
; *      Get CFString equivalent for the base url.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetBaseURLAsCFString(HRReference hrRef, CFStringRef *baseString)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetBaseURLAsCFString
	ENDIF


; *  HRGetHTMLURLAsCFURL()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGetRootURL,
; *    HRGetBaseURL, HRGetHTMLURL, HRGetTitle and HRGetHTMLFile. These
; *    APIs are same in behavior with their old counter parts. The only
; *    difference is that they take CFString, CFURLRef, and FSRef as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    theURL:
; *      Get currently displayed HTML as a CFURL.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetHTMLURLAsCFURL(HRReference hrRef, CFURLRef *theURL)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetHTMLURLAsCFURL
	ENDIF


; *  HRGetTitleAsCFString()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGetRootURL,
; *    HRGetBaseURL, HRGetHTMLURL, HRGetTitle and HRGetHTMLFile. These
; *    APIs are same in behavior with their old counter parts. The only
; *    difference is that they take CFString, CFURLRef, and FSRef as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    title:
; *      Get title of the currently displayed HTML as a CFString.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetTitleAsCFString(HRReference hrRef, CFStringRef *title)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetTitleAsCFString
	ENDIF


; *  HRGetHTMLFileAsFSRef()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using HRGetRootURL,
; *    HRGetBaseURL, HRGetHTMLURL, HRGetTitle and HRGetHTMLFile. These
; *    APIs are same in behavior with their old counter parts. The only
; *    difference is that they take CFString, CFURLRef, and FSRef as
; *    parameters.
; *  
; *  Parameters:
; *    
; *    hrRef:
; *      Reference to the renderer object.
; *    
; *    fref:
; *      Get currently displayed HTML as a FSRef.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRGetHTMLFileAsFSRef(HRReference hrRef, FSRef *fref)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRGetHTMLFileAsFSRef
	ENDIF

;  Utilities 

; *  HRUtilCreateFullURL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRUtilCreateFullURL(const char *rootURL, const char *linkURL, Handle fullURLH)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUtilCreateFullURL
	ENDIF


; *  HRUtilGetFSSpecFromURL()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRUtilGetFSSpecFromURL(const char *rootURL, const char *linkURL, FSSpec *destSpec)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUtilGetFSSpecFromURL
	ENDIF

;  urlHandle should be valid on input 

; *  HRUtilGetURLFromFSSpec()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRUtilGetURLFromFSSpec(const FSSpec *fsspec, Handle urlHandle)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUtilGetURLFromFSSpec
	ENDIF



; *  HRUtilCreateFullCFURL()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using
; *    HRUtilCreateFullURL, HRUtilGetFSSpecFromURL,
; *    HRUtilGetURLFromFSSpec. These APIs are same in behavior with
; *    their old counter parts. The only difference is that they take
; *    CFURLRef, and FSRef as parameters.
; *  
; *  Parameters:
; *    
; *    rootString:
; *      a CFString for the root.
; *    
; *    linkString:
; *      a CFString for a partial link.
; *    
; *    url:
; *      Fully qualified URL is returned after attaching a link string
; *      to the root.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRUtilCreateFullCFURL(CFStringRef rootString, CFStringRef linkString, CFURLRef *url)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUtilCreateFullCFURL
	ENDIF


; *  HRUtilGetFSRefFromURL()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using
; *    HRUtilCreateFullURL, HRUtilGetFSSpecFromURL,
; *    HRUtilGetURLFromFSSpec. These APIs are same in behavior with
; *    their old counter parts. The only difference is that they take
; *    CFURLRef, and FSRef as parameters.
; *  
; *  Parameters:
; *    
; *    rootString:
; *      a CFString for the root.
; *    
; *    linkString:
; *      a CFString for a partial link.
; *    
; *    destRef:
; *      File reference is returned for the complete path created after
; *      attaching link string to the root. If File does not exist,
; *      fnfErr is returned as a function result.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRUtilGetFSRefFromURL(CFStringRef rootString, CFStringRef linkString, FSRef *destRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUtilGetFSRefFromURL
	ENDIF


; *  HRUtilGetURLFromFSRef()
; *  
; *  Discussion:
; *    Use these API from  a Carbon App instead of using
; *    HRUtilCreateFullURL, HRUtilGetFSSpecFromURL,
; *    HRUtilGetURLFromFSSpec. These APIs are same in behavior with
; *    their old counter parts. The only difference is that they take
; *    CFURLRef, and FSRef as parameters.
; *  
; *  Parameters:
; *    
; *    fileRef:
; *      Refernce to a file whose URL is desired.
; *    
; *    url:
; *      a fully qualified URL is returned in this parameter. The
; *      returned URL gives the path of the file specified in the above
; *      parameter.
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSStatus HRUtilGetURLFromFSRef(const FSRef *fileRef, CFURLRef *url)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUtilGetURLFromFSRef
	ENDIF

; 
;    Visited links
;
;    If you register a function here, it will be called to determine
;    whether or not the given URL has been visited. It should return
;    true if the URL has been visited.
;    
;    In addition to the URLs that the application may add to the list
;    of visited links, it should also add URLs that the user clicks
;    on. These URLs can be caught by the "add URL to history" callback
;    below.
; 


; *  HRRegisterWasURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRRegisterWasURLVisitedUPP(HRWasURLVisitedUPP inWasURLVisitedUPP, HRReference hrRef, void *inRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRRegisterWasURLVisitedUPP
	ENDIF


; *  HRUnregisterWasURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRUnregisterWasURLVisitedUPP(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUnregisterWasURLVisitedUPP
	ENDIF

; 
;    Use these API from  a Carbon App instead of using HRRegisterWasURLVisitedUPP, HRUnregisterWasURLVisitedUPP. 
;    These APIs are same in behavior with their old counter parts. The only difference is that they take 
;    CFURLRef as parameters.
;        
;


; *  HRRegisterWasCFURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRRegisterWasCFURLVisitedUPP(HRWasCFURLVisitedUPP inWasCFURLVisitedUPP, HRReference hrRef, void *inRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRRegisterWasCFURLVisitedUPP
	ENDIF


; *  HRUnregisterWasCFURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRUnregisterWasCFURLVisitedUPP(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUnregisterWasCFURLVisitedUPP
	ENDIF


; 
;    New URL
;
;    If you register a function here, it will be called every time
;    the renderer is going to display a new URL. A few examples of how
;    you might use this include...
;    
;        (a) maintaining a history of URLs
;        (b) maintainging a list of visited links
;        (c) setting a window title based on the new URL
;


; *  HRRegisterNewURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRRegisterNewURLUPP(HRNewURLUPP inNewURLUPP, HRReference hrRef, void *inRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRRegisterNewURLUPP
	ENDIF


; *  HRUnregisterNewURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRUnregisterNewURLUPP(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUnregisterNewURLUPP
	ENDIF


;  
;    Use these API from  a Carbon App instead of using HRRegisterNewURLUPP, HRUnregisterNewURLUPP. 
;    These APIs are same in behavior with their old counter parts. The only difference is that they take 
;    CFURLRef as parameters.
;


; *  HRRegisterNewCFURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRRegisterNewCFURLUPP(HRNewCFURLUPP inURLUPP, HRReference hrRef, void *inRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRRegisterNewCFURLUPP
	ENDIF


; *  HRUnregisterNewCFURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRUnregisterNewCFURLUPP(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUnregisterNewCFURLUPP
	ENDIF




; 
;    URL to FSSpec function
;
;    If you register a function here, it will be called every time
;    the renderer is going to locate a file. The function will be
;    passed an enum indicating the type of file being asked for.
; 


; typedef UInt16						URLSourceType
kHRLookingForHTMLSource			EQU		1
kHRLookingForImage				EQU		2
kHRLookingForEmbedded			EQU		3
kHRLookingForImageMap			EQU		4
kHRLookingForFrame				EQU		5

; *  HRRegisterURLToFSSpecUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRRegisterURLToFSSpecUPP(HRURLToFSSpecUPP inURLToFSSpecUPP, HRReference hrRef, void *inRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRRegisterURLToFSSpecUPP
	ENDIF


; *  HRUnregisterURLToFSSpecUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in HTMLRenderingLib 1.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRUnregisterURLToFSSpecUPP(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUnregisterURLToFSSpecUPP
	ENDIF


;  
;    Use these API from  a Carbon App instead of using HRRegisterURLToFSSpecUPP, HRUnregisterURLToFSSpecUPP. 
;    These APIs are same in behavior with their old counter parts. The only difference is that they take 
;    FSRef as parameters.
;


; *  HRRegisterURLToFSRefUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRRegisterURLToFSRefUPP(HRURLToFSRefUPP inURLToFSRefUPP, HRReference hrRef, void *inRefCon)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRRegisterURLToFSRefUPP
	ENDIF


; *  HRUnregisterURLToFSRefUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void HRUnregisterURLToFSRefUPP(HRReference hrRef)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION HRUnregisterURLToFSRefUPP
	ENDIF


; *  NewHRWasURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  NewHRWasCFURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  NewHRNewURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  NewHRNewCFURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  NewHRURLToFSSpecUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  NewHRURLToFSRefUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeHRWasURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeHRWasCFURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeHRNewURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeHRNewCFURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeHRURLToFSSpecUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeHRURLToFSRefUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeHRWasURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeHRWasCFURLVisitedUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeHRNewURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeHRNewCFURLUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeHRURLToFSSpecUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeHRURLToFSRefUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.3 and later
; *    Mac OS X:         in version 10.0 or later
; 

	ENDIF ; __HTMLRENDERING__ 


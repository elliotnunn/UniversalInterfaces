;
;    File:       Keyboards.a
;
;    Contains:   Keyboard API.
;
;    Version:    Technology: Keyboard 1.0
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1997-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__KEYBOARDS__') = 'UNDEFINED' THEN
__KEYBOARDS__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF

; ——————————————————————————————————————————————————————————————————————————————————
;  Keyboard API constants                                                           
; ——————————————————————————————————————————————————————————————————————————————————
;  Keyboard API Trap Number. Should be moved to Traps.i 

_KeyboardDispatch				EQU		$AA7A
;  Gestalt selector and values for the Keyboard API 

gestaltKeyboardsAttr			EQU		'kbds'
gestaltKBPS2Keyboards			EQU		1
gestaltKBPS2SetIDToAny			EQU		2
gestaltKBPS2SetTranslationTable	EQU		4
;  Keyboard API Error Codes 

;   I stole the range blow from the empty space in the Allocation project but should
;   be updated to the officially registered range.



errKBPS2KeyboardNotAvailable	EQU		-30850
errKBIlligalParameters			EQU		-30851
errKBFailSettingID				EQU		-30852
errKBFailSettingTranslationTable EQU	-30853
errKBFailWritePreference		EQU		-30854

;  Keyboard HW Layout Types 

kKeyboardJIS					EQU		'JIS '
kKeyboardANSI					EQU		'ANSI'
kKeyboardISO					EQU		'ISO '
kKeyboardUnknown				EQU		$3F3F3F3F			; '????'

; ——————————————————————————————————————————————————————————————————————————————————
;  Keyboard API types                                                               
; ——————————————————————————————————————————————————————————————————————————————————



; ——————————————————————————————————————————————————————————————————————————————————
;  Keyboard API routines                                                            
; ——————————————————————————————————————————————————————————————————————————————————

	IF CALL_NOT_IN_CARBON THEN

; *  KBInitialize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr KBInitialize(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBInitialize
			move.w              #$0000,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBInitialize
	ENDIF


; *  KBSetupPS2Keyboard()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr KBSetupPS2Keyboard(SInt16 keyboardType, SInt8 *alternativeTable)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBSetupPS2Keyboard
			move.w              #$0001,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBSetupPS2Keyboard
	ENDIF


; *  KBGetPS2KeyboardID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr KBGetPS2KeyboardID(SInt16 *keyboardType)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBGetPS2KeyboardID
			move.w              #$0002,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBGetPS2KeyboardID
	ENDIF


; *  KBIsPS2KeyboardConnected()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Boolean KBIsPS2KeyboardConnected(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBIsPS2KeyboardConnected
			move.w              #$0003,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBIsPS2KeyboardConnected
	ENDIF


; *  KBIsPS2KeyboardEnabled()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal Boolean KBIsPS2KeyboardEnabled(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBIsPS2KeyboardEnabled
			move.w              #$0004,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBIsPS2KeyboardEnabled
	ENDIF


; *  KBGetPS2KeyboardAttributes()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal SInt32 KBGetPS2KeyboardAttributes(void )
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBGetPS2KeyboardAttributes
			move.w              #$0005,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBGetPS2KeyboardAttributes
	ENDIF


; *  KBSetKCAPForPS2Keyboard()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr KBSetKCAPForPS2Keyboard(Handle kcapHandle)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBSetKCAPForPS2Keyboard
			move.w              #$0006,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBSetKCAPForPS2Keyboard
	ENDIF


; *  KBSetupPS2KeyboardFromLayoutType()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr KBSetupPS2KeyboardFromLayoutType(OSType layoutType)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBSetupPS2KeyboardFromLayoutType
			move.w              #$0008,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBSetupPS2KeyboardFromLayoutType
	ENDIF


; *  KBGetPS2KeyboardLayoutType()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr KBGetPS2KeyboardLayoutType(OSType *layoutType)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBGetPS2KeyboardLayoutType
			move.w              #$0009,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBGetPS2KeyboardLayoutType
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON

; *  KBGetLayoutType()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in KeyboardsLib 1.0 and later
; *    CarbonLib:        not available in CarbonLib 1.x, is availble on Mac OS X version 10.0 or later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSType KBGetLayoutType(SInt16 keyboardType)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_KBGetLayoutType
			move.w              #$0007,D0
			dc.w            	$AA7A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION KBGetLayoutType
	ENDIF


	ENDIF ; __KEYBOARDS__ 


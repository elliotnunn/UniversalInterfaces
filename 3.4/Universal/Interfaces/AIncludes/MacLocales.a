;
;    File:       MacLocales.a
;
;    Contains:   Types & prototypes for locale functions
;
;    Version:    Technology: Mac OS 9.0
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1998-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__MACLOCALES__') = 'UNDEFINED' THEN
__MACLOCALES__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__MACERRORS__') = 'UNDEFINED' THEN
	include 'MacErrors.a'
	ENDIF



;   -------------------------------------------------------------------------------------------------
;   TYPES & CONSTANTS
;   -------------------------------------------------------------------------------------------------





; typedef UInt32 						LocalePartMask


															; bit set requests the following:
kLocaleLanguageMask				EQU		$00000001			; ISO 639-1 or -2 language code (2 or 3 letters)
kLocaleLanguageVariantMask		EQU		$00000002			; custom string for language variant
kLocaleScriptMask				EQU		$00000004			; ISO 15924 script code (2 letters)
kLocaleScriptVariantMask		EQU		$00000008			; custom string for script variant
kLocaleRegionMask				EQU		$00000010			; ISO 3166 country/region code (2 letters)
kLocaleRegionVariantMask		EQU		$00000020			; custom string for region variant
kLocaleAllPartsMask				EQU		$0000003F			; all of the above
; typedef FourCharCode 					LocaleOperationClass

;  constants for LocaleOperationClass are in UnicodeUtilities interfaces
; typedef FourCharCode 					LocaleOperationVariant

LocaleAndVariant		RECORD 0
locale					 ds.l	1				; offset: $0 (0)
opVariant				 ds.l	1				; offset: $4 (4)
sizeof					 EQU *					; size:   $8 (8)
						ENDR
; typedef UInt32 						LocaleNameMask


															; bit set requests the following:
kLocaleNameMask					EQU		$00000001			; name of locale
kLocaleOperationVariantNameMask	EQU		$00000002			; name of LocaleOperationVariant
kLocaleAndVariantNameMask		EQU		$00000003			; all of the above

;   -------------------------------------------------------------------------------------------------
;   FUNCTION PROTOTYPES
;   -------------------------------------------------------------------------------------------------



;  Convert to or from LocaleRefs (and related utilities)


; *  LocaleRefFromLangOrRegionCode()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleRefFromLangOrRegionCode(LangCode lang, RegionCode region, LocaleRef *locale)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleRefFromLangOrRegionCode
	ENDIF


; *  LocaleRefFromLocaleString()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleRefFromLocaleString(const char localeString[], LocaleRef *locale)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleRefFromLocaleString
	ENDIF


; *  LocaleRefGetPartString()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleRefGetPartString(LocaleRef locale, LocalePartMask partMask, ByteCount maxStringLen, char partString[])
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleRefGetPartString
	ENDIF


; *  LocaleStringToLangAndRegionCodes()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 9.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleStringToLangAndRegionCodes(const char localeString[], LangCode *lang, RegionCode *region)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleStringToLangAndRegionCodes
	ENDIF

;  Enumerate locales for a LocaleOperationClass 

; *  LocaleOperationCountLocales()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleOperationCountLocales(LocaleOperationClass opClass, ItemCount *localeCount)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleOperationCountLocales
	ENDIF


; *  LocaleOperationGetLocales()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleOperationGetLocales(LocaleOperationClass opClass, ItemCount maxLocaleCount, ItemCount *actualLocaleCount, LocaleAndVariant localeVariantList[])
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleOperationGetLocales
	ENDIF

;  Get names for a locale (or a region's language)


; *  LocaleGetName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleGetName(LocaleRef locale, LocaleOperationVariant opVariant, LocaleNameMask nameMask, LocaleRef displayLocale, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[])
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleGetName
	ENDIF


; *  LocaleCountNames()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleCountNames(LocaleRef locale, LocaleOperationVariant opVariant, LocaleNameMask nameMask, ItemCount *nameCount)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleCountNames
	ENDIF


; *  LocaleGetIndName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleGetIndName(LocaleRef locale, LocaleOperationVariant opVariant, LocaleNameMask nameMask, ItemCount nameIndex, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[], LocaleRef *displayLocale)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleGetIndName
	ENDIF


; *  LocaleGetRegionLanguageName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 9.0 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleGetRegionLanguageName(RegionCode region, Str255 languageName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleGetRegionLanguageName
	ENDIF

;  Get names for a LocaleOperationClass

; *  LocaleOperationGetName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleOperationGetName(LocaleOperationClass opClass, LocaleRef displayLocale, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[])
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleOperationGetName
	ENDIF


; *  LocaleOperationCountNames()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleOperationCountNames(LocaleOperationClass opClass, ItemCount *nameCount)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleOperationCountNames
	ENDIF


; *  LocaleOperationGetIndName()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in LocalesLib 8.6 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; extern OSStatus LocaleOperationGetIndName(LocaleOperationClass opClass, ItemCount nameIndex, UniCharCount maxNameLen, UniCharCount *actualNameLen, UniChar displayName[], LocaleRef *displayLocale)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION LocaleOperationGetIndName
	ENDIF

	ENDIF ; __MACLOCALES__ 


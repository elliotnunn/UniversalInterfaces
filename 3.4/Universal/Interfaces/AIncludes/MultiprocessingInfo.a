;
;    File:       MultiprocessingInfo.a
;
;    Contains:   Multiprocessing Information interfaces
;
;    Version:    Technology: Multiprocessing Information API version 2.2
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1995-2001 DayStar Digital, Inc.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;


;   ==========================================================================================================================
;   *** WARNING: You must properly check the availability of MP services before calling them!
;   See the section titled "Checking API Availability".
;   ==========================================================================================================================




	IF &TYPE('__MULTIPROCESSINGINFO__') = 'UNDEFINED' THEN
__MULTIPROCESSINGINFO__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__MULTIPROCESSING__') = 'UNDEFINED' THEN
	include 'Multiprocessing.a'
	ENDIF


;   ==========================================================================================================================
;   This is the header file for version 2.3 of the Mac OS multiprocessing information support. 
;   ==========================================================================================================================





;   ==========================================================================================================================
;   The following services are new in version 2.1:
;    MPGetNextTaskID
;    MPGetNextCpuID
;   ==========================================================================================================================




;   ==========================================================================================================================
;   The following services are new in version 2.2:
;    MPGetPageSizeClasses
;    MPGetPageSize
;    MPGetNextAreaID
;   ==========================================================================================================================




;   ==========================================================================================================================
;   The following services are new in version 2.3:
;    MPGetNextCoherenceID
;    MPGetNextProcessID
;    MPGetNextAddressSpaceID
;    MPGetNextQueueID
;    MPGetNextSemaphoreID
;    MPGetNextCriticalRegionID
;    MPGetNextTimerID
;    MPGetNextEventID
;    MPGetNextNotificationID
;    MPGetNextConsoleID
;   ==========================================================================================================================






;   §
;   ==========================================================================================================================
;   Page size Services
;   ==================



	IF CALL_NOT_IN_CARBON THEN

; *  MPGetPageSizeClasses()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern MPPageSizeClass MPGetPageSizeClasses(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetPageSizeClasses
	ENDIF

;  The number of page size classes, 1 to n.
	ENDIF	; CALL_NOT_IN_CARBON
;  -------------------------------------------------------------------------------------------
	IF CALL_NOT_IN_CARBON THEN

; *  MPGetPageSize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern ByteCount MPGetPageSize(MPPageSizeClass pageClass)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetPageSize
	ENDIF

;  The page size in bytes.
	ENDIF	; CALL_NOT_IN_CARBON


;   §
;   ==========================================================================================================================
;   ID Iterator Services
;   ==========================



	IF CALL_NOT_IN_CARBON THEN

; *  MPGetNextCoherenceID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextCoherenceID(MPCoherenceID *coherenceID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextCoherenceID
	ENDIF


; *  MPGetNextCpuID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextCpuID(MPCoherenceID owningCoherenceID, MPCpuID *cpuID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextCpuID
	ENDIF


; *  MPGetNextProcessID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextProcessID(MPProcessID *processID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextProcessID
	ENDIF


; *  MPGetNextAddressSpaceID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextAddressSpaceID(MPProcessID owningProcessID, MPAddressSpaceID *addressSpaceID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextAddressSpaceID
	ENDIF


; *  MPGetNextTaskID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextTaskID(MPProcessID owningProcessID, MPTaskID *taskID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextTaskID
	ENDIF


; *  MPGetNextQueueID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextQueueID(MPProcessID owningProcessID, MPQueueID *queueID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextQueueID
	ENDIF


; *  MPGetNextSemaphoreID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextSemaphoreID(MPProcessID owningProcessID, MPSemaphoreID *semaphoreID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextSemaphoreID
	ENDIF


; *  MPGetNextCriticalRegionID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextCriticalRegionID(MPProcessID owningProcessID, MPCriticalRegionID *criticalRegionID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextCriticalRegionID
	ENDIF


; *  MPGetNextTimerID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextTimerID(MPProcessID owningProcessID, MPTimerID *timerID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextTimerID
	ENDIF


; *  MPGetNextEventID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextEventID(MPProcessID owningProcessID, MPEventID *eventID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextEventID
	ENDIF


; *  MPGetNextNotificationID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextNotificationID(MPProcessID owningProcessID, MPNotificationID *notificationID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextNotificationID
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  MPGetNextAreaID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSStatus MPGetNextAreaID(MPAddressSpaceID owningSpaceID, MPAreaID *areaID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextAreaID
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  MPGetNextConsoleID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextConsoleID(MPConsoleID *consoleID)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextConsoleID
	ENDIF



;  -------------------------------------------------------------------------------------------



; *  MPGetNextID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNextID(MPOpaqueIDClass kind, MPOpaqueID *id)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNextID
	ENDIF




;   §
;   ==========================================================================================================================
;   Object Information Services
;   ===========================





;   ----------------------------------------------------------------------------------------------
;   ! The implementation of MPGetObjectInfo assumes that all info records are in 4 byte multiples.




	ENDIF	; CALL_NOT_IN_CARBON

															; The version of the MPAreaInfo structure requested.
kMPQueueInfoVersion				EQU		262145
kMPSemaphoreInfoVersion			EQU		327681
kMPEventInfoVersion				EQU		589825
kMPCriticalRegionInfoVersion	EQU		393217
kMPNotificationInfoVersion		EQU		786433
kMPAddressSpaceInfoVersion		EQU		524289

MPQueueInfo				RECORD 0
version					 ds.l	1				; offset: $0 (0)		;  Version of the data structure requested
processID				 ds.l	1				; offset: $4 (4)		;  Owning process ID
queueName				 ds.l	1				; offset: $8 (8)		;  Queue name
nWaiting				 ds.l	1				; offset: $C (12)
waitingTaskID			 ds.l	1				; offset: $10 (16)		;  First waiting task.
nMessages				 ds.l	1				; offset: $14 (20)
nReserved				 ds.l	1				; offset: $18 (24)
p1						 ds.l	1				; offset: $1C (28)		;  First message parameters...
p2						 ds.l	1				; offset: $20 (32)
p3						 ds.l	1				; offset: $24 (36)
sizeof					 EQU *					; size:   $28 (40)
						ENDR
MPSemaphoreInfo			RECORD 0
version					 ds.l	1				; offset: $0 (0)		;  Version of the data structure requested
processID				 ds.l	1				; offset: $4 (4)		;  Owning process ID
semaphoreName			 ds.l	1				; offset: $8 (8)		;  Semaphore name
nWaiting				 ds.l	1				; offset: $C (12)
waitingTaskID			 ds.l	1				; offset: $10 (16)		;  First waiting task.
maximum					 ds.l	1				; offset: $14 (20)
count					 ds.l	1				; offset: $18 (24)
sizeof					 EQU *					; size:   $1C (28)
						ENDR
MPEventInfo				RECORD 0
version					 ds.l	1				; offset: $0 (0)		;  Version of the data structure requested
processID				 ds.l	1				; offset: $4 (4)		;  Owning process ID
eventName				 ds.l	1				; offset: $8 (8)		;  Event name
nWaiting				 ds.l	1				; offset: $C (12)
waitingTaskID			 ds.l	1				; offset: $10 (16)		;  First waiting task.
events					 ds.l	1				; offset: $14 (20)
sizeof					 EQU *					; size:   $18 (24)
						ENDR
MPCriticalRegionInfo	RECORD 0
version					 ds.l	1				; offset: $0 (0)		;  Version of the data structure requested
processID				 ds.l	1				; offset: $4 (4)		;  Owning process ID
regionName				 ds.l	1				; offset: $8 (8)		;  Critical region name
nWaiting				 ds.l	1				; offset: $C (12)
waitingTaskID			 ds.l	1				; offset: $10 (16)		;  First waiting task.
owningTask				 ds.l	1				; offset: $14 (20)
count					 ds.l	1				; offset: $18 (24)
sizeof					 EQU *					; size:   $1C (28)
						ENDR
MPNotificationInfo		RECORD 0
version					 ds.l	1				; offset: $0 (0)		;  Version of the data structure requested
processID				 ds.l	1				; offset: $4 (4)		;  Owning process ID
notificationName		 ds.l	1				; offset: $8 (8)		;  Notification name
queueID					 ds.l	1				; offset: $C (12)		;  Queue to notify.
p1						 ds.l	1				; offset: $10 (16)
p2						 ds.l	1				; offset: $14 (20)
p3						 ds.l	1				; offset: $18 (24)
eventID					 ds.l	1				; offset: $1C (28)		;  Event to set.
events					 ds.l	1				; offset: $20 (32)
semaphoreID				 ds.l	1				; offset: $24 (36)		;  Sempahore to signal.   
sizeof					 EQU *					; size:   $28 (40)
						ENDR
MPAddressSpaceInfo		RECORD 0
version					 ds.l	1				; offset: $0 (0)		;  Version of the data structure requested
processID				 ds.l	1				; offset: $4 (4)		;  Owning process ID
groupID					 ds.l	1				; offset: $8 (8)		;  Related coherence group.
nTasks					 ds.l	1				; offset: $C (12)		;  Number of tasks in this space.
vsid					 ds.l	16				; offset: $10 (16)		;  Segment register VSIDs.
sizeof					 EQU *					; size:   $50 (80)
						ENDR
;  *** We should put the task info call here instead of in MPExtractTaskState.


	IF CALL_NOT_IN_CARBON THEN

; *  MPGetQueueInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetQueueInfo(MPQueueID id, PBVersion version, MPQueueInfo *info_o)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetQueueInfo
	ENDIF


; *  MPGetSemaphoreInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetSemaphoreInfo(MPSemaphoreID id, PBVersion version, MPSemaphoreInfo *info_o)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetSemaphoreInfo
	ENDIF


; *  MPGetEventInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetEventInfo(MPEventID id, PBVersion version, MPEventInfo *info_o)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetEventInfo
	ENDIF


; *  MPGetCriticalRegionInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetCriticalRegionInfo(MPCriticalRegionID id, PBVersion version, MPCriticalRegionInfo *info_o)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetCriticalRegionInfo
	ENDIF


; *  MPGetNotificationInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetNotificationInfo(MPNotificationID id, PBVersion version, MPNotificationInfo *info_o)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetNotificationInfo
	ENDIF


; *  MPGetAddressSpaceInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in MPDiagnostics 2.3 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern OSStatus MPGetAddressSpaceInfo(MPAddressSpaceID id, PBVersion version, MPAddressSpaceInfo *info_o)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION MPGetAddressSpaceInfo
	ENDIF


;  ==========================================================================================================================



	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF ; __MULTIPROCESSINGINFO__ 


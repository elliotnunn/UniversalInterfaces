;
;    File:       OSAGeneric.a
;
;    Contains:   AppleScript Generic Component Interfaces.
;
;    Version:    Technology: AppleScript 1.1
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1992-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__OSAGENERIC__') = 'UNDEFINED' THEN
__OSAGENERIC__ SET 1

	IF &TYPE('__MACERRORS__') = 'UNDEFINED' THEN
	include 'MacErrors.a'
	ENDIF
	IF &TYPE('__APPLEEVENTS__') = 'UNDEFINED' THEN
	include 'AppleEvents.a'
	ENDIF
	IF &TYPE('__OSA__') = 'UNDEFINED' THEN
	include 'OSA.a'
	ENDIF

;     NOTE:   This interface defines a "generic scripting component."
;            The Generic Scripting Component allows automatic dispatch to a
;            specific scripting component that conforms to the OSA interface.
;            This component supports OSA, by calling AppleScript or some other 
;            scripting component.  Additionally it provides access to the default
;            and the user-prefered scripting component.
;




															; Component version this header file describes 
kGenericComponentVersion		EQU		$0100

kGSSSelectGetDefaultScriptingComponent EQU $1001
kGSSSelectSetDefaultScriptingComponent EQU $1002
kGSSSelectGetScriptingComponent	EQU		$1003
kGSSSelectGetScriptingComponentFromStored EQU $1004
kGSSSelectGenericToRealID		EQU		$1005
kGSSSelectRealToGenericID		EQU		$1006
kGSSSelectOutOfRange			EQU		$1007
; typedef OSType 						ScriptingComponentSelector

; typedef OSAID 						GenericID

;  get and set the default scripting component 

; *  OSAGetDefaultScriptingComponent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetDefaultScriptingComponent(ComponentInstance genericScriptingComponent, ScriptingComponentSelector *scriptingSubType)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetDefaultScriptingComponent
			move.l              #$00041001,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetDefaultScriptingComponent
	ENDIF


; *  OSASetDefaultScriptingComponent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSASetDefaultScriptingComponent(ComponentInstance genericScriptingComponent, ScriptingComponentSelector scriptingSubType)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSASetDefaultScriptingComponent
			move.l              #$00041002,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSASetDefaultScriptingComponent
	ENDIF

;  get a scripting component instance from its subtype code 

; *  OSAGetScriptingComponent()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetScriptingComponent(ComponentInstance genericScriptingComponent, ScriptingComponentSelector scriptingSubType, ComponentInstance *scriptingInstance)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetScriptingComponent
			move.l              #$00081003,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetScriptingComponent
	ENDIF

;  get a scripting component selector (subType) from a stored script 

; *  OSAGetScriptingComponentFromStored()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGetScriptingComponentFromStored(ComponentInstance genericScriptingComponent, const AEDesc *scriptData, ScriptingComponentSelector *scriptingSubType)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGetScriptingComponentFromStored
			move.l              #$00081004,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGetScriptingComponentFromStored
	ENDIF

;  get a real component instance and script id from a generic id 

; *  OSAGenericToRealID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSAGenericToRealID(ComponentInstance genericScriptingComponent, OSAID *theScriptID, ComponentInstance *theExactComponent)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSAGenericToRealID
			move.l              #$00081005,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSAGenericToRealID
	ENDIF

;  get a generic id from a real component instance and script id 

; *  OSARealToGenericID()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in AppleScriptLib 1.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSAError OSARealToGenericID(ComponentInstance genericScriptingComponent, OSAID *theScriptID, ComponentInstance theExactComponent)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_OSARealToGenericID
			move.l              #$00081006,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION OSARealToGenericID
	ENDIF



	ENDIF ; __OSAGENERIC__ 


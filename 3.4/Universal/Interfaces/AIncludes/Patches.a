;
;    File:       Patches.a
;
;    Contains:   Patch Manager Interfaces.
;
;    Version:    Technology: System 8
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1994-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;

	IF &TYPE('__PATCHES__') = 'UNDEFINED' THEN
__PATCHES__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF

	IF CALL_NOT_IN_CARBON THEN

kOSTrapType						EQU		0
kToolboxTrapType				EQU		1
; typedef SignedByte 					TrapType


OSTrap							EQU		0					; old name 
ToolTrap						EQU		1					; old name 
	ENDIF	; CALL_NOT_IN_CARBON
; 
;    GetTrapAddress and SetTrapAddress are obsolete and should not
;    be used. Always use NGetTrapAddress and NSetTrapAddress instead.
;    The old routines will not be supported for PowerPC apps.
;

	IF TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
	IF CALL_NOT_IN_CARBON THEN

; *  GetTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal UniversalProcPtr GetTrapAddress(UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapNum         => D0
		; returns:
		;	UniversalProcPtr <= A0
		_GetTrapAddress:	OPWORD	$A146
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetTrapAddress
	ENDIF


; *  SetTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SetTrapAddress(UniversalProcPtr trapAddr, UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapAddr        => A0
		;	trapNum         => D0
		_SetTrapAddress:	OPWORD	$A047
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SetTrapAddress
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF
	IF CALL_NOT_IN_CARBON THEN

; *  GetOSTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal UniversalProcPtr GetOSTrapAddress(UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapNum         => D0
		; returns:
		;	UniversalProcPtr <= A0
		_GetOSTrapAddress:	OPWORD	$A346
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetOSTrapAddress
	ENDIF


; *  SetOSTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SetOSTrapAddress(UniversalProcPtr trapAddr, UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapAddr        => A0
		;	trapNum         => D0
		_SetOSTrapAddress:	OPWORD	$A247
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SetOSTrapAddress
	ENDIF


; *  GetToolTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal UniversalProcPtr GetToolTrapAddress(UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapNum         => D0
		; returns:
		;	UniversalProcPtr <= A0
		_GetToolTrapAddress:	OPWORD	$A746
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetToolTrapAddress
	ENDIF


; *  SetToolTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SetToolTrapAddress(UniversalProcPtr trapAddr, UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapAddr        => A0
		;	trapNum         => D0
		_SetToolTrapAddress:	OPWORD	$A647
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SetToolTrapAddress
	ENDIF


; *  GetToolboxTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal UniversalProcPtr GetToolboxTrapAddress(UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapNum         => D0
		; returns:
		;	UniversalProcPtr <= A0
		_GetToolboxTrapAddress:	OPWORD	$A746
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetToolboxTrapAddress
	ENDIF


; *  SetToolboxTrapAddress()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SetToolboxTrapAddress(UniversalProcPtr trapAddr, UInt16 trapNum)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	trapAddr        => A0
		;	trapNum         => D0
		_SetToolboxTrapAddress:	OPWORD	$A647
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SetToolboxTrapAddress
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF TARGET_CPU_PPC THEN
	IF CALL_NOT_IN_CARBON THEN

; *  GetTrapVector()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal UniversalProcHandle GetTrapVector(UInt16 trapNumber)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION GetTrapVector
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; TARGET_CPU_PPC


	ENDIF ; __PATCHES__ 


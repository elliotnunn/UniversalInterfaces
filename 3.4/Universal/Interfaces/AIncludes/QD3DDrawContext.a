;
;    File:       QD3DDrawContext.a
;
;    Contains:   Draw context class types and routines
;
;    Version:    Technology: Quickdraw 3D 1.6
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1995-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__QD3DDRAWCONTEXT__') = 'UNDEFINED' THEN
__QD3DDRAWCONTEXT__ SET 1

	IF &TYPE('__QD3D__') = 'UNDEFINED' THEN
	include 'QD3D.a'
	ENDIF

	IF TARGET_OS_MAC THEN
	IF &TYPE('__QUICKDRAW__') = 'UNDEFINED' THEN
	include 'Quickdraw.a'
	ENDIF
	IF &TYPE('__FIXMATH__') = 'UNDEFINED' THEN
	include 'FixMath.a'
	ENDIF
	IF &TYPE('__GXTYPES__') = 'UNDEFINED' THEN
	include 'GXTypes.a'
	ENDIF
	ENDIF	; TARGET_OS_MAC
; ******************************************************************************
; **                                                                          **
; **                         DrawContext Data Structures                      **
; **                                                                          **
; ****************************************************************************


; typedef long							TQ3DrawContextClearImageMethod
kQ3ClearMethodNone				EQU		0
kQ3ClearMethodWithColor			EQU		1

TQ3DrawContextData		RECORD 0
clearImageMethod		 ds.l	1				; offset: $0 (0)
clearImageColor			 ds		TQ3ColorARGB	; offset: $4 (4)
pane					 ds		TQ3Area			; offset: $14 (20)
paneState				 ds.l	1				; offset: $24 (36)
mask					 ds		TQ3Bitmap		; offset: $28 (40)
maskState				 ds.l	1				; offset: $3C (60)
doubleBufferState		 ds.l	1				; offset: $40 (64)
sizeof					 EQU *					; size:   $44 (68)
						ENDR
; ******************************************************************************
; **                                                                          **
; **                             DrawContext Routines                         **
; **                                                                          **
; ****************************************************************************

	IF CALL_NOT_IN_CARBON THEN

; *  Q3DrawContext_GetType()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3ObjectType Q3DrawContext_GetType(TQ3DrawContextObject drawContext)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetType
	ENDIF


; *  Q3DrawContext_SetData()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetData(TQ3DrawContextObject context, const TQ3DrawContextData *contextData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetData
	ENDIF


; *  Q3DrawContext_GetData()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetData(TQ3DrawContextObject context, TQ3DrawContextData *contextData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetData
	ENDIF


; *  Q3DrawContext_SetClearImageColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetClearImageColor(TQ3DrawContextObject context, const TQ3ColorARGB *color)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetClearImageColor
	ENDIF


; *  Q3DrawContext_GetClearImageColor()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetClearImageColor(TQ3DrawContextObject context, TQ3ColorARGB *color)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetClearImageColor
	ENDIF


; *  Q3DrawContext_SetPane()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetPane(TQ3DrawContextObject context, const TQ3Area *pane)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetPane
	ENDIF


; *  Q3DrawContext_GetPane()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetPane(TQ3DrawContextObject context, TQ3Area *pane)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetPane
	ENDIF


; *  Q3DrawContext_SetPaneState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetPaneState(TQ3DrawContextObject context, TQ3Boolean state)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetPaneState
	ENDIF


; *  Q3DrawContext_GetPaneState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetPaneState(TQ3DrawContextObject context, TQ3Boolean *state)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetPaneState
	ENDIF


; *  Q3DrawContext_SetClearImageMethod()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetClearImageMethod(TQ3DrawContextObject context, TQ3DrawContextClearImageMethod method)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetClearImageMethod
	ENDIF


; *  Q3DrawContext_GetClearImageMethod()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetClearImageMethod(TQ3DrawContextObject context, TQ3DrawContextClearImageMethod *method)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetClearImageMethod
	ENDIF


; *  Q3DrawContext_SetMask()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetMask(TQ3DrawContextObject context, const TQ3Bitmap *mask)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetMask
	ENDIF


; *  Q3DrawContext_GetMask()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetMask(TQ3DrawContextObject context, TQ3Bitmap *mask)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetMask
	ENDIF


; *  Q3DrawContext_SetMaskState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetMaskState(TQ3DrawContextObject context, TQ3Boolean state)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetMaskState
	ENDIF


; *  Q3DrawContext_GetMaskState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetMaskState(TQ3DrawContextObject context, TQ3Boolean *state)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetMaskState
	ENDIF


; *  Q3DrawContext_SetDoubleBufferState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_SetDoubleBufferState(TQ3DrawContextObject context, TQ3Boolean state)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_SetDoubleBufferState
	ENDIF


; *  Q3DrawContext_GetDoubleBufferState()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DrawContext_GetDoubleBufferState(TQ3DrawContextObject context, TQ3Boolean *state)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DrawContext_GetDoubleBufferState
	ENDIF


; ******************************************************************************
; **                                                                          **
; **                         Pixmap Data Structure                            **
; **                                                                          **
; ****************************************************************************

	ENDIF	; CALL_NOT_IN_CARBON
TQ3PixmapDrawContextData RECORD 0
drawContextData			 ds		TQ3DrawContextData ; offset: $0 (0)
pixmap					 ds		TQ3Pixmap		; offset: $44 (68)
sizeof					 EQU *					; size:   $64 (100)
						ENDR
; ******************************************************************************
; **                                                                          **
; **                     Pixmap DrawContext Routines                          **
; **                                                                          **
; ****************************************************************************

	IF CALL_NOT_IN_CARBON THEN

; *  Q3PixmapDrawContext_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3DrawContextObject Q3PixmapDrawContext_New(const TQ3PixmapDrawContextData *contextData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3PixmapDrawContext_New
	ENDIF


; *  Q3PixmapDrawContext_SetPixmap()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3PixmapDrawContext_SetPixmap(TQ3DrawContextObject drawContext, const TQ3Pixmap *pixmap)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3PixmapDrawContext_SetPixmap
	ENDIF


; *  Q3PixmapDrawContext_GetPixmap()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3PixmapDrawContext_GetPixmap(TQ3DrawContextObject drawContext, TQ3Pixmap *pixmap)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3PixmapDrawContext_GetPixmap
	ENDIF



	ENDIF	; CALL_NOT_IN_CARBON
	IF TARGET_OS_MAC THEN
; ******************************************************************************
; **                                                                          **
; **                     Macintosh DrawContext Data Structures                **
; **                                                                          **
; ****************************************************************************


; typedef long							TQ3MacDrawContext2DLibrary
kQ3Mac2DLibraryNone				EQU		0
kQ3Mac2DLibraryQuickDraw		EQU		1
kQ3Mac2DLibraryQuickDrawGX		EQU		2

TQ3MacDrawContextData	RECORD 0
drawContextData			 ds		TQ3DrawContextData ; offset: $0 (0)
window					 ds.l	1				; offset: $44 (68)
library					 ds.l	1				; offset: $48 (72)
viewPort				 ds.l	1				; offset: $4C (76)
grafPort				 ds.l	1				; offset: $50 (80)
sizeof					 EQU *					; size:   $54 (84)
						ENDR
; ******************************************************************************
; **                                                                          **
; **                     Macintosh DrawContext Routines                       **
; **                                                                          **
; ****************************************************************************

	IF CALL_NOT_IN_CARBON THEN

; *  Q3MacDrawContext_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3DrawContextObject Q3MacDrawContext_New(const TQ3MacDrawContextData *drawContextData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_New
	ENDIF


; *  Q3MacDrawContext_SetWindow()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_SetWindow(TQ3DrawContextObject drawContext, CWindowPtr window)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_SetWindow
	ENDIF


; *  Q3MacDrawContext_GetWindow()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_GetWindow(TQ3DrawContextObject drawContext, CWindowPtr *window)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_GetWindow
	ENDIF


; *  Q3MacDrawContext_SetGXViewPort()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_SetGXViewPort(TQ3DrawContextObject drawContext, gxViewPort viewPort)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_SetGXViewPort
	ENDIF


; *  Q3MacDrawContext_GetGXViewPort()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_GetGXViewPort(TQ3DrawContextObject drawContext, gxViewPort *viewPort)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_GetGXViewPort
	ENDIF


; *  Q3MacDrawContext_SetGrafPort()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_SetGrafPort(TQ3DrawContextObject drawContext, CGrafPtr grafPort)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_SetGrafPort
	ENDIF


; *  Q3MacDrawContext_GetGrafPort()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_GetGrafPort(TQ3DrawContextObject drawContext, CGrafPtr *grafPort)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_GetGrafPort
	ENDIF


; *  Q3MacDrawContext_Set2DLibrary()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_Set2DLibrary(TQ3DrawContextObject drawContext, TQ3MacDrawContext2DLibrary library)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_Set2DLibrary
	ENDIF


; *  Q3MacDrawContext_Get2DLibrary()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacDrawContext_Get2DLibrary(TQ3DrawContextObject drawContext, TQ3MacDrawContext2DLibrary *library)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacDrawContext_Get2DLibrary
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; TARGET_OS_MAC
	IF TARGET_OS_UNIX THEN
; ******************************************************************************
; **                                                                          **
; **                     X/Windows DrawContext Data Structures                **
; **                                                                          **
; ****************************************************************************



TQ3XColormapData		RECORD 0
baseEntry				 ds.l	1				; offset: $0 (0)
maxRed					 ds.l	1				; offset: $4 (4)
maxGreen				 ds.l	1				; offset: $8 (8)
maxBlue					 ds.l	1				; offset: $C (12)
multRed					 ds.l	1				; offset: $10 (16)
multGreen				 ds.l	1				; offset: $14 (20)
multBlue				 ds.l	1				; offset: $18 (24)
sizeof					 EQU *					; size:   $1C (28)
						ENDR
TQ3XDrawContextData		RECORD 0
contextData				 ds		TQ3DrawContextData ; offset: $0 (0)
display					 ds.l	1				; offset: $44 (68)
drawable				 ds.l	1				; offset: $48 (72)
visual					 ds.l	1				; offset: $4C (76)
cmap					 ds.l	1				; offset: $50 (80)
colorMapData			 ds.l	1				; offset: $54 (84)
sizeof					 EQU *					; size:   $58 (88)
						ENDR
; ******************************************************************************
; **                                                                          **
; **                     X/Windows DrawContext Routines                       **
; **                                                                          **
; ****************************************************************************

	IF &TYPE('XDC_OLD') <> 'UNDEFINED' THEN
	IF CALL_NOT_IN_CARBON THEN

; *  Q3XDrawContext_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3DrawContextObject Q3XDrawContext_New(void )
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_New
	ENDIF


; *  Q3XDrawContext_Set()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern void Q3XDrawContext_Set(TQ3DrawContextObject drawContext, unsigned long flag, void *data)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_Set
	ENDIF


; *  Q3XDrawContext_Get()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern void Q3XDrawContext_Get(TQ3DrawContextObject drawContext, unsigned long flag, void *data)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_Get
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF
	IF CALL_NOT_IN_CARBON THEN

; *  Q3XBuffers_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3XBufferObject Q3XBuffers_New(Display *dpy, unsigned long numBuffers, Window window)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XBuffers_New
	ENDIF


; *  Q3XBuffers_Swap()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern void Q3XBuffers_Swap(Display *dpy, TQ3XBufferObject buffers)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XBuffers_Swap
	ENDIF


; *  Q3X_GetVisualInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern XVisualInfo *Q3X_GetVisualInfo(Display *dpy, Screen *screen)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3X_GetVisualInfo
	ENDIF



; *  Q3XDrawContext_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3DrawContextObject Q3XDrawContext_New(const TQ3XDrawContextData *xContextData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_New
	ENDIF


; *  Q3XDrawContext_SetDisplay()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_SetDisplay(TQ3DrawContextObject drawContext, const Display *display)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_SetDisplay
	ENDIF


; *  Q3XDrawContext_GetDisplay()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_GetDisplay(TQ3DrawContextObject drawContext, Display **display)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_GetDisplay
	ENDIF


; *  Q3XDrawContext_SetDrawable()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_SetDrawable(TQ3DrawContextObject drawContext, Drawable drawable)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_SetDrawable
	ENDIF


; *  Q3XDrawContext_GetDrawable()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_GetDrawable(TQ3DrawContextObject drawContext, Drawable *drawable)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_GetDrawable
	ENDIF


; *  Q3XDrawContext_SetVisual()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_SetVisual(TQ3DrawContextObject drawContext, const Visual *visual)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_SetVisual
	ENDIF


; *  Q3XDrawContext_GetVisual()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_GetVisual(TQ3DrawContextObject drawContext, Visual **visual)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_GetVisual
	ENDIF


; *  Q3XDrawContext_SetColormap()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_SetColormap(TQ3DrawContextObject drawContext, Colormap colormap)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_SetColormap
	ENDIF


; *  Q3XDrawContext_GetColormap()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_GetColormap(TQ3DrawContextObject drawContext, Colormap *colormap)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_GetColormap
	ENDIF


; *  Q3XDrawContext_SetColormapData()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_SetColormapData(TQ3DrawContextObject drawContext, const TQ3XColormapData *colormapData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_SetColormapData
	ENDIF


; *  Q3XDrawContext_GetColormapData()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3XDrawContext_GetColormapData(TQ3DrawContextObject drawContext, TQ3XColormapData *colormapData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3XDrawContext_GetColormapData
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; TARGET_OS_UNIX
	IF TARGET_OS_WIN32 THEN
; ******************************************************************************
; **                                                                          **
; **                      Win32 DrawContext Data Structures                   **
; **                                                                          **
; ****************************************************************************

TQ3Win32DCDrawContextData RECORD 0
drawContextData			 ds		TQ3DrawContextData ; offset: $0 (0)
hdc						 ds.l	1				; offset: $44 (68)
sizeof					 EQU *					; size:   $48 (72)
						ENDR
	IF &TYPE('QD3D_NO_DIRECTDRAW') = 'UNDEFINED' THEN

; typedef long							TQ3DirectDrawObjectSelector
kQ3DirectDrawObject				EQU		1
kQ3DirectDrawObject2			EQU		2

; typedef long							TQ3DirectDrawSurfaceSelector
kQ3DirectDrawSurface			EQU		1
kQ3DirectDrawSurface2			EQU		2
TQ3DDSurfaceDescriptor	RECORD 0
objectSelector			 ds.l	1				; offset: $0 (0)
filler					 ds.l	4				; offset: $4 (4)
sizeof					 EQU *					; size:   $14 (20)
						ENDR
TQ3DDSurfaceDrawContextData RECORD 0
drawContextData			 ds		TQ3DrawContextData ; offset: $0 (0)
ddSurfaceDescriptor		 ds		TQ3DDSurfaceDescriptor ; offset: $44 (68)
sizeof					 EQU *					; size:   $58 (88)
						ENDR
	ENDIF
; ******************************************************************************
; **                                                                          **
; **                         Win32DC DrawContext Routines                     **
; **                                                                          **
; ****************************************************************************

	IF CALL_NOT_IN_CARBON THEN

; *  Q3Win32DCDrawContext_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3DrawContextObject Q3Win32DCDrawContext_New(const TQ3Win32DCDrawContextData *drawContextData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Win32DCDrawContext_New
	ENDIF


; *  Q3Win32DCDrawContext_SetDC()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3Win32DCDrawContext_SetDC(TQ3DrawContextObject drawContext, HDC newHDC)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Win32DCDrawContext_SetDC
	ENDIF


; *  Q3Win32DCDrawContext_GetDC()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3Win32DCDrawContext_GetDC(TQ3DrawContextObject drawContext, HDC *curHDC)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Win32DCDrawContext_GetDC
	ENDIF

; ******************************************************************************
; **                                                                          **
; **                         DDSurface DrawContext Routines                   **
; **                                                                          **
; ****************************************************************************

	ENDIF	; CALL_NOT_IN_CARBON
	IF &TYPE('QD3D_NO_DIRECTDRAW') = 'UNDEFINED' THEN
	IF CALL_NOT_IN_CARBON THEN

; *  Q3DDSurfaceDrawContext_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3DrawContextObject Q3DDSurfaceDrawContext_New(const TQ3DDSurfaceDrawContextData *drawContextData)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DDSurfaceDrawContext_New
	ENDIF


; *  Q3DDSurfaceDrawContext_SetDirectDrawSurface()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DDSurfaceDrawContext_SetDirectDrawSurface(TQ3DrawContextObject drawContext, const TQ3DDSurfaceDescriptor *ddSurfaceDescriptor)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DDSurfaceDrawContext_SetDirectDrawSurface
	ENDIF


; *  Q3DDSurfaceDrawContext_GetDirectDrawSurface()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3DDSurfaceDrawContext_GetDirectDrawSurface(TQ3DrawContextObject drawContext, TQ3DDSurfaceDescriptor *ddSurfaceDescriptor)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3DDSurfaceDrawContext_GetDirectDrawSurface
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF
	ENDIF	; TARGET_OS_WIN32



	ENDIF ; __QD3DDRAWCONTEXT__ 


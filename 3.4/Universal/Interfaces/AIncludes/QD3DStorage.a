;
;    File:       QD3DStorage.a
;
;    Contains:   Abstraction to deal with various types of stream-based storage devices
;
;    Version:    Technology: Quickdraw 3D 1.6
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  Â© 1995-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__QD3DSTORAGE__') = 'UNDEFINED' THEN
__QD3DSTORAGE__ SET 1

	IF &TYPE('__QD3D__') = 'UNDEFINED' THEN
	include 'QD3D.a'
	ENDIF

	IF TARGET_OS_MAC THEN
	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF
	ENDIF	; TARGET_OS_MAC
; ******************************************************************************
; **                                                                          **
; **                             Storage Routines                             **
; **                                                                          **
; ****************************************************************************

	IF CALL_NOT_IN_CARBON THEN

; *  Q3Storage_GetType()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3ObjectType Q3Storage_GetType(TQ3StorageObject storage)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Storage_GetType
	ENDIF


; *  Q3Storage_GetSize()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3Storage_GetSize(TQ3StorageObject storage, unsigned long *size)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Storage_GetSize
	ENDIF

;  
; *  Reads "dataSize" bytes starting at offset in storage, copying into data. 
; *  sizeRead returns the number of bytes filled in. 
; *  
; *  You may assume if *sizeRead < dataSize, then EOF is at offset + *sizeRead
; 


; *  Q3Storage_GetData()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3Storage_GetData(TQ3StorageObject storage, unsigned long offset, unsigned long dataSize, unsigned char *data, unsigned long *sizeRead)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Storage_GetData
	ENDIF

;  
; *  Write "dataSize" bytes starting at offset in storage, copying from data. 
; *  sizeWritten returns the number of bytes filled in. 
; *  
; *  You may assume if *sizeRead < dataSize, then EOF is at offset + *sizeWritten
; 


; *  Q3Storage_SetData()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3Storage_SetData(TQ3StorageObject storage, unsigned long offset, unsigned long dataSize, const unsigned char *data, unsigned long *sizeWritten)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Storage_SetData
	ENDIF

; ******************************************************************************
; **                                                                          **
; **                          Memory Storage Prototypes                       **
; **                                                                          **
; ****************************************************************************


; *  Q3MemoryStorage_GetType()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3ObjectType Q3MemoryStorage_GetType(TQ3StorageObject storage)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MemoryStorage_GetType
	ENDIF

; 
; * These calls COPY the buffer into QD3D space
; 


; *  Q3MemoryStorage_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3StorageObject Q3MemoryStorage_New(const unsigned char *buffer, unsigned long validSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MemoryStorage_New
	ENDIF


; *  Q3MemoryStorage_Set()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MemoryStorage_Set(TQ3StorageObject storage, const unsigned char *buffer, unsigned long validSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MemoryStorage_Set
	ENDIF

; 
; * These calls use the pointer given - you must dispose it when you're through
; 

	ENDIF	; CALL_NOT_IN_CARBON
	IF CALL_NOT_IN_CARBON THEN

; *  Q3MemoryStorage_NewBuffer()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3StorageObject Q3MemoryStorage_NewBuffer(unsigned char *buffer, unsigned long validSize, unsigned long bufferSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MemoryStorage_NewBuffer
	ENDIF


; *  Q3MemoryStorage_SetBuffer()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MemoryStorage_SetBuffer(TQ3StorageObject storage, unsigned char *buffer, unsigned long validSize, unsigned long bufferSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MemoryStorage_SetBuffer
	ENDIF


; *  Q3MemoryStorage_GetBuffer()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MemoryStorage_GetBuffer(TQ3StorageObject storage, unsigned char **buffer, unsigned long *validSize, unsigned long *bufferSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MemoryStorage_GetBuffer
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	IF TARGET_OS_MAC THEN
; ******************************************************************************
; **                                                                          **
; **                             Macintosh Handles Prototypes                 **
; **                                                                          **
; ****************************************************************************

;  Handle Storage is a subclass of Memory Storage 
	IF CALL_NOT_IN_CARBON THEN

; *  Q3HandleStorage_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3StorageObject Q3HandleStorage_New(Handle handle, unsigned long validSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3HandleStorage_New
	ENDIF


; *  Q3HandleStorage_Set()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3HandleStorage_Set(TQ3StorageObject storage, Handle handle, unsigned long validSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3HandleStorage_Set
	ENDIF


; *  Q3HandleStorage_Get()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3HandleStorage_Get(TQ3StorageObject storage, Handle *handle, unsigned long *validSize)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3HandleStorage_Get
	ENDIF

; ******************************************************************************
; **                                                                          **
; **                             Macintosh Storage Prototypes                 **
; **                                                                          **
; ****************************************************************************


; *  Q3MacintoshStorage_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3StorageObject Q3MacintoshStorage_New(short fsRefNum)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacintoshStorage_New
	ENDIF

;  Note: This storage is assumed open 

; *  Q3MacintoshStorage_Set()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacintoshStorage_Set(TQ3StorageObject storage, short fsRefNum)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacintoshStorage_Set
	ENDIF


; *  Q3MacintoshStorage_Get()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3MacintoshStorage_Get(TQ3StorageObject storage, short *fsRefNum)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacintoshStorage_Get
	ENDIF


; *  Q3MacintoshStorage_GetType()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3ObjectType Q3MacintoshStorage_GetType(TQ3StorageObject storage)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3MacintoshStorage_GetType
	ENDIF


; ******************************************************************************
; **                                                                          **
; **                         Macintosh FSSpec Storage Prototypes              **
; **                                                                          **
; ****************************************************************************


; *  Q3FSSpecStorage_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3StorageObject Q3FSSpecStorage_New(const FSSpec *fs)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3FSSpecStorage_New
	ENDIF


; *  Q3FSSpecStorage_Set()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3FSSpecStorage_Set(TQ3StorageObject storage, const FSSpec *fs)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3FSSpecStorage_Set
	ENDIF


; *  Q3FSSpecStorage_Get()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3FSSpecStorage_Get(TQ3StorageObject storage, FSSpec *fs)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3FSSpecStorage_Get
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; TARGET_OS_MAC
	IF TARGET_OS_WIN32 THEN
; ******************************************************************************
; **                                                                          **
; **                         Win32 HANDLE Storage Prototypes                  **
; **                                                                          **
; ****************************************************************************

	IF CALL_NOT_IN_CARBON THEN

; *  Q3Win32Storage_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3StorageObject Q3Win32Storage_New(HANDLE hFile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Win32Storage_New
	ENDIF


; *  Q3Win32Storage_Set()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3Win32Storage_Set(TQ3StorageObject storage, HANDLE hFile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Win32Storage_Set
	ENDIF


; *  Q3Win32Storage_Get()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3Win32Storage_Get(TQ3StorageObject storage, HANDLE *hFile)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3Win32Storage_Get
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF	; TARGET_OS_WIN32

; ******************************************************************************
; **                                                                          **
; **                                 Unix Prototypes                          **
; **             The Unix Storage prototypes have been obsoleted.             **
; **                                                                          **
; ****************************************************************************



; ******************************************************************************
; **                                                                          **
; **                             Unix Path Prototypes                         **
; **                                                                          **
; ****************************************************************************

	IF CALL_NOT_IN_CARBON THEN

; *  Q3UnixPathStorage_New()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3StorageObject Q3UnixPathStorage_New(const char *pathName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3UnixPathStorage_New
	ENDIF

;  C string 

; *  Q3UnixPathStorage_Set()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3UnixPathStorage_Set(TQ3StorageObject storage, const char *pathName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3UnixPathStorage_Set
	ENDIF

;  C string 

; *  Q3UnixPathStorage_Get()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; extern TQ3Status Q3UnixPathStorage_Get(TQ3StorageObject storage, char *pathName)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Q3UnixPathStorage_Get
	ENDIF

;  pathName is a buffer 



	ENDIF	; CALL_NOT_IN_CARBON
	ENDIF ; __QD3DSTORAGE__ 


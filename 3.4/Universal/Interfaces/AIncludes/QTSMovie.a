;
;    File:       QTSMovie.a
;
;    Contains:   QuickTime Interfaces.
;
;    Version:    Technology: 
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1990-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__QTSMOVIE__') = 'UNDEFINED' THEN
__QTSMOVIE__ SET 1

	IF &TYPE('__COMPONENTS__') = 'UNDEFINED' THEN
	include 'Components.a'
	ENDIF
	IF &TYPE('__MOVIES__') = 'UNDEFINED' THEN
	include 'Movies.a'
	ENDIF
	IF &TYPE('__QUICKTIMESTREAMING__') = 'UNDEFINED' THEN
	include 'QuickTimeStreaming.a'
	ENDIF


kQTSStreamMediaType				EQU		'strm'
QTSSampleDescription	RECORD 0
descSize				 ds.l	1				; offset: $0 (0)
dataFormat				 ds.l	1				; offset: $4 (4)
resvd1					 ds.l	1				; offset: $8 (8)		;  set to 0
resvd2					 ds.w	1				; offset: $C (12)		;  set to 0
dataRefIndex			 ds.w	1				; offset: $E (14)
version					 ds.l	1				; offset: $10 (16)
resvd3					 ds.l	1				; offset: $14 (20)		;  set to 0
flags					 ds.l	1				; offset: $18 (24)
;  qt atoms follow:
;       long size, long type, some data
;       repeat as necessary
sizeof					 EQU *					; size:   $1C (28)
						ENDR
; typedef struct QTSSampleDescription *	QTSSampleDescriptionPtr

; typedef QTSSampleDescriptionPtr *		QTSSampleDescriptionHandle


kQTSSampleDescriptionVersion1	EQU		1

kQTSDefaultMediaTimeScale		EQU		600
;  sample description flags

kQTSSampleDescPassSampleDataAsHandleFlag EQU $00000001

; ============================================================================
;        Stream Media Handler
;============================================================================

; -----------------------------------------
;    Info Selectors
;-----------------------------------------

;  all indexes start at 1 


kQTSMediaPresentationInfo		EQU		'pres'				; QTSMediaPresentationParams* 
kQTSMediaNotificationInfo		EQU		'noti'				; QTSMediaNotificationParams* 
kQTSMediaTotalDataRateInfo		EQU		'dtrt'				; UInt32*, bits/sec 
kQTSMediaLostPercentInfo		EQU		'lspc'				; Fixed* 
kQTSMediaNumStreamsInfo			EQU		'nstr'				; UInt32* 
kQTSMediaIndSampleDescriptionInfo EQU	'isdc'				; QTSMediaIndSampleDescriptionParams* 

QTSMediaPresentationParams RECORD 0
presentationID			 ds.l	1				; offset: $0 (0)
sizeof					 EQU *					; size:   $4 (4)
						ENDR
QTSMediaNotificationParams RECORD 0
notificationProc		 ds.l	1				; offset: $0 (0)
notificationRefCon		 ds.l	1				; offset: $4 (4)
flags					 ds.l	1				; offset: $8 (8)
sizeof					 EQU *					; size:   $C (12)
						ENDR
QTSMediaIndSampleDescriptionParams RECORD 0
index					 ds.l	1				; offset: $0 (0)
returnedMediaType		 ds.l	1				; offset: $4 (4)
returnedSampleDescription  ds.l	1				; offset: $8 (8)
sizeof					 EQU *					; size:   $C (12)
						ENDR
; -----------------------------------------
;    QTS Media Handler Selectors
;-----------------------------------------


kQTSMediaSetInfoSelect			EQU		$0100
kQTSMediaGetInfoSelect			EQU		$0101
kQTSMediaSetIndStreamInfoSelect	EQU		$0102
kQTSMediaGetIndStreamInfoSelect	EQU		$0103
; -----------------------------------------
;    QTS Media Handler functions
;-----------------------------------------


; *  QTSMediaSetInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in QTStreamLib 4.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; *    Windows:          in QTSClient.lib 4.0 and later
; 

;
; pascal ComponentResult QTSMediaSetInfo(MediaHandler mh, OSType inSelector, void *ioParams)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_QTSMediaSetInfo
			move.l              #$00080100,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION QTSMediaSetInfo
	ENDIF


; *  QTSMediaGetInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in QTStreamLib 4.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; *    Windows:          in QTSClient.lib 4.0 and later
; 

;
; pascal ComponentResult QTSMediaGetInfo(MediaHandler mh, OSType inSelector, void *ioParams)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_QTSMediaGetInfo
			move.l              #$00080101,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION QTSMediaGetInfo
	ENDIF


; *  QTSMediaSetIndStreamInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in QTStreamLib 4.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; *    Windows:          in QTSClient.lib 4.0 and later
; 

;
; pascal ComponentResult QTSMediaSetIndStreamInfo(MediaHandler mh, SInt32 inIndex, OSType inSelector, void *ioParams)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_QTSMediaSetIndStreamInfo
			move.l              #$000C0102,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION QTSMediaSetIndStreamInfo
	ENDIF


; *  QTSMediaGetIndStreamInfo()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in QTStreamLib 4.0 and later
; *    CarbonLib:        in CarbonLib 1.1 and later
; *    Mac OS X:         in version 10.0 or later
; *    Windows:          in QTSClient.lib 4.0 and later
; 

;
; pascal ComponentResult QTSMediaGetIndStreamInfo(MediaHandler mh, SInt32 inIndex, OSType inSelector, void *ioParams)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_QTSMediaGetIndStreamInfo
			move.l              #$000C0103,-(sp)
			moveq           	#0,D0
			dc.w            	$A82A
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION QTSMediaGetIndStreamInfo
	ENDIF


; ============================================================================
;        Hint Media Handler
;============================================================================


kQTSHintMediaType				EQU		'hint'

kQTSHintTrackReference			EQU		'hint'



	ENDIF ; __QTSMOVIE__ 


;
;    File:       StandardFile.a
;
;    Contains:   Standard File package Interfaces.
;
;    Version:    Technology: System 7.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1990-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__STANDARDFILE__') = 'UNDEFINED' THEN
__STANDARDFILE__ SET 1

	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__DIALOGS__') = 'UNDEFINED' THEN
	include 'Dialogs.a'
	ENDIF
	IF &TYPE('__FILES__') = 'UNDEFINED' THEN
	include 'Files.a'
	ENDIF


															; resource IDs of pre-7.0 get and put dialogs 
putDlgID						EQU		-3999
getDlgID						EQU		-4000

															; item offsets of pre-7.0 get and put dialogs 
putSave							EQU		1
putCancel						EQU		2
putEject						EQU		5
putDrive						EQU		6
putName							EQU		7
getOpen							EQU		1
getCancel						EQU		3
getEject						EQU		5
getDrive						EQU		6
getNmList						EQU		7
getScroll						EQU		8

															; resource IDs of 7.0 get and put dialogs 
sfPutDialogID					EQU		-6043
sfGetDialogID					EQU		-6042

															; item offsets of 7.0 get and put dialogs 
sfItemOpenButton				EQU		1
sfItemCancelButton				EQU		2
sfItemBalloonHelp				EQU		3
sfItemVolumeUser				EQU		4
sfItemEjectButton				EQU		5
sfItemDesktopButton				EQU		6
sfItemFileListUser				EQU		7
sfItemPopUpMenuUser				EQU		8
sfItemDividerLinePict			EQU		9
sfItemFileNameTextEdit			EQU		10
sfItemPromptStaticText			EQU		11
sfItemNewFolderUser				EQU		12

															; pseudo-item hits for use in DlgHook 
sfHookFirstCall					EQU		-1
sfHookCharOffset				EQU		$1000
sfHookNullEvent					EQU		100
sfHookRebuildList				EQU		101
sfHookFolderPopUp				EQU		102
sfHookOpenFolder				EQU		103					; the following are only in system 7.0+ 
sfHookLastCall					EQU		-2
sfHookOpenAlias					EQU		104
sfHookGoToDesktop				EQU		105
sfHookGoToAliasTarget			EQU		106
sfHookGoToParent				EQU		107
sfHookGoToNextDrive				EQU		108
sfHookGoToPrevDrive				EQU		109
sfHookChangeSelection			EQU		110
sfHookSetActiveOffset			EQU		200

;  the refcon field of the dialog record during a
; modalfilter or dialoghook contains one of the following 

sfMainDialogRefCon				EQU		'stdf'
sfNewFolderDialogRefCon			EQU		'nfdr'
sfReplaceDialogRefCon			EQU		'rplc'
sfStatWarnDialogRefCon			EQU		'stat'
sfLockWarnDialogRefCon			EQU		'lock'
sfErrorDialogRefCon				EQU		'err '

SFReply					RECORD 0
good					 ds.b	1				; offset: $0 (0)
copy					 ds.b	1				; offset: $1 (1)
fType					 ds.l	1				; offset: $2 (2)
vRefNum					 ds.w	1				; offset: $6 (6)
version					 ds.w	1				; offset: $8 (8)
fName					 ds		StrFileName		; offset: $A (10)		;  a Str63 on MacOS 
sizeof					 EQU *					; size:   $4A (74)
						ENDR
StandardFileReply		RECORD 0
sfGood					 ds.b	1				; offset: $0 (0)
sfReplacing				 ds.b	1				; offset: $1 (1)
sfType					 ds.l	1				; offset: $2 (2)
sfFile					 ds		FSSpec			; offset: $6 (6)
sfScript				 ds.w	1				; offset: $4C (76)
sfFlags					 ds.w	1				; offset: $4E (78)
sfIsFolder				 ds.b	1				; offset: $50 (80)
sfIsVolume				 ds.b	1				; offset: $51 (81)
sfReserved1				 ds.l	1				; offset: $52 (82)
sfReserved2				 ds.w	1				; offset: $56 (86)
sizeof					 EQU *					; size:   $58 (88)
						ENDR
;  for CustomXXXFile, ActivationOrderListPtr parameter is a pointer to an array of item numbers 
; typedef const short *					ActivationOrderListPtr

;  the following also include an extra parameter of "your data pointer" 
;  ModalFilterYDProcPtr moved to Dialogs.h 
	IF CALL_NOT_IN_CARBON THEN

; *  NewDlgHookUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewFileFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewDlgHookYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewFileFilterYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  NewActivateYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeDlgHookUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeFileFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeDlgHookYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeFileFilterYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  DisposeActivateYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeDlgHookUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeFileFilterUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeDlgHookYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeFileFilterYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 


; *  InvokeActivateYDUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

	ENDIF	; CALL_NOT_IN_CARBON
SFTypeList				RECORD 0
elements				 ds.l	4
sizeof					 EQU *					; size:   $10 (16)
						ENDR


; 
;    The GetFile "typeList" parameter type has changed from "SFTypeList" to "ConstSFTypeListPtr".
;    For C, this will add "const" and make it an in-only parameter.
;    For Pascal, this will require client code to use the @ operator, but make it easier to specify long lists.
;
;    ConstSFTypeListPtr is a pointer to an array of OSTypes.
;

; typedef const OSType *				ConstSFTypeListPtr

	IF CALL_NOT_IN_CARBON THEN

; *  SFPutFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SFPutFile(Point where, ConstStr255Param prompt, ConstStr255Param origName, DlgHookUPP dlgHook, SFReply *reply)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_SFPutFile
			move.w              #$0001,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SFPutFile
	ENDIF


; *  SFGetFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SFGetFile(Point where, ConstStr255Param prompt, FileFilterUPP fileFilter, short numTypes, ConstSFTypeListPtr typeList, DlgHookUPP dlgHook, SFReply *reply)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_SFGetFile
			move.w              #$0002,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SFGetFile
	ENDIF


; *  SFPPutFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SFPPutFile(Point where, ConstStr255Param prompt, ConstStr255Param origName, DlgHookUPP dlgHook, SFReply *reply, short dlgID, ModalFilterUPP filterProc)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_SFPPutFile
			move.w              #$0003,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SFPPutFile
	ENDIF


; *  SFPGetFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void SFPGetFile(Point where, ConstStr255Param prompt, FileFilterUPP fileFilter, short numTypes, ConstSFTypeListPtr typeList, DlgHookUPP dlgHook, SFReply *reply, short dlgID, ModalFilterUPP filterProc)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_SFPGetFile
			move.w              #$0004,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION SFPGetFile
	ENDIF


; *  StandardPutFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void StandardPutFile(ConstStr255Param prompt, ConstStr255Param defaultName, StandardFileReply *reply)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_StandardPutFile
			move.w              #$0005,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION StandardPutFile
	ENDIF


; *  StandardGetFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void StandardGetFile(FileFilterUPP fileFilter, short numTypes, ConstSFTypeListPtr typeList, StandardFileReply *reply)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_StandardGetFile
			move.w              #$0006,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION StandardGetFile
	ENDIF


; *  CustomPutFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void CustomPutFile(ConstStr255Param prompt, ConstStr255Param defaultName, StandardFileReply *reply, short dlgID, Point where, DlgHookYDUPP dlgHook, ModalFilterYDUPP filterProc, ActivationOrderListPtr activeList, ActivateYDUPP activate, void *yourDataPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CustomPutFile
			move.w              #$0007,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CustomPutFile
	ENDIF


; *  CustomGetFile()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void CustomGetFile(FileFilterYDUPP fileFilter, short numTypes, ConstSFTypeListPtr typeList, StandardFileReply *reply, short dlgID, Point where, DlgHookYDUPP dlgHook, ModalFilterYDUPP filterProc, ActivationOrderListPtr activeList, ActivateYDUPP activate, void *yourDataPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_CustomGetFile
			move.w              #$0008,-(sp)
			dc.w            	$A9EA
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION CustomGetFile
	ENDIF


; *  StandardOpenDialog()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in Translation 1.0 and later
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal OSErr StandardOpenDialog(StandardFileReply *reply)
;
	IF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION StandardOpenDialog
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON


	ENDIF ; __STANDARDFILE__ 


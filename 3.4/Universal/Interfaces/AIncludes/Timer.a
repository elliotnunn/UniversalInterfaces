;
;    File:       Timer.a
;
;    Contains:   Time Manager interfaces.
;
;    Version:    Technology: Mac OS 8.5
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 1985-2001 by Apple Computer, Inc., all rights reserved
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__TIMER__') = 'UNDEFINED' THEN
__TIMER__ SET 1

	IF &TYPE('__CONDITIONALMACROS__') = 'UNDEFINED' THEN
	include 'ConditionalMacros.a'
	ENDIF
	IF &TYPE('__MACTYPES__') = 'UNDEFINED' THEN
	include 'MacTypes.a'
	ENDIF
	IF &TYPE('__OSUTILS__') = 'UNDEFINED' THEN
	include 'OSUtils.a'
	ENDIF


															; high bit of qType is set if task is active 
kTMTaskActive					EQU		$00008000


; typedef TMTask *						TMTaskPtr

TMTask					RECORD 0
qLink					 ds.l	1				; offset: $0 (0)
qType					 ds.w	1				; offset: $4 (4)
tmAddr					 ds.l	1				; offset: $6 (6)
tmCount					 ds.l	1				; offset: $A (10)
tmWakeUp				 ds.l	1				; offset: $E (14)
tmReserved				 ds.l	1				; offset: $12 (18)
sizeof					 EQU *					; size:   $16 (22)
						ENDR

; *  InsTime()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void InsTime(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		_InsTime:	OPWORD	$A058
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION InsTime
	ENDIF


; *  InsXTime()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void InsXTime(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		_InsXTime:	OPWORD	$A458
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION InsXTime
	ENDIF


; *  PrimeTime()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void PrimeTime(QElemPtr tmTaskPtr, long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		;	count           => D0
		_PrimeTime:	OPWORD	$A05A
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PrimeTime
	ENDIF


; *  RmvTime()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 7.1 and later
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void RmvTime(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		_RmvTime:	OPWORD	$A059
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION RmvTime
	ENDIF


;  InstallTimeTask, InstallXTimeTask, PrimeTimeTask and RemoveTimeTask work 
;  just like InsTime, InsXTime, PrimeTime, and RmvTime except that they 
;  return an OSErr result. 

; *  InstallTimeTask()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.0.2 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr InstallTimeTask(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		; returns:
		;	OSErr           <= D0
		_InstallTimeTask:	OPWORD	$A058
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION InstallTimeTask
	ENDIF


; *  InstallXTimeTask()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.0.2 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr InstallXTimeTask(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		; returns:
		;	OSErr           <= D0
		_InstallXTimeTask:	OPWORD	$A458
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION InstallXTimeTask
	ENDIF


; *  PrimeTimeTask()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.0.2 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr PrimeTimeTask(QElemPtr tmTaskPtr, long count)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		;	count           => D0
		; returns:
		;	OSErr           <= D0
		_PrimeTimeTask:	OPWORD	$A05A
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION PrimeTimeTask
	ENDIF


; *  RemoveTimeTask()
; *  
; *  Availability:
; *    Non-Carbon CFM:   in InterfaceLib 9.1 and later
; *    CarbonLib:        in CarbonLib 1.0.2 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal OSErr RemoveTimeTask(QElemPtr tmTaskPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		; parameters:
		;	tmTaskPtr       => A0
		; returns:
		;	OSErr           <= D0
		_RemoveTimeTask:	OPWORD	$A059
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION RemoveTimeTask
	ENDIF


	IF CALL_NOT_IN_CARBON THEN

; *  Microseconds()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        not available
; *    Mac OS X:         not available
; 

;
; pascal void Microseconds(UnsignedWide *microTickCount)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		_Microseconds:	OPWORD	$A193
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION Microseconds
	ENDIF

	ENDIF	; CALL_NOT_IN_CARBON

; *  NewTimerUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeTimerUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeTimerUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 



	ENDIF ; __TIMER__ 


;
;    File:       TypeSelect.a
;
;    Contains:   TypeSelect Utilties
;
;    Version:    Technology: Mac OS 9
;                Release:    Universal Interfaces 3.4
;
;    Copyright:  © 2000-2001 by Apple Computer, Inc., all rights reserved.
;
;    Bugs?:      For bug reports, consult the following page on
;                the World Wide Web:
;
;                    http://developer.apple.com/bugreporter/
;
;
	IF &TYPE('__TYPESELECT__') = 'UNDEFINED' THEN
__TYPESELECT__ SET 1

	IF &TYPE('__EVENTS__') = 'UNDEFINED' THEN
	include 'Events.a'
	ENDIF


; typedef SInt16						TSCode
tsPreviousSelectMode			EQU		-1
tsNormalSelectMode				EQU		0
tsNextSelectMode				EQU		1
TypeSelectRecord		RECORD 0
tsrLastKeyTime			 ds.l	1				; offset: $0 (0)
tsrScript				 ds.w	1				; offset: $4 (4)
tsrKeyStrokes			 ds		Str63			; offset: $6 (6)
sizeof					 EQU *					; size:   $46 (70)
						ENDR

; *  TypeSelectClear()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal void TypeSelectClear(TypeSelectRecord *tsr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_TypeSelectClear
			move.w              #$0028,-(sp)
			dc.w            	$A9ED
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION TypeSelectClear
	ENDIF

; 
;        Long ago the implementation of TypeSelectNewKey had a bug that
;        required the high word of D0 to be zero or the function did not work.
;        Although fixed now, we are continuing to clear the high word
;        just in case someone tries to run on an older system.
;    


; *  TypeSelectNewKey()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal Boolean TypeSelectNewKey(const EventRecord *theEvent, TypeSelectRecord *tsr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_TypeSelectNewKey
			moveq           	#0,D0
			move.w              #$002A,-(sp)
			dc.w            	$A9ED
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION TypeSelectNewKey
	ENDIF


; *  TypeSelectFindItem()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal short TypeSelectFindItem(const TypeSelectRecord *tsr, short listSize, TSCode selectMode, IndexToStringUPP getStringProc, void *yourDataPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_TypeSelectFindItem
			move.w              #$002C,-(sp)
			dc.w            	$A9ED
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION TypeSelectFindItem
	ENDIF



; *  TypeSelectCompare()
; *  
; *  Availability:
; *    Non-Carbon CFM:   not available
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 

;
; pascal short TypeSelectCompare(const TypeSelectRecord *tsr, ScriptCode testStringScript, StringPtr testStringPtr)
;
	IF TARGET_OS_MAC ** TARGET_CPU_68K ** ¬ TARGET_RT_MAC_CFM THEN
		Macro
		_TypeSelectCompare
			move.w              #$002E,-(sp)
			dc.w            	$A9ED
		EndM
	ELSEIF TARGET_OS_MAC ** TARGET_RT_MAC_CFM THEN
		IMPORT_CFM_FUNCTION TypeSelectCompare
	ENDIF


; *  NewIndexToStringUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  DisposeIndexToStringUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 


; *  InvokeIndexToStringUPP()
; *  
; *  Availability:
; *    Non-Carbon CFM:   available as macro/inline
; *    CarbonLib:        in CarbonLib 1.0 and later
; *    Mac OS X:         in version 10.0 or later
; 




	ENDIF ; __TYPESELECT__ 

